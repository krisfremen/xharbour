/*
 * $Id: ChangeLog,v 1.2926 2004/05/11 23:35:00 modalsist Exp $
 */

/* Use this format for the entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name <your_email@address>
   For example:
   2002-12-01 23:12 UTC+0100 Foo Bar <foo.bar@foobar.org>
*/

2004-05-11 23:20 UTC-0300 Eduardo Fernandes <eduardo@modalsistemas.com.br>
  * source/rtl/teditor.prg
    + Any fixes, enhancements and improvements: Tab management. Text scroll
      management, <insert> message, HardCR and SoftCR management.
      CTRL-T (Del word right) behaviour implemented. Any methods was added,
      others changed and rewrited. See teditor.prg to more details.

  * source/rtl/memoedit.prg
    + New memoedit parameter <lToggleExitSave> to toggle CTRL-W / CTRL-Q to
      exit with save, default is CTRL-W as Clipper. All changes was made to
      turn xHarbour memoedit more Clipper compatible.

  * source/rtl/ttextlin.prg
    + Added TabCol element to Tab management.

  * tests/medit.prg
    + Added medit.prg to test these changes.

2004-05-12 04:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/libct/addascii.c
  * xharbour/contrib/libct/bit1.c
  * xharbour/contrib/libct/bit2.c
  * xharbour/contrib/libct/bit3.c
  * xharbour/contrib/libct/files.c
  * xharbour/contrib/libct/pad.c
    * long to LONG changed

  * xharbour/contrib/libct/settime.c
    * correctly implemented SETNEWTIME and SETNEWDATE for Linux -
      remember that you need root privileges to use it.
      I still don't know why we have these functions (they are
      not part of CT) and didn't implement them directly inside
      SETTIME and SETDATE - it will be faster.

  * xharbour/include/hbapi.h
  * xharbour/source/vm/fm.c
    * fixed hb_xmem{cpy|set} to use only on 16bit platforms
      They were activated on 64bit machines when LONG was not hacked
      to 32bit size.

  * xharbour/include/hbdefs.h
    * HB_{GET|PUT}_{LE|BE}_{USHORT|ULONG} macros changed to
      HB_{GET|PUT}_{LE|BE}_{UINT16|UINT32} to make them basic C types
      (int,long) size independent and avoid confusion for programmers

  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/source/rtl/cdpapi.c
  * xharbour/tests/bldtest/bldtest.c
    * use new HB_{GET|PUT}_{LE|BE}_{UINT16|UINT32} macros instead
      of the old ones

  * xharbour/include/hbcomp.h
    + hb_compGenSwitchCase() to generate pcode for 32 or 64bit switch
      case value

  * xharbour/source/compiler/harbour.c
    + hb_compGenSwitchCase() to generate pcode for 32 or 64bit switch
      case value
    * hb_compGenPushLong() changed to operate on 32 and 64bit LONG 

  * xharbour/source/vm/macro.c
    * hb_compGenPushLong() changed to operate on 32 and 64bit LONG 

  * xharbour/source/compiler/harbour.sly
    * use hb_compGenSwitchCase() for HB_P_SWITCHCASE

>>>>>>> 1.2925
2004-05-12 04:05 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/gtwvt/gtwvt.c
    + define _WIN32_IE if not defined. For MinGW and Open-Watcom

2004-05-11 23:33 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/gtwvt/gtwvt.c
    + Wvt_DrawStatusbar()
      Draws Windows alike statusbar on the row ( defaults to maxrow() ) specified
      Panels. 

    + static void hb_wvt_gtCreateToolTipWindow( void )
      Creates and places the hWndTT returned by above function in _s.hWndTT member.

    + Wvt_SetTooltipActive( lYesNo )
      Get/Set flag to show or prevent tooltip to be displayed.

    + Wvt_SetToolTip( nTop, nLeft, nBottom, nRight, cToolText )
      Sets a tooltip to be displayed when mouse hovers over specified screen coordinates.

  * xharbour/include/hbgtwvt.ch
    + HWND hWndTT;
    + BOOL bToolTipActive;
      Added members to GLOBAL_DATA _s to hold functionality of tooltips.
    
    /*
    Functions above are the building blocks of upcoming Wvt*Classes and must not
    be used as per.

    The working classes which can be enhanced greatly per now are:

    WvtDialog():New( nRows, nCols, cBarTitle, cFont, nFontHeight, nFontWidth, nFontWeight )
       This adjusts the current window to above parameters and is the parent to all classes below.

    WvtBrowse():New( oParent, nID, nTop, nLeft, nBottom, nRight )
    WvtStatusBar():New( oParent, nID, nTop, nLeft, nBottom, nRight )
    WvtPanel():New( oParent, nID, nTop, nLeft, nBottom, nRight )

    Now the point is where this class library be put on CVS?

    My proposal is it should be part of existing gtwvt.lib and be placed 
    in source/rtl/gtwvt alongwith gtwvt.c. But more knowledgable comments are welcome.

    Please note that these classes are enhancement over and above the normal
    behavior of GTWVT and in no way interrupt its functioning. Instead, developer is 
    free to use the classes per requirements.
    */

2004-05-11 09:27 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/philes.c
    * Added optional 4th parameter nOffset to FRead() and FWrite() allowing offset into passed buffer.

  + source/rtl/stream.prg
    + New classes TStream(), TStreamFileReader(), TStreamFileWriter()
    + New constructor functions FileReader() and FileWriter()

  * hrbdll.bc
  * hrbdll.vc
  * makefile.bc
  * makefile.nt
  * makefile.vc
  * source/rtl/Makefile
    + Added new stream.prg

  + tests/tststream.prg
    + test of new Streams.

2004-05-11 16:06 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/console.c
    ! Reverted last changes. This leaves the "open" problem of CRLF bound
      printers in unix (has lpr automatic conversion? has the user to use
      sed?), but the good solution is that of eventually add a SET TERMINATOR
      or something the like.

2004-05-11 14:10 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * contrib/libct/ctmisc.prg
    ! Fixed CENTER() to accept NIL value as the first parameter.

2004-05-11 03:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/bsd/gcc.cf
    - removed copy of config/rules.cf - I don't know why it was there
      (if I committed it then sorry - it was done by mistake)

  * xharbour/config/darwin/gcc.cf
    * some minor cleanups

  * xharbour/source/compiler/harbour.c
  * xharbour/source/compiler/harbour.sly
  * xharbour/source/vm/fm.c
  * xharbour/source/vm/hvm.c
  * xharbour/utils/hbpp/hbpp.c
    * do not use malloc.h as far as is not strictly necessary by some
      old compilers - malloc.h has been obsoleted by stdlib.h - in such
      case add malloc.h to hbdefs.h only or this compiler
      Some contrib files should be cleaned too.

2004-05-11 04:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/hvm.c
    ! minor correction on function __TRACEPRGCALLS for MT compilation.

2004-05-11 08:40 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/gtwin/mousewin.c
    - HB_GT_FUNC(mouse_IsButtonPressed( int iButton ) - copy code from gtwvt.c
      Fixes MLEFTDOWN() & MRIGHTDOWN()

2004-05-10 12:20 UTC-0300 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/rtl/dbedit.prg
    ! Fixed empty column behavior in parameters (Clipper compat)

2004-05-10 16:39 UTC+0200 Mindaugas Kavaliauskas <dbtopas/at/dbtopas.lt>
  * source/vm/macro.c
    * Argument is passed to error block in case of argument or syntax error


2004-05-10 15:26 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/console.c
    ! print files and print pipes must be sent the command sequence CRLF
      independently from the underlying system. So,

      hb_fsWrite( hb_set.hb_set_printhan, ( BYTE * ) s_szCrLf, CRLF_BUFFER_LEN - 1 );

      has been changed:

      hb_fsWrite( hb_set.hb_set_printhan, ( BYTE * ) "\r\n", 2 );

      /* notice: the RIGHT way to do this is to still retain ( BYTE * ) s_szCrLf (different
         from system to system), and to use ioctl to automatically translate "\n" unix chars
         into CRLF printer control sequence if the priter handler is redirected to a raw
         printer (piped to lp/lpr).
      */


2004-05-10 13:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/gtwvt/gtwvt.c
    ! fixed some warnings reported by Lorenzo. Please check it since
      I cannot test it on Linux.

2004-05-10 12:30 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>

   * xharbour/config/os2/gcc.cf
     ! add rtl after all rdd lib to resolve all symbols on hbrun building
   * xharbour/include/hbdefs.h
     ! LONGLONG/ULONGLONG defines did not respect HB_DONT_DEFINE_BASIC_TYPES define
   * xharbour/include/thread.h
     + added OS/2 support
   * xharbour/source/rdd/dbcmd.c
     + added || defined(HB_OS_OS2) to multithreaded support
   * xharbour/source/rdd/dbfcdx/Makefile
   * xharbour/source/rdd/dbfdbt/Makefile
   * xharbour/source/rdd/dbffpt/Makefile
     + added mt libname when building an MT version of xHarbour
   * xharbour/source/rtl/bkgtsks.c
     - removed an INC_xxx macro not needed
   * xharbour/source/rtl/console.c
     + added || defined(HB_OS_OS2) to multithreaded support
   * xharbour/source/rtl/hbserv.c
     - removed an INC_xxx macro not needed
   * xharbour/source/vm/fm.c
     - removed an INC_xxx macro not needed
   * xharbour/source/vm/thread.c
     + added OS/2 support
   * xharbour/tests/Makefile
     ! fixed mt libnames
     + added OS/2 support
   * xharbour/tests/mttest.prg
     ! @ x,y SAY is not atomic, so text gets everywhere on screen, using DispOutAt() fixes this issue
   * xharbour/utils/hbrun/Makefile
     + added socket lib to OS/2 build

   /* NOTE: This is a big commit to add multithreading support to OS/2 build of xHarbour

            Multithreading works ok now, mttest and mtstress (under tests\) work nicely

            As of today it is _required_ at least fixpack 29 for Warp 3 and fixpack 4 for Warp 4 to be able
            to run a MT build of xHarbour on OS/2 (this shouldn't be such a big of a issue)

            OS/2 MT support follows WIN32 one as close as possible, I want to thank Giancarlo Niccolai
            for his support and for the help he gave me several times while I was trying to make MT run on OS/2

            I hope I did not break anything, but, since we're approaching beta 1, I really wanted to have MT
            support here to let those few still using OS/2 to be able to test it.

            PS. I want to "dedicate" this last weekend of efforts to my "folletta" Maria <laviadellaseta@hotmail.com> ;)
   */

2004-05-10 01:52 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    + Added logic to disallow Destructor calls on faked super objects, as well as temp super objects created with __clsInstSuper()

2004-05-10 05:50 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/dbgmenu.prg
  * source/debug/debugger.prg
  * source/debug/tbrwtext.prg
    ! Fixes and improvements to debugger commands and script file operations.

2004-05-09 22:00 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/pp/pptable.c
    ! minor fix to @ tbrowse command(tbreader require 4 parameters, was reciving 3 with was blowing get system

2004-05-09 17:16 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbdefs.h
    ! Corrected HB_LL() definition for BCC

2004-05-10 01:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/str.c
    - moved HB_POINTER2STRING and HB_STRING2POINTER to separate
      file str2ptr.c
  + xharbour/source/rtl/str2ptr.c
    + HB_POINTER2STRING and HB_STRING2POINTER from str.c changed
      to operate on HB_IT_POINTER instead of HB_IT_LONG

  * xharbour/hrbdll.bc
  * xharbour/hrbdll.vc
  * xharbour/hrbdll.wc
  * xharbour/makefile.bc
  * xharbour/makefile.nt
  * xharbour/makefile.vc
  * xharbour/makefile.wc
  * xharbour/source/rtl/Makefile
    * added str2ptr.c

  * xharbour/source/vm/arrayshb.c
    * changed to operate on HB_IT_POINTER instead of HB_IT_LONG

  * xharbour/source/vm/runner.c
    * use HB_PCODE_MK* macros
    * changed to operate on HB_IT_POINTER instead of HB_IT_LONG
      still prgFunction and hb_hrbAsm*() functions are for IA32
      machines only and not portable (implemented) to any other

  * xharbour/include/hbdefs.h
    + new macro HB_LL to resolve the problem with MSC which doesn't
      support LL suffix for LONGLONG numeric constant. This suffix
      is necessary for some compilers - without it they cut the
      number to LONG

  * xharbour/source/rtl/gtgraph.c
  * xharbour/utils/hbtest/rt_ccall.prg
    * use HB_LL macro

  * xharbour/source/compiler/harbour.c
    * commented out unused function hb_compVarFind()

  * xharbour/source/rtl/filesys.c
    * fixed hb_fsLock for MSC and MINGW caused by hack in hb_fsSeek and
      32bit offset - personally I think we should move this hack to FSEEK
      (if it's necessary at all - it emulates DOS not Clipper behavior)
      so RDD will be able to operate on 4GB files with 32 bit API.

2004-05-09 23:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/vm/classes.c
    * hb_clsAddMsg args changed to avoid pointer<->LONG conversions
    ! fixed __CLSMODMSG to use hb_parptr not hb_parnl

  * xharbour/source/vm/thread.c
    ! fixed StartThread to check for HB_IT_POINTER not HB_IT_LONG

  * xharbour/source/vm/hvm.c
    * small modification for 64bit LONG support in the future.

2004-05-09 13:50 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/simplex.c
    * Corrected some compilation warnings.

  * source/compiler/harbour.slx
    * Minor optimization

2004-05-09 03:59 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/pp/ppcore.c
    ! Corrected & as continuation operator only when followed by white space.

2004-05-08 22:21 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    ! Fixed GPF Trap related to uninitialized .type when seaching in Hashes.

2004-05-08 19:53 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/simplex.c
    * Minor revisions.

  * source/compiler/harbour.slx
    ! Fixed GPF Trap related to unterminated string error.

2004-05-09 23:33 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbdefs.h
    * new macros HB_{GET|PUT}_{LE|BE}_UINT{24|64} to retrieve/store
      24 and 64 bit integers in endian independent way

  * xharbour/source/rdd/rddord.prg
    + ORDWILDSEEK(cPatern, [lCont]) added (rather to illustrate posibilities)
      of new DBOI_SKIP{WILD|EVAL|REGEX} then final function. After beta1
      release I'll implement all the ORD{WILD|EVAL|REGEX}SEEK functions on
      C level

  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/workarea.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/source/rdd/dbfdpt/dbfdbt1.c
    + added suport in DBF files for: "I" (binary integer, len: 2, 4, 8),
      "D" (binary date, 3), "B" (binary double, 8) fields and some small
      fixes for "M" (4)

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed problem with SOFTSEEK on on filtered database int the same
      way as Alexander done in Harbour

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * casting added

  * xharbour/source/rtl/gtxvt/gtxvt.c
    ! removed unexisting macros HB_INKEY_RAW and HB_INKEY_EXTENDED

2004-05-08 13:31 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hash.c
    ! Fixed multiple GPF Traps, related to uninitialized ->Type in elements of ->pKeys, and ->pValues arrays.
    * Corrected dangerous usage of same variable (ulPos) in 2 different contexts within same function.
    * Formated.

2004-05-08 16:3 UTC-0300 Mauricio Abre <maurifull@datafull.com>
  * source/rtl/gtalleg/gtalleg.c
    - Removed HB_INKEY_RAW & HB_INKEY_EXTENDED support

2004-05-08 20:05 UTC+0200 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/rtl/gtxvt/gtxvt.c
    - removed HB_INKEY_EXTENDED checks that now it's not defined
    /*
      this was in line 4106 where there is still HB_INKEY_RAW, but this
      is still defined. Is it necessary ?

      Lorenzo ?
      BTW great work.
    */

2004-05-08 10:39 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/compiler/harbour.slx
    + Added logic to restore '\\' to '|' in hb_comp_SLX_LastBlock()
      when Block contains Macro, but more then just the Macro,
      and thus created as Macro from string representation.

  * source/compiler/harbour.sly
    ! Fixed support for nested Codeblocks where one or more of the blocks includes a Macro.

2004-05-08 20:30 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/dbgbrwsr.prg
    ! Fixed runtime error when Monitored variables list became empty under
      certain circumstances.
  * source/debug/dbgmenu.prg
  * source/debug/debugger.prg
    ! On startup, correctly visualize some menu options preset in the
      settings file.

2004-05-08 20:40 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/cmdarg.c
    ! fixes for C++ mode (put initialization variables and function
      hb_SetWinMainParameters() under extern "C" )

2004-05-07 22:24 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/common/expropt2.c
  * source/vm/hvm.c
    * Corrected AND, OR and XOR bit operators to return numeric.

  * tests/tstbitop.prg
    * Updated to reflect above correction.

  * source/pp/ppcore.c
    + Added support for new BIT operators in getExpReal()

2004-05-07 21:22 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexpra.c
  * include/hbexprb.c
  * include/hbexprop.h
  * include/hbpcode.h
  * source/common/expropt1.c
  * source/common/expropt2.c
  * source/compiler/genc.c
  * source/compiler/harbour.c
  * source/compiler/harbour.slx
  * source/compiler/harbour.sly
  * source/compiler/hbfix.c
  * source/compiler/hbpcode.c
  * source/vm/hvm.c
    + Added support (including compile time optimization) for BIT operations:
     AND, OR, XOR, SHIFT RIGHT, SHIFT LEFT. Except for 'XOR' C syntax is used:
         &  == and
         |  == or
         ^^ == xor
         >> == shift right
         << == shift left

    Please NOTE that 'AND' (&) *requires* trailing white space, or else MACRO Context will
    be assumed, to maintain Clipper compatability.

  + tests/tstbitop.prg
    + New test for BIT operations.

  * tests/pp_harb.ch
     ! Fixed to reflect latest changes in PP.prg

  * tests/ppclass.prg
    * Minor formatting.

2004-05-08 11:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/persist.prg
    - valToStr() - added explicit test for ValType("L")

2004-05-08 01:40 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/debugger.prg
    ! Save LastKey() value on activation of debugger and restore it when
      running the application.
  * source/rtl/inkey.c
    * A little code cleanup in __KEYBOARD().

2004-05-07 19:30 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rtl/gtwin/gtwin.c
    - Commented out wKey left for future use
  * tests/inkeytst.prg
    - Removed HB_INKEY_RAW and HB_INKEY_EXTENDED

2004-05-07 09:30 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/compiler/hbusage.c
    + Added missing credit of Marek Paliwoda

2004-05-07 09:20 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/win32ole.prg
    - Commented out redundant SafeArrayDestroy()

2004-05-07 09:10 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/cmdarg.c
    + Added missing include <windows.h>

2004-05-07 17:30 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * include/inkey.ch
  * source/rtl/gtwin/gtwin.c
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/gtcrs/gtcrs.c
  * source/rtl/gtxvt/gtxvt.c
    * added support for K_SH_UP, K_SH_DOWN, K_SH_LEFT, K_SH_RIGHT
    * removed HB_INKEY_RAW, HB_INKEY_EXTENDED, HB_K_MULTICODE from inkey.ch
  * source/odbc/hdo_odbc.prg
    * added more error checking
  * source/rdd/dbcmd.c
    * used hb_conNewLine() instead of fixed \r\n

2004-05-07 12:00 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/rtl/tgetlist.prg
    ! minor fix on envar when using get with tbrowse( ::nLastExitStat to ::nLastExitState )

2004-05-07 16:45 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/debugger.prg
    * Fixed behaviour for paths ending with directory delimiters.

2004-05-07 16:15 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/dbgtarr.prg
    ! Fixed monitoring of empty subarrays.

2004-05-07 14:00 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * contrib/libct/count.c
    ! Fixed COUNTLEFT() and COUNTRIGHT(), thanks to Valery Belorustcev.

2004-05-07 15:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/filesys.c
    - fixed typo :  proc.dwProcessID -> proc.dwProcessId

  * contrib/winprn/tprint.prg
    - added missing
          #include "hbapiitm.h"

2004-05-07 11:45 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/vm/cmdarg.c
  * source/vm/mainwin.c
    - Move global variables from mainwin -> cmdarg
    + added hb_SetWinMainParameters()

    Changes required to allow linking to harbour.dll

  * source/rtl/inkey.c
    - Fix Warning 'bContinue' is assigned a value that is never used

2004-05-06 12:05 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/pp/ppcore.c
    + Added '=' as an explicit terminator of Extended Marker in getExpReal() (Clipper compatability).

  * source/rtl/direct.c
    % Minor optimization - in general we should NOT use temporary item for Return Result.
      Please use &HB_VM_STACK.Return directly - this happens in MANY MANY places.

2004-05-05 12:08 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/filesys.c
     + added HB_OPENPROCESS, HB_PROCESSVALUE and HB_CLOSEPROCESS to OS/2 xHarbour

2004-05-04 11:36 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
   * source/vm/cmdarg.c
     ! moved declaration of iHandles to top of function so it can compile w/o
       error under BCC

2004-04-28 16:20 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/philes.c
  * source/rtl/filesys.c
  * include/hbapifs.h
    + Added sixth optional parameter to HB_OPENPROCESS that may hold the process
      ID number in return.
      Not a real "fix", but it's a vital information to many application and
      it has been missing for too much time.

2004-05-04 18:43 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/filesys.c
     ! fixed a syntax typo on OS/2 section around line 2063
   * source/rtl/net.c
     ! removed _gethostname #define, not anymore needed using Innotek GCC 3.2.2

2004-05-04 18:33 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
   * contrib/libct/fcopy.prg
     ! filecopy() did not close copyed file
   * contrib/libct/files.c
     * (re?)enabled a couple of already available OS/2 sections

2004-05-04 18:21 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
   * source/vm/arrays.c
     ! line 1562 did not compile with tracing on
   * source/vm/cmdarg.c
     + added OS/2 support to //F: CLIPPER= environment variable switch

2004-05-04 17:55 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * config/os2/gcc.cf
    * switched to gcc version 3.2.2 (Innotek Build 2004-02-23 14:15), so I had to add -DTCPV40HDRS to
      compile using 16/32 bit tcp stack as available on OS/2 v4.x
    + addes -static -s to LD flags to build .exe files which don't require Innotek LIBC .dll, since
      this is a compiler suite (xHarbour, I mean) I create .exe files which run as they are without any other
      prerequisite. (This makes it possible to use a GCC compiled harbour.exe to emit C code which gets compiled
      by a different C compiler, let's say watcom for OS/2)
  * config/os2/global.cf
    + addef an ifndef MF on top of it to stop clean rule redefinition, without this clean was executed 4
      times for each make clean invocation

2004-05-03 20:21 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * tests/pp.prg
  * tests/pp.txt
  * tests/rp_run.src
    + Added support for FOR EACH [HB_EnumIndex()] [LOOP] [EXIT] NEXT

2004-05-04 12:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rdd/dbf1.c
  * source/rdd/dbfdbt\dbfdbt1.c
  * source/rdd/dbffpt\dbffpt1.c
    - Changes to correctly support Creating, Reading & Writing Visual Foxpro
      0x30 type DBF files.
      Note: Only basic Clipper field types ( C/D/N/M/L ) are supported ( ATM )
  * source/rdd/dbf1.c
    + HB_FUNC( DBSETDBFVERSION )
      Function to allow setting default DBF creation type to VFP 0x30
      Valid options are 0x30 and 0x03 ONLY ( Default DBF type is 0x03 as it always has been )

      I have extensively tested these changes and have not encountered any problems
      Please report any problems found ASAP so they can be corrected before release
      of Beta-1

2004-05-03 19:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed indexing single record with RECORD clause as subindex.

  * xharbour/source/rdd/dbffpt/dbffpt1.c
    * TABs replaced by SPACEs

  * xharbour/source/vm/hvm.c
    * finished the modification I had to missed in one of my previous
      commit - I've just noticed it replaying to Gian email.
      BTW - Why stack frame index was in xHarbour in pDynSym not in
      pFunPtr of HB_SYMB structure like in Harbour?
      Ron, Gian can this modification interact with something else?

2004-05-03 10:00 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * utils/hbmake/hbmake.prg
    utils/hbmake/hbmutils.prg
    ! fixed to problem reported by bill robertson
  ! utils/hbmake/pickarry.prg
    ! Formated

2004-05-03 13:25 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  + xharbour/rtl/gtwvt/ChangeLog
    Added WVT specific ChangeLog entries compiled from CVS root ChangeLog
    files. If possible, please make the WVT specific entries in above
    file also. If not, I will ever try to keep it uptodate.

2004-05-02 23:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/pgsql/postgres.c
  * xharbour/doc/howtoext.txt
  * xharbour/source/vm/inet.c
  * xharbour/source/vm/thread.c
    * hb_parpointer() replaced by hb_parptr() - please note that
      hb_parpointer() is obsolete and will be removed in the future

2004-05-02 21:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/dos/djgpp.cf
    * use -Wl,--start-group / -Wl,--end-group switches to resolve problem
      with cross references between RTL and other libraries

  * xharbour/contrib/libct/settime.c
    * implement WAITPERIOD in the way I understand its description
      not as MILLISEC synonym
    * removed stime from DJGPP build

  * xharbour/source/rtl/gtdos/gtdos.c
    * cleaned some warnings

2004-05-02 15:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    % some improvements in sorting algorithm to reduce number of
      memcpy calls. The results of indexing database with 1'000'000
      records on Linux (Athlon XP 2000) are quite nice:
         creating index (D)...   1.79 sec.      558659 records per sec.
         creating index (C)...   2.03 sec.      492853 records per sec.

2004-05-02 14:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed typo in read buffer size condition which cause index corruption

2004-05-02 12:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + added buffered read when SET STRICTREAD is OFF and index is not
      subindex
    * the sort algorithm changed (QUICK SORT is nice but it depends
      data order and the cost could be random - current version has
      static cost and works faster then in optimistic
      situation quick sort - the trick is done using second memory
      buffer.
    * reduced maximum buffer size to 2MB - the tests shows it's quite
      enough.

  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/itemapi.c
    ! fixed bug with uninitialized item.asPointer.collect in
      HB_IT_POINTER item

2004-05-01 01:00 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * dll_b32.bat
     * if obj\dll dir dont exist, create first, Report by Bill Robertson

2004-04-30 21:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/xharbour.spec
    * reinabled GTALLEG - I don't know when and why it was disabled.

  * xharbour/contrib/libct/settime.c
    * commented out unused params to avoid warnings

  * xharbour/source/rtl/hbserv.c
    ! fixed param checking in HB_PUSHSIGNALHANDLER - it should be
      HB_IT_POINTER not HB_IT_LONG

  * xharbour/source/rtl/inkey.c
    * HB_SYMBOLUNUSED added to avoid warning

  * xharbour/source/vm/hvm.c
    * cleand hb_vmForTest() - it was possible that some variables
      were used uninitialized when <counter> was differ type then
      <end value> (LOGICAL<->NUMBER) instead of error reporting.

2004-04-30 11:55 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * include/getexit.ch
    - removed redundant #ifdef HB_COMPAT_C53 (it's defined in hbsetup.ch already)

2004-04-30 09:10 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
   * source/vm/itemapi.c
     * Formatting.

   * source/vm/codebloc.c
   * source/vm/memvars.c
     - Removed recently added hb_memvarReleaseDetached() and logic to reset Detached Local Flag.
       /* Flag is reset on creation of new memver. Pramature Reset caused GC to use the item in sweep scan.*/

2004-04-30 17:15 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rtl/gtwvt/gtwvt.c
    * added casts for OpenWatcom
  * source/rdd/dbfcdx/dbfcdx1.c
    * added HB_CDX_THREAD_SORT for OpenWatcom to fix qsort bug

2004-04-30 17:50 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/include/hbgtwvt.h
    + #define WVT_FONTS_MAX  20
    + #define WVT_PENS_MAX   20
    + HFONT hUserFonts[ WVT_FONTS_MAX ]
    + HPEN  hUserPens[ WVT_PENS_MAX ]
      Array to hold user defined fonts and pens. The objects thus held are
      released automatically when application terminates.

  * xharbour/source/rtl/gtwvt/gtwvt.c
    * Wvt_LoadPicture( nSlot, cImageFile )
      Reversed the parameter order for generic compatibality with other such functionality.

    * hb_wvt_gtDrawImage()
    * hb_wvt_gtRenderPicture()
      A big bug fixed which was causing Resource leak which was crashing the  application
      on OS which had low resource profiles such as Win9x family.

    + Wvt_LoadFont( nSlot, cFontFace, nHeight, nWidth, nWeight, lItalic, ;
                    lUnderline, lStrikeout,nCharSet, nQuality, nEscapement )
      Creates the font with requested attributes and stores the handle
      in _s.hUserFont[ iSlot ( nSlot - 1 ) ]

    + Wvt_LoadPen( nSlot, nStyle, nThick, nRGBColor )
      As above.

    + Wvt_DrawLabelEx(  nRow, nCol, cLabel, nAlign, nTextColor, nBkColor, nSlot )
      Just like Wvt_DrawLabel() but with reduced parameters substituting <nSlot>
      for all parameters related with font used. This way the need to recreate
      the same font over and over is eliminated.

    + Wvt_DrawLineEx( nTop, nLeft, nBottom, nRight, nOrient, nFormat, nAlign, nSlotPen )
      Similar to Wvt_DrawLine() but substituting pen parameter with <nSlotPen>.

    + Wvt_DrawOutlineEx( nTop, nLeft, nBottom, nRight, nSlotPen )
      Similar to Wvt_DrawOutline() but substituting pen parameter with <nSlotPen>.

  * xharbour/tests/wvtgui.prg
    Updated to demonstrate the mechanism achieved with above functions.

  /*
     It is a common practice with every application to have common pens and fonts
     for a variety of purposes. So, to speedup the refresh time, AND, more importantly,
     to prevent GDI resources to be exhausted ( Win9x systems ), this mechanism has
     facilitated superbly. Hope you all will find it useful.

     With the above update I have achieved the complete stability of my applications
     on all versions on Windows.
  */

2004-04-29 20:49 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/pp/pptable.c
    ! Reverted hack related to DEVOUT() and DEVOUTPICT() that broke Clipper compatibility.

2004-04-29 18:19 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/pp/ppcore.c
    ! Fixed support for Extended Marker in getExpReal() to allow any character except explicit exclusions.

2004-04-29 16:21 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    ! Fixed management of inherited properties in __CLSNEW().

2004-04-29 10:56 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    ! Fixed [real bad] GPF traps realted to unitialized .type member of HB_ITEM.

2004-04-29 09:51 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/memvars.c
    ! Optimized to compile RegEx only once when scanning memvars.

2004-04-29 08:45 UTC-0400 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/fserror.c
    * Added defined(HB_OS_WIN_32) to each (HB_WIN32_IO) because MSVC family
      compiler don't report the right error number.
    Ex: if hb_fsdelete() failed the error number was 0

2004-04-28 15:47 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/itemapi.c
    * MSVC uses _snprintf() instead of snprintf()

2004-04-28 15:23 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbapi.h
    * Moved HB_EXPORT qualifier infront of pointer type (really we should always use HB_EXPORT as *first* token)

  * source/vm/codebloc.c
  * source/vm/fastitem.c
    + Added commented-out debugging TraceLog().

  * source/vm/memvars.c
    ! Fixed hb_memvarsRelease() to avoid double releasing.

  * tests/pp_harb.ch
    ! Fixed to support recent changes to Symbol structure.

2004-04-28 20:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/linux/gcc.cf
    + fPIC added for some platforms - disabled by default

  * xharbour/include/hbdefs.h
    + some modification for 64bit platforms

  * xharbour/include/hbstack.h
    + proper casting for stack macros on 64bit platform

  * xharbour/include/hbvmpub.h
    * added
       union {
          PHB_FUNC pFunPtr;
          int iStaticsBase;
       } value
      to HB_SYMB structure to remove pointer/int conversion
      the modification synchronized with Harbour and Ryszard Glab's
      changes.

  * xharbour/include/hbcomprs.h
  * xharbour/include/hbnxs.h
    * changed to use xHarbour types

  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/source/compiler/genc.c
  * xharbour/source/rdd/delim1.c
  * xharbour/source/rdd/sdf1.c
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * changed to use new HB_SYMB structure

  * xharbour/source/rdd/dbcmd.c
    * changed to use new HB_SYMB structure
    * hb_rddFieldGet()/hb_rddFieldPut() returns error code from low level RDD
      The side effect of this could be double error reporting in some RDD
      but it seems better then silent error ignoring

  - xharbour/source/rdd/dbfcdx/dbfcdx1.h
  * xharbour/include/hbrddcdx.h
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed Clipper compatibility bug when skipping from EOF
      position but EOF flag is not set (we cannot use fEOF flag for
      checking if record is at EOF because it could be cleared by
      skip())
    ! fixed Clipper compatibility bug when creating index for READONLY WA
      the index is open now in READWRITE mode
    * changed AUTOPEN action and production index flag setting if macro
      HB_CDX_CLIP_AUTOPEN is set (default) then it's working like in Clipper:
      doesn't check production index flag before opening and set it only
      when AUTOPEN is ON
    * changed to use new HB_SYMB structure
    * removed all pointer/long castings
    * rewritten indexing procedure - now it's more then 3 times faster and
      portable to other systems with non 32bit pointer
      From my simple test (old version):
        records: 1000000
        creating databse...        31.40 sec.
        creating index (D)...      13.39 sec.   74682 records per sec.
        creating index (C)...      13.40 sec.   74638 records per sec.
        Total execution time...    58.65 sec.
      With new code:
        records: 1000000
        creating databse...        31.46 sec.
        creating index (D)...       2.96 sec.  337952 records per sec.
        creating index (C)...       3.45 sec.  289435 records per sec.
        Total execution time...    40.19 sec.

  * xharbour/source/rdd/dbf1.c
    ! fixed problem with opening DBF in EXCLUSIVE READONLY mode in POSIX
      systems - EXCLUSIVE/SHARED mode is emulated on by fcntl locks and
      such mode doesn't exist so the database is opened in SHREAD/READONLY
      mode
    * changed to use new HB_SYMB structure

  * xharbour/source/rtl/filesys.c
    ! fixed bug in hb_fsLock for MSC and MINGW - it changed the file offset
      possition into lock offset

  * xharbour/source/rtl/hbhex2n.c
    * some modification to work with different pointer size

  * xharbour/source/rtl/hbserv.c
  * xharbour/source/rtl/idle.c
  * xharbour/source/rtl/trace.c
  * xharbour/source/vm/arrays.c
  * xharbour/source/vm/arrayshb.c
  * xharbour/source/vm/classes.c
  * xharbour/source/vm/dynsym.c
  * xharbour/source/vm/estack.c
  * xharbour/source/vm/eval.c
  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/initsymb.c
  * xharbour/source/vm/itemapi.c
  * xharbour/source/vm/macro.c
    * changed to use new HB_SYMB structure
    * removed all pointer/long castings
    * use HB_IT_POINTER instead of HB_IT_LONG

  * xharbour/include/hbapi.h
  * xharbour/source/vm/extend.c
    + hb_parptr()/hb_storptr()/hb_retptr() to operate on HB_IT_POINTER
    + hb_retptrGC() to work with pointer allocated by hb_gcAlloc()

  * xharbour/source/vm/runner.c

  * xharbour/tests/onidle.prg
    * use HB_IT_POINTER item not HB_IT_LONG

  * xharbour/source/vm/thread.c
  * xharbour/source/vm/inet.c
  * xharbour/contrib/xwt/src/xwt_api.c
    * use hb_retptrGC() instead of hb_retptr()

  * xharbour/doc/howtoext.txt
    * updated documentation for hb_retptr()/hb_retptrGC()
      please someone good in English to extend it.
      hb_retptrGC() return pointer which will be scanned by GC and has
      to be allocated by hb_gcAlloc()
      hb_parptr()/hb_storptr()/hb_retptr() can operate on any type of
      pointers - please us it instead of pointer to LONG conversion

For full 64bit port we have to clean yet:
hbxml.c, arryshb.c (HB_ARRAYTOSTRUCTURE/HB_STRUCTURETOARRAY), runner.c
(this will be the most difficult if we want to keep multiplatform
compatibility)

2004-04-28 08:01 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * source/rdd/dbfntx/dbfntx1.c
    ! Changed error code returned by ntxSeek() to 1201 (was 1020)
       so it returns same error code as Clipper

2004-04-28 16:20 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/teditor.prg
    + Added method GetTextIndex() to retreive current row/col meaning in
      text position. The number returned is the character index inside
      the text where the cursor is currently hanging (or was hanging when
      callbacks function has been called).

2004-04-28 02:55 UTC-0800 Brian Hays <bhays@abacuslaw.com>

  * contrib/rdd_ads/ads1.c
    *  dbOrderInfo(DBOI_KEYCOUNT) was off by 1 if both filter and scope were set.

  * contrib/rdd_ads/adsfunc.c
    * fixed arg checking in adsKeyNo and adsKeyCount (thanks to Luis for his help!)
    * Borrowed Randy Portnoff's updated ADSCOPYTABLE from Harbour, reformatted:
      2004-04-27 12:57 UTC-0500 Randy Portnoff <randy@palmasdev.com>
      * contrib/rdd_ads/adsfunc.c
      Changes to ADSCOPYTABLE as follows:
      + added logical return value
      + added second optional param for ADS filter option
      + Now uses default index order if set

  * source/vm/hvm.c
    * minor typo in trace text
  * doc/howtoext.txt
    * minor fixes; also added paragraph re use of HB_IT_ANY for
      parameter checking of optional parameters

2004-04-27 15:32 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * hrbdll.bc
    + Added missing inet.c
      /* Luis, how did you manage to build after adding <hblognet.prg> ? */

2004-04-27 15:03 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/memvars.c
    ! Fixed hb_memvarValueDecGarbageRef() to reset the Detached Local Flag (called only from codebloc.c)
    + Added void hb_memvarReleaseDetached( HB_HANDLE hValue ) which calls hb_memvarValueDecRef()
      but also resets the Detached Local Flag (called only from codebloc.c)

    - Commented if() condition related to Detached Locals in hb_memvarsRelease[MT]()
      /* IF we get new GPF reports I will need to restore it and provide additional fix,
         but I don't belive it is very likely. */

  * source/vm/codebloc.c
    ! Fixed hb_codeblockDelete() to call hb_memvarReleaseDetached() instead of hb_memvarValueDecRef()

2004-04-26 20:50 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/include/hbgtwvt.h
    + #define WVT_PICTURES_MAX  20
    + IPicture _s.iPicture[ WVT_PICTURES_MAX ]
      Array to hold image stream loaded by hb_wvt_gtLoadPicture().

  * xharbour/source/rtl/gtwvt/gtwvt.c
    + hb_wvt_gtLoadPicture()
    + hb_wvt_gtRenderPicture()
    + Wvt_LoadPicture( cImageFile, nSlot )
    + Wvt_DrawPicture( nTop, nLeft, nBottom, nRight, aAdjPixels )
      hb_wvt_gtDrawImage() code is broken in two section, 1) to load image,
      and 2) render image. The image thus loaded is retained in _s.iPicture[ iSlot ]
      array slot and rendered when required.

    * Wvt_DrawImage()
    * Wvt_DrawButton()
      Now both these functions accept <cImage/nImageSlot> as its respective parameter.

  * xharbour/tests/wvtgui.prg
    Updated to demonstrate the mechanism achieved with above functions.

  /*
     It is a common practice with every application to have common buttons and images
     for a variety of dialogs. So, to speedup the refresh time, AND, more importantly,
     to prevent GDI resources to be exhausted ( Win9x systems ), this mechanism has
     facilitated superbly. Hope you all will find it useful.
  */

2004-04-27 08:20 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * hrbdll.bc
    ! Added missing entry for hblognet.prg

2004-04-26 12:31 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/dynsym.c
    * Fixed minor bug where wrong source module would be associated with a given symbol.

2004-04-26 17:40 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/odbc/odbc.c
    * added SqlStoD
  * source/odbc/hdo_odbc.prg
    * added ExecuteReader to Command object cleaned code and error reporting

2004-04-26 15:00 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * bin/bld.bat added hbodbc.lib and odbc32.lib to OpenWatcom and mingw
    libs list
  * source/odbc/hdo_odbc.prg
    * object RecordSet renamed to Reader

2004-04-26 14:20 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/odbc/odbc.c
    * added SqlPrepare, SqlExecute, SqlExecuteScalar
  + source/odbc/hdo_odbc.prg
    * simpler and hopefully faster object layer over odbc.c

2004-04-26 16:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/gtwvt/gtwvt.c
    ! remove __XCC__ defines

2004-04-26 07:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/gtwvt/gtwvt.c
    ! add definition of IDC_HAND to allow compilation when WINVER < 0x0500

2004-04-25 18:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * contrib/winprn/tprint.prg
    ! major changes on font data collecting routine to permit usage of
      TPrint class under XCC (previously GPF when executing callback)
      (This is a very rough fix though. XCC fails to execute callback
       function "the normal way" while GCC, BCC, MSVC and OW are doing OK)

  + source/rtl/hbmd5.c
    + md5 digest routine for a given string or file by: Dmitry V. Korzhov.

  + tests/md5file.prg
  + tests/md5test.prg
    + test program for hb_md5 routine.

    /*
    Useful for:
    1. Password encryption
    2. File indentification
    3. Indexing long character field ( index on HB_MD5( field  ) ... )
    4. etc.
    Note: I know we are in release freeze but this particular routine won't
          affect anything and it is worthy to have it under RTL.
    */

  * hrbdll.bc
  * hrbdll.vc
  * hrbdll.wc
  * makefile.bc
  * makefile.vc
  * makefile.nt
  * makefile.wc
    + add hbmd5.obj file dependency

2004-04-25 12:55 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/gtwvt/gtwvt.c
    + Wvt_CreatePopupMenu()
      Returns handle to the newly created popup menu. The menu thus created can be populated
      with prompts and submenus through Wvt_AppendMenu().

    + Wvt_SetPopupMenu()
      Returns or sets the context menu available through K_RBUTTONDN (See Below). In no menu
      handle is passed, NULL is assigned to _s.hPopup.

    * hb_wvt_gtMouseEvent()
      case WM_RBUTTONUP:
        if ( _s.hPopup )
        {
           GetCursorPos( &xy );
           lPopupRet = TrackPopupMenu( _s.hPopup, TPM_CENTERALIGN + TPM_RETURNCMD, xy.x, xy.y, 0, hWnd, NULL );
           if ( lPopupRet )
           {
              hb_wvt_gtAddCharToInputQueue( lPopupRet );
           }
          return;
        }
        else
        {
          keyCode = K_RBUTTONUP;
          break;
        }

      Adjusted to invoke the popup menu set through Wvt_SetPopupMenu(), and if found NULL, the event
      is passed to the user to process. The LONG value returned by TrackPopupMenu() which is the third
      parameter passed with Wvt_AppendMenu(), when a prompted is clicked, is posted to keyboard buffer
      which can be retrieved with Inkey() function.

  * xharbour/include/hbgtwvt.h
    + HMENU _s.hPopup member to the GLOBAL_DATA _s to hold the last menu assigned though Wvt_SetPopupMenu().

  * xharbour/tests/wvtgui.prg
    Updated to demonstrate the usage of Context menu with each screen available in the application.
    Just right-click anywhere on the screen and select an option.

  + include/wvtwin.ch
    To hold the Gtwvt specific constants:
    1) Constants to define Button Formats - Wvt_DrawButton().
    2) Constants to define Line Formats - Wvt_DrawLine()
    3) Menu Manipulation Constants. ( WinUser.h - Decimal Notation )
    4) Mouse Pointer Shape constants. ( WinUser.h - Changed to Ordinal Position )

  * The Usage:

    #include "wvtwin.ch"
    //-----------------------//
    Function Main()
    local hPopup := Wvt_SetPopupMenu() // Clears the slot and returns back any previous assigned menu.
    local hMenu, nKey

    hMenu := DefinePopup()
    Wvt_SetPopupMenu( hMenu )

    // During the execution of this code K_RBUTTONUP will invoke the Popup and will post the keycode
    // assigened to the menu prompt.

    nKey := inkey( 0, INKEY_ALL )
    if nKey == 299301
       // Do Something
    endif

    Wvt_SetPopupMenu( hPopup )         // Restores the previous menu handle
    Return nil

    //-----------------------//

    Static Function DefinePopup()
    Local hMenu, hMenu1

    hMenu := Wvt_CreatePopupMenu()
    Wvt_AppendMenu( hMenu, MF_ENABLED + MF_PROMPT, 299301, 'Do Something' )

    return hMenu

    //-----------------------//

    /*
    This way we can simulate any inkey code we desire and can act according to that.
    */

2004-04-24 15:14 UTC+0200 Francesco Saverio Giudice <info@fsgiudice.com>
  - tests/wvtgui.ch
  + include/wvtgui.ch
    * moved into include folder as per Pritpal request that want to
      extend and use as default commands set for gtwvt

2004-04-24 13:50 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rdd/dbcmd.c
    * fixed syntax for BCC ( commit again due to a CVS error )
  * source/vm/memvars.c
    * added missing include "hbvm.h"

2004-04-24 13:30 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rdd/dbcmd.c
    * fixed syntax for BCC

2004-04-23 15:46 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
  * source/vm/memvars.c
    ! Fixed support for := Operator Overloading

  * source/rtl/win32ole.prg
    - Removed strat TraceLog()

2004-04-23 17:00 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rdd/dbcmd.c
    + hb_sqlescape renamed hb_strescape since added to __dbdelim also.
      Fixed gcc's GPF and number export in __dbdelim and __dbsql.

2004-04-23 12:00 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rdd/dbcmd.c
    + added functions __dbsql, hb_Dbf2Sql, hb_ExportSqlVar, hb_sqlescape.
      It could be the base for a COPY TO ... SQL SCRIPT command but at the moment
      is hard coded for FireBirdSQL.

2004-04-23 13:05 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/gtwvt/gtwvt.c
    * Formatting for recent changes.

    + Wvt_setPointer( nPointer )
      Set the mouse pointer shape to predefined mouse pointer which are in the
      range of 1-15. 1-12 are usable on all win versions whereas 13-15 are for
      winver > 4. To know what 1-15 constants means, please examine the gtwvt.c,
      at per now I have not found a suitable .ch file to place them ( someone to
      point ? ).

      Also please note that if you set pointer through it, all windows running as
      WVT windows will have the same pointer shape within them. So use it with care.

2004-04-23 00:30 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/rtl/memoline.c
    ! fix to me more clipper compatible,(file provided by Pritpal Bedi

2004-04-22 16:04 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * ChangeLog
    ! Removed an accidental CVS conflict indicator.

2004-04-22 16:00 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/tbrwtext.prg
    ! Turned word-wrapping off.
  * source/rtl/teditor.prg
    ! Fixed individual line coloring (once again).

2004-04-22 17:10 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * source/rtl/tbrowse.prg
    ! Remove nSpacePre > 0 checking in ::Redrawheaders()
      (as suggested by Ath. Thanks.)

2004-04-22 13:20 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/teditor.prg
    * All the fixes offered by Eduardo Fernandez with little modifications and optimizations.
      Still more fixes. Now Insert/Overstike mode is exactly Clipper comaptible.
      In my experiments memoedit without wordwrap is behaving exactly like Clipper but
      for only one bug ( I am desperately after ), memoedit with wordwrap still have some
      differences which I hope will be covered soon.

    /* Phil - I am sorry that your fix has been overwritten, which was due to excessive
       merging of CVS updates, please re-fix it as I have lost old code.
    */

2004-04-21 09:36 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * source/rtl/tget.prg
    ! respect case of ::cPicture in New() method to achieve Clipper compatibility

2004-04-21 12:15 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/rtl/filesys.c
    ! hb_fsmkdir/hb_fschdir/hb_fsrmdir, not respecting _SET_FILECASE and _SET_DIRCASE,
    fixed bug reported by Marcelo Lombardo
  * source/rtl/memoline.c
    ! fix to me more clipper compatible,(file provided by Pritpal Bedi

2004-04-21 14:50 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * source/rtl/inkey.c
    ! Fixed __keyboard(chr(0)) problem.

2004-04-20 20:30 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    - Removed recent fix in hb_vmQuit()
    * Uncommented line (mistakenly commented) in hb_vmQuit() whch caused memory leaks related to Globals.

2004-04-20 19:45 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * utils/hbmake/hbmake.prg
    ! is mt was selected is not now adding cw32mt.lib on script

2004-04-21 08:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/genc.c
    ! code formatting

  * source/vm/hvm.c
    ! minor fix on hb_vmQuit() upon releasing globals on exit.

2004-04-21 05:10 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/debugger.prg
  * source/debug/tbrwtext.prg
    ! Fixed highlight of the active code line (the line to be executed) and
      some cursor positioning bugs.

2004-04-20 23:30 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/teditor.prg
    * Cursor movement is now much more compatible to Clipper's. The fixes are for:
      PageUp, PageDown.

    * Numerous small fixes especially for memoedit() with WordWrap ON. Now it follows
      Clipper behavior more alike.

    * Introduced mouse support. Currently Left Button Up, Mouse Scroll Forward and
      Mouse Scroll Backward is supported. Clicked position of mouse is made current.
      Forward and Backward movement of mouse scroll causes memoedit() to go up or down
      by one row.

  * xharbour/source/rtl/memoline.c
    * Fixed for memoline retrieved properly where WordWrap is on. If a line was wordwrapped
      at a point the next character had been space, it was returning next line with preceding
      space as:
      "A Lazy Fox Jumped over the bush"
                       .                 Point where line was wrapped.
      Clipper  -> "over the bush"
      xHarbour -> " over the bush"

2004-04-20 16:47 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/debugger.prg
    ! Fixed a typo that caused wrong source output. Thanks to Teo Fonrouge.

2004-04-20 16:34 UTC+0200 Jacek Potempa (Jacek.Potempa@otc.pl)
  Added HB_EXPORT specifiers to allow service access from outside of harbour.dll
  to following functions:

  * include\hbapiitm.h
  * source\vm\eval.c
      extern PHB_ITEM HB_EXPORT hb_evalLaunch   ( )
      extern BOOL     HB_EXPORT hb_evalNew      ( )
      extern BOOL     HB_EXPORT hb_evalPutParam ( )
      extern BOOL     HB_EXPORT hb_evalRelease  ( )
      extern PHB_ITEM HB_EXPORT hb_itemDo       ( )
      extern PHB_ITEM HB_EXPORT hb_itemDoC      ( )


  * include\hbapi.c
  * source\vm\macro.c
      extern void   HB_EXPORT hb_macroGetValue( )
      extern void   HB_EXPORT hb_macroSetValue( )
      extern void   HB_EXPORT hb_macroTextValue( )
      extern void   HB_EXPORT hb_macroPushSymbol( )
      extern void   HB_EXPORT hb_macroRun( )
      extern HB_MACRO_PTR HB_EXPORT hb_macroCompile( )
      extern void   HB_EXPORT hb_macroDelete( )
      extern char   HB_EXPORT * hb_macroTextSubst( )
      extern BOOL   HB_EXPORT hb_macroIsIdent( )
      extern void   HB_EXPORT hb_macroPopAliasedValue( )
      extern void   HB_EXPORT hb_macroPushAliasedValue( )
      extern char   HB_EXPORT * hb_macroGetType( )
      extern char   HB_EXPORT * hb_macroExpandString( )

  * include\hbstack.h
  * source\vm\estack.c
      extern void    HB_EXPORT hb_stackDec( )
      extern void    HB_EXPORT hb_stackPush( )
      extern void    HB_EXPORT hb_stackPop( )


  * include\hbset.h
  * source\rtl\set.c

      Added
      HB_EXPORT HB_SET_STRUCT *hb_GetSetStructPtr( void );
      function needed for access to hb_set struct from outside of harbour.dll

2004-04-20 13:45 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/rtl/inkey.c
    ! Removed #include of nonexistent hbinkey.ch.

2004-04-20 13:30 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/rtl/teditor.prg
    ! Fixed individual lines coloring.

2004-04-20 10:20 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rtl/gtwin/gtwin.c
    fixed the read of F1
  - include/hbinkey.ch deleted
  * include/Makefile hbinkey.ch deleted please check others makefiles

2004-04-20 12:20 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * source/rtl/tbcolumn.prg
  * source/rtl/tbrowse.prg
    ! Fixed headsep/colsep display, including handling of different tbcolumn's
      headsep/colsep.
    ! Fixed wrong display when ::colPos assigned beyond ::leftVisible or
      ::rightVisible.

    /*
      Notes:
      ::right() and ::left() should skip empty columns (Clipper compatible).
      I guess it is not difficult to fix this, but I don't personally see it
      as a problem. Does anybody?
    */

2004-04-19 13:50 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/debugger.prg
    ! Fixed numerous problems (breakpoints, STATIC monitoring etc.) with .prg
      modules located in different directories.

2004-04-18 23:05 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/rtl/memoedit.prg
  Reverted back to previus default
      From
         DEFAULT nLineLength     TO nRight - nLeft + 1
      INTO
         DEFAULT nLineLength     TO nRight - nLeft
      By GianCarlo Niccolain request

2004-04-19 03:50 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/teditor.prg
    ! Correct sanitization on New() parameters; prevents function looping into memoedit after
      changing the text to crash.
    % More compact and readable (by far) code.

2004-04-18 23:35 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * source/rtl/teditor.prg
    ! More fixes to TEditor.

2004-04-18 21:20 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * source/debug/debugger.prg
    ! Fixed .T./.F. in command window and any dependencies on applications
      SET EXACT setting (mainly borrowed from Ryszard Glab's patch to
      Harbour).

2004-04-18 12:17 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/teditor.prg
    ! More fixes to TEditor.


2004-04-18 01:26 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/at.c
    ! AT xharbour extra parameters were too much sanitized; Now AT is returning 0
      if start parameter is bigger than string size.

  * source/rtl/memoedit.prg
    ! Changed
         DEFAULT nLineLength     TO nRight - nLeft
      INTO
         DEFAULT nLineLength     TO nRight - nLeft + 1

      The previous setting (seemingly just a typo) was always neglecting the
      ability to use the very last character in the window when wordwrapping was on.

  * source/rtl/teditor.prg
    ! Many fix and some addition.
      Wordwrapping works quite OK for normal characters, space, backspace and delete.
      Tab is giving some troubles, but it has been explicitly designed so.
      /* I would like to change it, but I need to listen ML opinions. */
    + Added GotoCol() and GotoPos() that are doing a similar job as GotoRow(): they go
      to a Logical location that is then translated into screen coordinates (and scrolled)
      as needed.
    ! GotoRow(), K_enter(), K_Bs(), K_del(), K_Ascii() have been highly optimized and
      simplified. They are now relying on the fixed SplitLine() that works on a fixed
      GetParagraph(). The short story: they all rely on SplitLine to fix word wrapping
      and cursor position when needed.
    - K_Space(): with the new SplitLine() that works for that, K_Space is absorbed into
      K_Ascii().

    /* NOTE: For optimization reasons, I now use AT() with the third extra parameter in many
       points. Compiling this program with xharbour in strict compatibility mode will make
       memoedit to silently do wrong in many points. If someone is interested, it should provide
       a different version of AT with the third parameter when strict compatibility is on */



2004-04-18 05:40 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/philes.c
    ! convert errorno 32 to 5 for BCC, MinGW and WatCom

  * source/vm/itemapi.c
    ! Added __POCC__ support for HB_FINITE_DBL()

2004-04-15 12:55 UTC-0800 Brian Hays <bhays@abacuslaw.com>

  * contrib/rdd_ads/ads1.c
    + fixed adsOrderListFocus and adsOrderInfo so ordsetfocus and ordkey
      return "" when no index is active

2004-04-17 17:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/hbusage.c
    ! revertion of UNDEF switch has been ommited in my last commit.

2004-04-17 16:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/common/hbver.c
    ! show full MSVC version
    ! show full MinGW32 version
    ! show correct version of OpenWatcom

2004-04-16 13:40 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/rtl/teditor.prg
    ! removed tracelog() call

2004-04-15 21:40 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbapierr.h
  * source/vm/errorapi.c
    + Added hb_errRelease() which I removed mistakenly.
  * source/vm/itemapi.c
    Added __XCC__ support for HB_FINITE_DBL()

2004-04-15 13:55 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * include/Makefile
    + Added local.h to list
  * utils//hbmake/hbmake.prg
    ! minor fix

2004-04-15 20:05 UTC+0300 Phil Krylov <phil@newstar.rinet.ru>
  * doc/en/hb_macro.txt
  * include/hbapi.h
  * include/hbmacro.h
  * source/vm/macro.c
    - Reverted my previous Type() Clipper-compatibility fix, which was
      incorrect.
    ! Fixed Type() to be Clipper-compatible on undeclared memvars.
      Modeled after Ryszard Glab's Harbour fix, but with small changes to
      make it work in xHarbour.
  * tests/macro.prg
    ! Fixed to reflect real Clipper behaviour, some checks added.
  * source/rtl/errorsys.prg
    * Fixed a typo.

2004-04-15 01:15 UTC-0800 Brian Hays <bhays@abacuslaw.com>

  * contrib/rdd_ads/adsfunc.c
    + added AdsGetConnectionType( [hConnect] ) and AdsGetTableConType() to
      retrieve the type of a given connection handle or the type
      of connection used in the current workarea.
      Thanks to Randy Portnoff for the original code.

  * contrib/rdd_ads/doc/en/adsfuncs.txt
    * Docs for above funcs, plus minor formatting and grammar fixes.

2004-04-15 05:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/pp/ppcore.c
  * source/compiler/cmdcheck.c
  * include/hbcomp.h
    ! reverted rems of hb_pp_STD_CH and /u
      (was thinking only UNDEF)

2004-04-15 03:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/pp/ppcore.c
  * source/compiler/cmdcheck.c
  * source/compiler/hbusage.c
  * include/hbcomp.h
    - remmed unused hb_pp_STD_CH and UNDEF switch from command line

  * source/vm/itemapi.c
    ! add define for _MSC_VER on _finite() declaration.
      (BTW: What is __MSC__ ?)

  * contrib/rdd_ads/ace620.prg (for OW32 only)
    ! updated to version 7.0.0.5 (current aceapi) with additional
      new 27 functions compared to version 6.20

  * source/rtl/diskspac.c
  * source/rtl/disksphb.c
  * source/rtl/filesys.c
  * source/rtl/filestat.c
  * source/rtl/tprinter.c
  * source/rtl/hbserv.c
  * source/rtl/win32ole.prg
  * source/rtl/gtwvt/gtwvt.c
  * source/macro/macro.slx
  * contrib/rdd_ads/ace.h
  * contrib/tip/tiputils.c
  * contrib/winprn/tprint.prg
    ! modification to enable compilation under LCC
      <http://www.cs.virginia.edu/~lcc-win32/>

  * source/common/hbver.c
    ! include LCC compiler definition

2004-04-15 03:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * include/hbapi.h
  + include/local.h (empty)
    * this is to allow builders to use their local defines

2004-04-14 02:48 UTC-0400 Sylvain Robert (s.robert/at/videotron.ca)
  * source/rtl/filesys.c
    - remove __USE_INLINE__ define and static definition for
      LongToHandle() and HandleToLong()
    + add && ! Defined(_BASETSD_H_) for the inline definition
    Now I can compile filesys.c with HB_WIN32_IO and MSVC

2004-04-14 16:25 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/rtl/gtwin/gtwin.c
    * modified readKey code to use only inkey.ch
    * no more support of INKEY_RAW and INKEY_EXTENDED
  * source/rtl/inkey.c
  * source/vm/hvm.c
    * hbinkey.ch no more used
  * source/rtl/gtwvt/gtwvt.c
    * added an hack to manage K_CTRL_RETURN
    * fixed support of keystrokes like Ctrl+Shift+F1 as suggested by Budyanto Dj.
  * source/rtl/filesys.c
    * fixed shared mode when -DHB_WIN32_IO as suggested by Przemyslaw.

2004-04-14 12:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbcmd.c
    * fixed bug in DBCREATE(....,.t.)

  * xharbour/include/hbdefs.h
    + added HB_COUNTER and HB_PTRDIFF types - first for reference
      counters and second for any pointer differences and pointer to
      integer conversions - this modification is synced with Harbour

  * xharbour/include/hbvmpub.h
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rtl/trim.c
  * xharbour/source/vm/arrays.c
  * xharbour/source/vm/debug.c
  * xharbour/source/vm/fastitem.c
  * xharbour/source/vm/fm.c
  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/memvars.c
    * use HB_COUNTER type

2004-04-13 14:19 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbvm.h
  * source/vm/hvm.c
    + Added HB_EXPORT void hb_vmPushBaseArray( PHB_BASEARRAY pBaseArray );

2004-04-12 14:15 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/cstruct.ch
  * source/rtl/cstruct.prg
    * Fixes and enhancements to support more C syntax, like:

         MyCStruct := (struct SOMESTRUCT)
         MyCStruct := (struct SOMESTRUCT) SomeValue
         MyCStruct := (struct SOMESTRUCT*) SomePointer

2004-04-12 00:50 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * contrib/hbzlib/zip.c
    + GetFileAttr/SetFileAttr() compatible api for *nix(otherwise hbzip dont build on linux

2004-04-12 01:55 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/scroll.c
    + ScrollFixed()
      Introduced this new function for internal use of xHarbour classes which
      supply all the parameters already in range. This function does not
      verify the supplied parameters. To speedup TBrowse(), this function is used
      instead of Scroll().

  * xharbour/source/rtl/tbrowse.prg
    * ::InsColumn() was not Clipper compatible where <nPos> > ::nColumns. Fixed.
    * More optimizations to speed up ::ForceStable(). Now it must be 10-15%
      faster than earlier. The methods touched are ::drawRows() and ::drawARow().

2004-04-10 16:59 UTC+0200 Mindaugas Kavaliauskas <dbtopas/at/dbtopas.lt>
  * contrib/rdd_ads/ads1.c
    * fixed ORDKEYVAL() for date type key values

2004-04-09 12:04 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    ! Fixed initialization of pRealClass in hb_clsValidScope() - thanks to Przemek
  * source/vm/runner.c
    * Removed unneeded static qualifier.

2004-04-09 04:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbcmd.c
    * fixed COPY TO/APPEND FROM to not make one unnecessary loop
      if WHILE block fails what cause unnecessary execution of
      FOR block and skipping

2004-04-09 03:18 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbdefs.h
    * disabled '#define HB_OS_WIN_32_USED' for HB_WIN32_IO to avoid
      problems with windows.h

  * xharbour/include/hbvmpub.h
    * reverted binary compatibility with old array structures for
      FWH users. I hope this problem will be resolved in the future
      with FWH author. Now by default Windows build uses:
      #define HB_FWH_COMPATIBLE which cause that old array structure
      is used. If someone build xHarbour with -DHB_LONG_HOLDERS then
      the LONG version of holders is used and HB_FWH_COMPATIBLE is not
      automatically set in hbdefs.h but if he set both -DHB_FWH_COMPATIBLE
      and -DHB_LONG_HOLDERS then the hacked version which cleans the bug
      and is binary compatible with old array structure is used.

  * xharbour/source/rtl/fstemp.c
    * #define HB_OS_WIN_32_USED added

2004-04-09 05:00 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/fserror.c
    ! reverted back error code hack for BCC and Watcom

2004-04-09 04:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * contrib/rdd_ads/ace.h
    ! replace back dllimport to dllexport

2004-04-08 15:36 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/set.c
    * use hb_fsCreateTemp() for temporary files and Windows Printer.
      To Windows users: please test it.

  * xharbour/source/rtl/fstemp.c
    * hb_fsTempName() now can use Win32 API for HB_WIN32_IO
      Thanks to Sylvian - I left intentionaly the logic with create
      (not open) to force truncating and avoid possible race condition
      problem, if it will make any troubles please inform me.

  * xharbour/include/hbdefs.h
  * xharbour/include/hbvmpub.h
  * xharbour/source/rtl/hbxml.c
  * xharbour/source/rtl/trim.c
  * xharbour/source/vm/arrays.c
  * xharbour/source/vm/classes.c
  * xharbour/source/vm/codebloc.c
  * xharbour/source/vm/debug.c
  * xharbour/source/vm/fastitem.c
  * xharbour/source/vm/fm.c
  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/itemapi.c
  * xharbour/source/vm/memvars.c
    * puiHolders cahnge to pulHolders and uiHolders to ulHolders,
      both are ULONG now. This resolves GPF problem when array
      was shared more then 2^16 times, f.e.:
        a:=array(100000)
   b:={"default"}
   afill(a,b)

  * xharbour/source/vm/hvm.c
    ! fixed the bug I reported a week ago in hb_vmArrayPush()/hb_vmArrayPop()
      when pIndex was string with differ length then 1 and pArray was not
      an object which inherits from TASSOCIATIVEARRAY
      I didn't want to do that myself but if no one else has wanted to clean
      it so far, I had to. Please test.

2004-04-08 17:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * contrib/rdd_ads/ace.h
    ! replace dllexport with dllimport
      (I just wonder why dllexport definition has been working for ages.
       According to common documentation, dllexport should be used when
       creating a DLL whilst dllimport when USING a DLL. In case of RDDADS,
       we are in the later position, using ace32.dll, so, IMO, dllimport
       should be used instead of dllexport)

  + contrib/rdd_ads/ace620.prg
    ! utility to create required RDDADS import library, ace32.lib, for
      Open-Watcom as it is not readily available elsewhere.
      (Open-Watcom users can now enjoy the powerful xHarbour RDDADS)

  * hrbdll.wc
    - remove double entries

  * source/rtl/fserror.c
    ! function hb_WinToDosError():
      translate ERROR_SHARING_VIOLATION to 5 for Borland and Watcom

    /*
    This brings down hbtest.exe's errors to 8 and 9 for BCC and Watcom
    respectively (same level as MSVC so far as FError() is concerned).
    Note: Under Windoze OS, it is highly recommended that HB_WIN32_IO be
    enabled by default, because undefining it will result incorrect return
    values of FError() from Clipper compatibility POV.
    */

2004-04-07 17:26 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    * Enhanced __CLSMODMSG() to also accept Class Handle as 1st param.

2004-04-07 19:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/common/hbver.c
    + add __POCC__ and __XCC__ in compiler section.

2004-04-07 15:15 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/tbrowse.prg
    * Incorporated changes in ::RedrawHeaders() suggested by Ath, thanks.
      I could not see any change to all of my browsers as I never use oCol:HeadSep
      instance variable. Budyanto, can you check if it is correct!

2004-04-07 10:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * dll_w32.bat
  * hrbdll.wc
    ! minor corrections.

2004-04-07 10:15 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/mainwin.c
  * source/vm/hvm.c
    ! force link hb_forceLinkMain() only when __EXPORT__ is not defined.

  * include/hbdefs.h
    ! allow Watcom to produce Library/DLL with undecorated symbol names

  * source/rtl/pplib.c
    ! remove unwanted HB_EXPORT attribute from __PREPROCESS()

  + dll_w32.bat
  + hrbdll.wc
    ! makefiles for Watcom's Harbour.DLL

2004-04-06 15:52 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/proc.c
    ! Fixed bad typo found by Przemek.

2004-04-06 15:31 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/codebloc.c
    - Removed extranous if in hb_codeblockDelete()

  * source/vm/hvm.c
    * Corrected few == HB_IT_STRING to & HB_IT_STRING

  * source/vm/memvars.c
    ! Fixed memory leak

2004-04-07 04:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  + make_w32.bat
  + makefile.wc
    ! makefiles for Open-Watcom (Windows 32bit only)

2004-04-06 16:30 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * utils/hbmake/hbmake.prg
    utils/hbmake/pickarry.prg
    ! minor fixes to problem reported by users(especialy when editing makefiles
  Question: Can i Add to contrib/hbzlib/zip.c the GetFileAttribute/SetFileAttibute Linux Equivalent
   Api, with out this, hbzip on linux is broken

2004-04-06 17:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/hbcomprs.c
  * source/rtl/gtwvt/gtwvt.c
    ! kill warning under Open-WatCom 1.2
  * source/rtl/win32ole.prg
    ! force LONGLONG under Open-WatCom 1.2 when __FORCE_LONG_LONG__ is defined.
      This requires a hacked version of oaidl.h I atatched in other message.
  * contrib/rdd_ads/ace.h
    ! minor modification to allow compilation under Open-Watcom 1.2
  * include/hbdefs.h
    + add definition of HB_EXPORT for Open-Watcom 1.2

2004-04-06 04:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/libct/files.c
    * enable osToHarbourMask() for OS_UNIX_COMPATIBLE

  * xharbour/source/rtl/bkgtsks.c
    * removed two unnecessary HB_THREAD_STUB

  * xharbour/source/rtl/filestat.c
  * xharbour/source/rtl/fserror.c
  * xharbour/source/rtl/fssize.c
  * xharbour/source/rtl/fstemp.c
  * xharbour/source/rtl/hbffind.c
  * xharbour/source/rtl/hboutdbg.c
    * next file IO and fsError changes

  * xharbour/source/rtl/filesys.c
    ! hb_fsCreateEx() use now WinAPI,
    + added convert_create_flags() for WinAPI,
    * some next fsError changes

I've tested the changes in Linux and DOS (DJGPP, OpenWatcom) - please
test it in Windows.

2004-04-05 19:45 UTC-0300 Luiz Rafael Culik<culikr / at /brturbo.com >
  * source/rtl/direct.c
    ! fixed function directoryrecurse() to work on *nix

2004-04-06 05:35 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/filesys.c
    ! typo on trace info convert_create_flags -> convert_create_flags_ex
    ! define convert_create_flags() only when HB_FS_FILE_IO is defined and
      HB_WIN32_IO is not defined.
  * source/rtl/fserror.c
    ! define hb_errnoToDosError() only when HB_WIN32_IO is not defined
  * source/compiler/hbpcode.c
    ! function hb_compStrongType(): mark iSize as unused.
  * source/rtl/gtwvt/gtwvt.c
    ! remmed unused variable: iScanCode in line 1983

2004-04-05 22:36 UTC+0200 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/rtl/bkgtsks.c
    * fixed typo ( HB_THRAED_OPTIMIZE_STACK -> HB_THREAD_OPTIMIZE_STACK )
      and added HB_THREAD_STUB in HB_BACKGROUNDRUN.
      Thanks to Sylvain Robert

2004-04-05 21:50 UTC+0200 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/rtl/bkgtsks.c
    * fixed assignment of first task. Code cleaned.
  * hrbdll.bc
  * hrbdll.vc
    + Added source/rtl/fserror.c

2004-04-06 02:40 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/filesys.c
    ! unbalance parenthesis in line 282
  * source/rtl/fserror.c
    ! guard ENOTDIR, ENFILE, EFAULT, EROFS, ESPIPE with "#if defined()" for
    compilers that have no defines for them.
  * source/rtl/gtwvt/gtwvt.c
    ! minor correction to put external variables initialized in mainwin.c
      into extern "C"

2004-04-05 16:48 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/fserror.c
    * ETXTBSY inside #ifdef ETXTBSY

  * xharbour/source/rtl/filesys.c
    * compilation fixes

  * xharbour/source/rtl/hbffind.c
    * use new error codes

2004-04-05 09:10 UTC-0500 Sylvain Robert (s.robert/at/videotron.ca)
  * xharbour/source/rtl/fserror.c
    * Put case ETXTBSY under #if defined( HB_OS_UNIX )

2004-04-05 13:34 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + xharbour/source/rtl/fserror.c
    + I missed it in my previous commit

2004-04-05 13:32 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/filesys.c
    ! BCC compilation fixed

2004-04-05 17:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/hbpcode.c
    - remmed: unused hb_compPrivateFind()
  * contrib/libct/files.c
    - remmed: unused osToHarbourMask()
  * source/rtl/gtwvt/gtwvt.v
    - remmed: unused hb_wvt_gtValidWindowSize()
  * contrib/libnf/n2color.c
    - remmed: unused _ftI2Color()
    ! fix inconsistent linkage : _ftGetColorStr()
  * contrib/unicode/hbc7.c
    ! fix inconsistent linkage : str2ue7()
  * contrib/unicode/hbcrpt128.c
    - removed unused variable: tmpKey
  * contrib/winprn/tprint.prg
    - remmed unused fucntions:
      DELETEOBJECT(),SELECTOBJECT(),SETTEXTCHARACTEREXTRA()

  * source/pp/pragma.c
  * source/pp/ppcore.c
    % code formatting, mainly change tabs->spaces and put singe-liner into {}

2004-04-05 04:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/makefile.bc
  * xharbour/makefile.nt
  * xharbour/makefile.vc
  * xharbour/source/rtl/Makefile
    + fserror.c added

  * xharbour/source/rtl/diskspac.c
  * xharbour/source/rtl/disksphb.c
    * use current version hb_parc() instead of hb_parcx()

  * xharbour/include/hbdefs.h
    + hack for 64bit systems and [U]LONG_{MIN,MAX} definition

  * xharbour/include/hbapifs.h
    * new macro HB_WIN32_IO instead of X__WIN32__
      (X__WIN32__ is still working but I'll remove it soon)

  * xharbour/source/rtl/console.c
    * use HB_WIN32_IO instead of X__WIN32__
      Why we use it? Can someone who use Windows explain it?
      Doesn't DostoWinHandle() work?

  * xharbour/source/rtl/filesys.c
    * error codes changed. It's first part of changes and I expect
      that they could introduce temporary instability but it has to
      be done. I want to clean all sources and use WinAPI only and
      always when HB_WIN32_IO if set. In other case use compiler's API.
      Mixing WinAPI with C compiler can cause unexpected results and
      reduce portability - I think that Windows users will want to
      see WindowsCE port in the future. I need help from all developers
      especially Windows ones and other platform/compilers I don't use
      to continue the changes.

  * xharbour/source/rtl/hbffind.c

  * xharbour/source/rtl/bkgtsks.c
    * chose unique TaskID in hb_backgroundAddFunc() when counter reach
      maximum value
    ! removed hb_itemRelese in hb_backgroundDelFunc() - it's necessary if
      HB_BACKGROUNDDEL() should return codeblock.
      It should be documented that on C level caller of hb_backgroundDelFunc()
      should make hb_itemRelease() on returned value if is not NULL

2004-04-05 07:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/hbxml.c
    ! fix inconsistent function declarations

  * source/compiler/harbour.c
  * source/compiler/hbfunchk.c
  * source/compiler/cmdcheck.c
  * source/compiler/hbgenerr.c
  * source/compiler/hbpcode.c
    ! code formatting, mainly replace tabs -> spaces, put single-liner
      into {} per xHarbour coding convention.

2004-04-05 01:43 UTC+0200 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/include/thread.h
    * added to thread stack background section:
      ULONG  ulBackgroundID;
  * source/vm/thread.c
    * added to thread stack background section ulBackgroundID initialization
  * source/rtl/bkgtsks.c
    * added s_ulBackgroundID to ST and MT
    * fixed initialization of ulTaskID

2004-04-05 01:05 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * include/hbxml.h
  * source/rtl/hbxml.c
    ! now internal functions are static; unused mxml functions are commented
      out (size of hbxml.o is reduced by 10%).
    ! fixed ret value in mxml_sgs_extract.

2004-04-05 05:15 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/filesys.c
    ! Definition of __inline functions for certain version of _MSC_VER (?)
      which does not support __inline functions when X__WIN32__ is defined.
      Those supports __inline may define __USE_INLINE__ when compiling
      filesys.c to gain speed.

  * source/rtl/bkgtsks.c
    ! Minor corrections on line 118: NULL -> 0
      Some compilers treats NULL as void *, so NULL is rejected here.

2004-04-04 21:55 UTC+0200 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/include/hbapi.h
    * changed HB_BACKGROUNDTASK struct to add new
      ULONG    ulTaskID;     /* task identifier */
  * source/rtl/bkgtsks.c
    * changed functions to support task identifier intead of task item pointer
    * changed memcpy() to memmove() as Przemek suggests.

2004-04-04 15:45 UTC+0100 Marek Paliwoda <paliwoda@inetia.pl>
  * source/vm/fm.c
    ! fixd typo piuHolders -> puiHolders

2004-04-03 22:00 UTC-0300 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/rtl/hbhex2n.c
    + Additional conversion casts to MSVC on previous commit

2004-04-04 16:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/hvm.c
  * source/rtl/hbserv.c
  * include/hbserv.h
    ! change hb_seriviceExit() => hb_serviceExit() for more readability :-)

2004-04-04 10:56 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/vm/mainwin.c
  * source/vm/hvm.c
    * changed froceLinkMain into forceLinkMain and moved outside extern "C"
      to allow build with OpenWatcom
  * source/rtl/hbhex2c.c
    * added OpenWatcom and mingw defines to exclude broken HB_STRTOHEX, HB_HEXTOSTR
      until the fix

2004-04-03 16:00 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/fastitem.c
    ! Fixed typo in hb_itemCopy() and hb_itemClearMT()
    + Added logic to detect and generate an error on premature string release.

2004-04-04 04:25 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/hbusage.c
  * source/compiler/harbour.c
    ! code formatting, mainly putting single-line if,else,while into
      curly brackets as per xHarbour coding convention
    ! remove one TODO item (harbour.exe command line):
       @<file> => compile list of modules in <file>

    /*
    New syntax: harbour.exe @mylist.rsp
       mylist.rsp is a plain text file containing a PRG file in each line.

    Example:
    .---
    |  main.prg
    |  process.prg
    |  doc.prg
    `---
    */

2004-04-03 16:55 UTC-0300 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/rtl/hbhex2n.c
    + Added function HB_STRTOHEX()
    + Added function HB_HEXTOSTR()

2004-04-03 09:12 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/filesys.c
    * hb_fsCreate() set the error to _doserrno if possible for MSVC

2004-04-03 13:58 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * include/hbapi.h
  * source/vm/garbage.c
  * source/vm/memvars.c
  * source/vm/thread.c
    + added hb_memvarsIsMemvarRefMT to reference local stack memvars in GC
      Mark loop.
    ! fixed GC marking of memvars under MT.

2004-04-02 19:39 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/fastitem.c

  * source/vm/memvars.c
    + Reinstated condition for Detached Locals in hb_memvarsRelease()

2004-04-02 18:01 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbapi.h
    ! Corrected HB_IS*() to NOT use complex and wrong HB_IS_OF_TYPE()

  * include/hbfast.h
  * source/vm/fastitem.c
    - Removed redundant hb_fastClear()

  * source/compiler/hbpcode.c
    - Deffed OUT content of hb_compStrongType() - outdated!

  * source/rtl/filesys.c
    + Added temporary hack for xCC to provide _doserrno functionality.

  * source/vm/fastitem.c
  * source/vm/arrays.c
  * source/vm/memvars.c
  * source/vm/asort.c
  * source/vm/estack.c
  * source/vm/hvm.c
    + Added OWNERS support for HB_IT_BYREF

  * source/vm/fastitem.c
  * source/vm/arrays.c
  * source/vm/memvars.c
    ! Corrected HB_IS_*() to ->type == * (before reviewing and correcting HB_IS_*())

  * source/vm/codebloc.c
    ! Fixed GPF Trap in hb_codeblockDeleteGarbage()

  * source/vm/garbage.c
    * Converted static s_bReleaseAll to global hb_gc_bReleaseAll

  * source/vm/itemapi.c
    * Corrected compile warning

2004-04-03 02:59 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/dos/djgpp.cf
  * xharbour/config/w32/mingw32.cf
    * added -W to C compilation flags

2004-04-03 02:37 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/compiler/harbour.slx
  * xharbour/source/macro/macro.slx
   * warning fixes - removed redundant assignment in CUSTOM_ACTION()
     macro

  * xharbour/source/rtl/gtnul/gtsys.c
   * fixed GT request inside C function and type which
     existed in gtnul.c for a long time - thanks Andi

  * xharbour/source/vm/arrays.c
    * add to debug markers 'U' suffix to avoid warnings

  * source/pp/ppcore.c
  * utils/hbtest/rt_misc.prg
    * preproceses '**' into '^' like Clipper.
      (borrowed from Harbour, by Ryszard Glab)

2004-04-03 05:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/filesys.c
    ! commented unused variables

  * source/vm/maindllh.c
  * source/vm/maindllp.c
  * source/vm/mainwin.c
  * source/vm/mainstd.c
    ! put codes under extern "C"

2004-04-03 00:31 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/hbxml.c
    ! fixed castings
  /* Plz, someone add stricter casting to GCC compilation */

2004-04-03 05:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * include/hbapigt.h
  * include/hbapicdp.h
    ! changed: "extern HB_FUNC" => "HB_FUNC_EXTERN"

2004-04-02 23:45 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/filesys.c
    ! Under windows with X__WIN__ on, hb_fsOpenProcess was failing
      if the file was not found in the path, but was available
      in the relative path.

  * source/rtl/hbxml.c
    % Changed memory deallocation strategy (great speedup).

  * tests/xmltest.prg
    * Fix doc strings.

  + tests/xmliter.prg
    + Added a test for xml iterators; they were in (in fact,
      they are internally used by XmlDocument class for
      findfirst/findnext operations) but documentation is
      missing; I will commit docs ASAP but this test helps
      to understand.

2004-04-03 02:55 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * utils/hbtest/rt_file.prg
    + add routine to test FError() upon "Access denied"

2004-04-02 14:00 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rdd/dbf1.c
    + Add Os error code to the  error object in hb_dbfCreate()
      (clipper compatibility)

2004-04-02 13:30 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/filesys.c
    * hb_fsCreate() set the error to _doserrno if possible for MSVC

2004-04-02 20:00 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/tin.it>
  * source/vm/fastitem.c
    * corrected a typo that caused memory leaks

2004-04-02 09:00 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/philes.c
    * hb_fsError() translate from 32 to 5 for MSVC in Ferror()
      (clipper compatibility)

2004-04-02 14:33 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + xharbour/source/rtl/gtnul/gtsys.c
    + GTSYS added. It forces to link in MULTI GT mode the default
      build GT. Without it GTNUL pass all reference so smart linkers
      drop any other GT libs on if you don't add to your sources
         REQUEST HB_GT_<gtname>
      So far such REQUEST with default build GT was inside gtnul.c
      so final program always has to be linked with the default GT.
      Now user can disable this feature by adding to his sources:
         ANNOUNCE GTSYS
      This is the same mechanism as RDD use in RDDSYS()
      Sorry I missed to add this file in my previous commit()

  * xharbour/tests/bldtest/Makefile
    * fixed typo

2004-04-02 07:16 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/errorsys.prg
    * if the error object have no argument don't add the text "Arguments:"
      to cMessage

2004-04-02 06:00 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/hbffind.c
    ! WintoDosError() was returning 0 instead of the old Error value
      if no error code translation was made.

2004-04-02 13:12 UTC+0200 Giancarlo Niccolai <antispam [at] niccolai/dot/ ws>
  * source/rtl/gtxvt/gtxvt.c
    ! Keypad was not working; fixed
    ! XGrabKey() was used to grab K_CTRL and K_ALT keys to work,
      but it prevented some compose/alternative keycodes to be
      correctly parsed by the server. Temporarily removed (in
      search for a better solution).

2004-04-02 05:30 UTC-0500 Sylvain Robert <s.robert/at/videotron.ca>
  * source/rtl/filesys.c
    ! Fixed R/T error when trying to open a DBF in Exclusive mode and
      a sharing violation occur (_doserrno==32) by removing special error
      translation for MSVC in hb_fsSetError()
  * hb_fsOpen() set the error to _doserrno if possible for MSVC

2004-04-01 20:40 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbvmpub.h
    * Removed Member <itemsbase> in favor of NEW Member <pBaseArray>

  * source/vm/arrays.c
  * source/vm/hvm.c
    ! Fixed creation of BYREF items into Arrays to use new pBaseArray Member.

  * source/vm/itemapi.c
    ! Fixed de-referencing of of BYREF items into Arrays to use new pBaseArray Member.
    + Added logic detect and generate R/T Error upon refernce into array being out of bound.

  * source/vm/garbage.c
    + Added logic to Mark the Base Array of a BYREF Item in Sweep Scan.

  * source/vm/fastitem.c
    * Removed some redundant ()

  /* The above fixes critical GPF traps related to BYREF item pointing into an Array Element. */

2004-04-02 03:28 UTC+0200 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/rtl/bkgtsks.c
    * warnings fixed

2004-04-02 02:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/adsfunc.c
    * warnings fixed

2004-04-02 00:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/contrib/rdd_ads/adsfunc.c
  * xharbour/include/simplex.c
  * xharbour/source/rtl/hbserv.c
  * xharbour/source/rtl/hbxml.c
  * xharbour/source/rtl/inkey.c
  * xharbour/source/rtl/readline.c
  * xharbour/source/rtl/regex.c
  * xharbour/source/vm/arrays.c
  * xharbour/source/vm/errorapi.c
  * xharbour/source/vm/thread.c
    * warnings fixed, some of them were real bugs

  * xharbour/source/rtl/gtnul/Makefile
  * xharbour/source/rtl/gtnul/gtnul.c
  + xharbour/source/rtl/gtnul/gtsys.c
    + added GTSYS() which works in similar way as RDDSYS
      when user will want to disable linking with default build GT
      then simply should add into his code: ANNOUNCE GTSYS
      Gian I hope you will find it useful for XWT and linking with
      pure GTNUL only.

2004-04-02 04:35 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/hbusage.c
    + add the following gentlemen into credit section:
       * Jose F. Gimenez <jfgimenez@wanadoo.es>
       * Mindaugas Kavaliauskas <dbtopas@dbtopas.lt>
       * Sylvain Robert <s.robert@videotron.ca>
       * Vicente Guerra <vicente@guerra.com.mx>

2004-04-02 03:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/genc.c
    ! minor formatting and comments

  * include/hbdefs.h
    ! simplified HB_FUNC* macros

  * Rename ChangeLog to ChangeLog.019
