/*
 * $Id: ChangeLog,v 1.4349 2005/09/23 13:31:35 gdrouillard Exp $
 */

/* Use this format for the entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name <your_email@address>
   For example:
   2002-12-01 23:12 UTC+0100 Foo Bar <foo.bar@foobar.org>
*/

2005-09-23 11:05 UTC-0300 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/tip/httpcln.prg
    ! Fixed undeclared variables

2005-09-23 09:00 UTC-0500 Gerald Drouillard <gerald@drouillard.ca>
  * source/tip/url.prg
    + added method AddGetForm which is similar to httpcln.prg post put using the "GET" protocol.
  * source/tip/HTTPCLN.prg
    + added support for METHOD Post( cPostData) to accept cPostData as a 2d array.
    ! fixed handling of cookies to conform more to the specs, especially when the object is used to connect to multiple servers.
    + added methods setcookies and getcookies.
    + added method readall() - useful if the encoding is chunked that returns IMO what read should, but I didn't want to break anyones code.
    ! clear :hHeadears in :ReadHeaders as to not to keep adding to them.
    ! removed the ":" in :ReadHeaders cases statement.
  * source/tip/client.prg
    + in :close() set the :socketcon to nil.  This is a quick way to see if you may still have a connection.

2005-09-22 16:01 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/classes.c
  * source/vm/codebloc.c
  * source/vm/hvm.c
    - Removed array management from handling of asBlock.value->pSelfBase

   /*
      Unless I miss something this should never needed, and resolves not
      released memory (unless GC is executed) when object has block data[a].
    */


2005-09-22 12:48 UTC+0100 Giancarlo Niccolai (gc/at/niccolai.ws)
  * include/hbxml.ch
  * include/hbxml.h
  * source/rtl/hbxml.c
    + addedd support for CDATA nodes. A new type of node (CDATA) is
      created, and the content of the node is not parsed.
      CDATA blocks inside attribute values are not supported.

  * tests/xmltest.prg
  * tests/xmltest.xml
    + Added a CDATA node to show the functionality of the new feature.

2005-09-22 02:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/xharbour.spec
    * changed description in README.RPM about xhbcc script behavior
      Now it's a simple wrapper to C compiler which can be used in make
      files instead of direct calling C compiler - it set all necessary
      parameters to properly include xHarbur header files

  * xharbour/contrib/rdd_ads/ads1.c
    * modification in default connection setting

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * minor modification to allow opening CDX files with TAGNAME length
      not equal to 10 characters

  * xharbour/include/hbapiitm.h
  * xharbour/source/clipsamp/date.c
  * xharbour/source/clipsamp/gauge.c
  * xharbour/source/clipsamp/stack.c
  * xharbour/source/clipsamp/status.c
  * xharbour/source/ct/addascii.c
  * xharbour/source/ct/asciisum.c
  * xharbour/source/ct/ascpos.c
  * xharbour/source/ct/atadjust.c
  * xharbour/source/ct/atnum.c
  * xharbour/source/ct/atrepl.c
  * xharbour/source/ct/charevod.c
  * xharbour/source/ct/charlist.c
  * xharbour/source/ct/charmirr.c
  * xharbour/source/ct/charmix.c
  * xharbour/source/ct/charone.c
  * xharbour/source/ct/charonly.c
  * xharbour/source/ct/charop.c
  * xharbour/source/ct/charrepl.c
  * xharbour/source/ct/charsort.c
  * xharbour/source/ct/charswap.c
  * xharbour/source/ct/count.c
  * xharbour/source/ct/ctmath2.c
  * xharbour/source/ct/ctpad.c
  * xharbour/source/ct/ctwin.c
  * xharbour/source/ct/finan.c
  * xharbour/source/ct/justify.c
  * xharbour/source/ct/num1.c
  * xharbour/source/ct/numat.c
  * xharbour/source/ct/pos1.c
  * xharbour/source/ct/pos2.c
  * xharbour/source/ct/posdiff.c
  * xharbour/source/ct/range.c
  * xharbour/source/ct/relation.c
  * xharbour/source/ct/remove.c
  * xharbour/source/ct/replace.c
  * xharbour/source/ct/strdiff.c
  * xharbour/source/ct/strswap.c
  * xharbour/source/ct/tab.c
  * xharbour/source/ct/token1.c
  * xharbour/source/ct/token2.c
  * xharbour/source/ct/trig.c
  * xharbour/source/ct/wordrepl.c
  * xharbour/source/ct/wordtoch.c
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rtl/fparse.c
  * xharbour/source/rtl/gx.c
  * xharbour/source/rtl/idle.c
  * xharbour/source/rtl/inkey.c
  * xharbour/source/rtl/left.c
  * xharbour/source/rtl/math.c
  * xharbour/source/rtl/oemansi.c
  * xharbour/source/rtl/round.c
  * xharbour/source/rtl/set.c
  * xharbour/source/rtl/setkey.c
  * xharbour/source/rtl/strpeek.c
  * xharbour/source/rtl/tprinter.c
  * xharbour/source/rtl/transfrm.c
  * xharbour/source/rtl/version.c
  * xharbour/source/rtl/win32ole.prg
  * xharbour/source/rtl/win32prn.prg
  * xharbour/source/vm/arrayshb.c
  * xharbour/source/vm/classes.c
  * xharbour/source/vm/debug.c
  * xharbour/source/vm/errorapi.c
  * xharbour/source/vm/fastitem.c
  * xharbour/source/vm/hash.c
  * xharbour/source/vm/hbi18n.c
  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/inet.c
  * xharbour/source/vm/memvars.c
  * xharbour/source/vm/runner.c
  * xharbour/source/vm/thread.c
    * changed hb_itemReturn() to work like in Clipper
    * renamed hb_itemReturnCopy() to hb_itemReturnForward()
    ! fixed few bugs with bad use previous version of hb_itemReturn()
      and some memory leaks

2005-09-20 23:30 UTC-0300 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/pp/pptable.c
    + Added support to CONNECTION clause in USE command

2005-09-20 18:55 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/pptable.c
    ! Fixed 2 rules where "IN" was anchore of an optional clause by adding non optional versions

  * tests/xmltest.prg
    * Corrected typo.

2005-09-20 17:50 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
  * source/rtl/tbrowse.prg
    * Reapplyed minor fix on dehilite method() for proper show of tbrowse on HPUX.

2005-09-20 21:10 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * source/rtl/tbrowse.prg
    * Reverted to a previous version

2005-09-20 19:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbrddfpt.h
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/source/rdd/dbffpt/dbffpt0.prg
   % reduced one IO call on write
   * added some descriptions about BLOB*() function syntax I'll add
     after RC-1
   * moved DBFDBT dummy function to dbffpt0.prg to force full DBFFPT
     initialization

  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * formatting

2005-09-20 09:07 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rdd/dbffpt/dbffpt1.c
    * Reverted last GPF trap, was a build error.

  * dll_b32.bat
    * Copy bin\b32\harbour.lib to lib\b32

2005-09-19 19:58 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rdd/dbffpt/dbffpt1.c
    ! Fixed GPF trap

2005-09-20 01:19 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/hb-func.sh
    * changed xhbcc behavior. Now it does not generate .c file but
      call GCC with all flags and paths necessary to compile .c file
      using xHarbour header files. Now xhbcc can be used as replacement
      to GCC in make files so user will not have to set and environment
      variables.
      If someone want to generate .c file from .prg then -gc[0-9] should
      be used directly in xhbcmp

  * xharbour/contrib/rdd_ads/ads1.c
    + added adsOrderListDelete() and implemented ordBagClear( cIndex )
      in ADS* RDDs
    ! close order if new one opened by DBOI_ORDERCOUNT

  * xharbour/contrib/rdd_ads/adsfunc.c
    * cleaned the code of ADSCREATESQLSTATEMENT() - it's still not working
      due to other modifications in ads1.c - work in progress.

  * xharbour/include/hbrddcdx.h
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + added support for EXCLUSIVE and TEMPORARY clauses of INDEX ON ...
      command in DBFCDX

  * xharbour/source/rdd/rddsys.prg
  * xharbour/source/rdd/dbffpt/dbffpt0.prg
  * xharbour/source/rdd/dbfntx/dbfntx0.prg
  * xharbour/source/rdd/dbfcdx/dbfcdx0.prg
  * xharbour/source/rdd/dbfcdx/sixcdx0.prg
    * request _DBF not DBF which is a function

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/source/rdd/hbsix/sxcompr.c
    * cleaned waring messages

  * xharbour/source/rtl/filesys.c
    ! fixed bag in hb_fsExtOpen() when _SET_PATH was scanned for files.

2005-09-19 17:50 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
  * source/rtl/tbrowse.prg
    * minor fix on dehilite method() for proper show of tbrowse on HPUX.
      Fix sent by Nelson Ota <nelson_ota at hotmail.com>

2005-09-19 13:11 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/browdb.prg
  * source/rtl/tbcolumn.prg
  * source/rtl/tbrowse.prg
    * Reverted recent Eduardo changes, to allow release of RC-1

2005-09-18 18:45 UTC-0800 Brian Hays <bhays at abacuslaw.com>
  * hrbdll.bc
     * added missing "\" for hsx\cftsfunc

2005-09-18 17:40 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * bin/bld.bat
    - dbfdbt
    + hbsix
    + hsx
    * further changes may be required.

2005-09-18 17:25 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.bc
  * makefile.dc
  * maiefile.nt
  * makefile.pc
  * makefile.vc
  * makefile.wc
  * hrbdll.bc
  * hrbdll.dc
  * hrbdll.gc
  * hrbdll.pc
  * hrbdll.vc
  * hrbdll.wc
    - dbfdbt.*
    + hbsix.*
    + hsx.*

2005-09-17 23:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/hb-func.sh
    + added -hwgui switch for easier linking HWGUI application to xhb*
      scripts
    + add -l<libname> switch for xhbmk

  * xharbour/contrib/rdd_ads/ads1.c
    ! removed access to static adsFileType variable in WA methods.
      Now only WA member iFIleType is used. It fixes real separation
      of ADSCDX, ADSNTX and ADT RDDs.

  * xharbour/contrib/rdd_ads/adsfunc.c
    ! fixed some functions to use WA methods to avoid desynchronization
      between ADS* RDD and ACE layer.

  * xharbour/include/hbapirdd.h
    + added rddID to AREANODE

  * xharbour/include/hbextern.ch
  * xharbour/source/rdd/delim0.prg
  * xharbour/source/rdd/delim1.c
  * xharbour/source/rdd/sdf0.prg
  * xharbour/source/rdd/sdf1.c
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/rddsys.prg
    ! fixed default RDD requests. Now ANNOUNCE RDDSYS disable linking of
      any RDD.

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    % optimize tag number request

2005-09-16 18:15 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
  * utils/hbmake/hbmake.prg
    ! removed dbfdbt.lib from lib lists

2005-09-16 20:00 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/browdb.prg
  * source/rtl/tbrowse.prg
  * source/rtl/tbcolumn.prg
    ! Reverted to previous versions.

2005-09-17 00:16 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/hb-func.sh
  * xharbour/bin/pack_src.sh
  * xharbour/config/global.cf
    * removed DBFDBT from library list

  * xharbour/include/hbrddcdx.h
  * xharbour/include/hbrdddbf.h
  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    * added support for SIX encryption in DBF tables without MEMOs

  * xharbour/source/rdd/hsx/hsx.c
    ! fixed bug which cause that the last record was not found in
      the list
  * xharbour/source/rdd/hbsix/sxcompr.c
    * some small extensions for SIX compression

2005-09-16 12:00 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
  * source/ct/getsecrt.prg
    ! Fixes for CaClipper Tools compability.ESC key should not be processed, and
      returned password should be same size of variable size passed

2005-09-15 23:45 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/browdb.prg
    * Added 5th parameter to TBrowse:New() passed from TBrowseDB()
      function to control colorrect.

  * source/rtl/tbrowse.prg
    ! Fixed TBrowse/TBColumn colors management, as colorblock, colorrect,
      colorspec and default color.
    + Added hidden setrowpos method that allow us to change a row at run-time
      via TBrowse:RowPos := n
    + Added various hidden methods to control colorrect.
    * Added 5th parameter to TBrowse:new() method passed from TBrowseNew()
      and TBrowseDB() functions, to control colorrect.

  * source/rtl/tbcolumn.prg
    ! Fixed any assignable datas in TBColumn that was blocked, for example:
      footing, heading, etc.

2005-09-15 16:23 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * hrbdll.bc
    * Added support for for new hbsix sources

2005-09-15 10:40 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
  * makefile.bc
    ! updated for new hsx.lib/hbsix.lib
  * utils/hbmake/hbmake.prg
    ! added new libs to lib list
  * source/vm/hvm.c
    ! added pointer comparasion types on hb_vmEqual/hb_vmNotEqual

2005-09-15 14:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + xharbour/include/hbsxfunc.h
  + xharbour/source/rdd/hbsix/Makefile
  + xharbour/source/rdd/hbsix/sxcompr.c
  + xharbour/source/rdd/hbsix/sxcrypt.c
  + xharbour/source/rdd/hbsix/sxdate.c
    + added hbsix library - please update non GNU makefiles

  * xharbour/xharbour.spec
  * xharbour/bin/bld.bat
  * xharbour/bin/hb-func.sh
  * xharbour/bin/pack_src.bat
  * xharbour/bin/pack_src.sh
  * xharbour/config/global.cf
  * xharbour/include/Makefile
    + added hbsix library
    + updated for HSX/CFTS library (please update non GNU makefiles
      to also include HSX library - it's a long time in CVS and many
      users cannot use it)

  * xharbour/include/hbdbferr.h
    * formatting

  * xharbour/include/hbrddfpt.h
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    + added support for SIX3 "V" fileds. It's a variable field in which
      data is stored partialy in DBF and MEMO file. In "V" fields
      strings, number, dates, logicals, arrays and nil items can be stored.
      The size of "V" field can be: 3 {"V", 3, 0} and in such case it's
      SIX3 packed date, 4 {"V", 4, 0} for 32-bit signed integer (the same as
      {"I", 4, 0}) and >= 6 for variable weak typed field for any data type.
      When "V" field size is greater then 6 then string items are partially
      stored in "V" field and rest if necessary in memo. So when you create
      {"V", 16, 0} field strings shorter then 15 bytes will be stored only
      in DBF file and when they are longer first 10 bytes will be in DBF
      and rest in MEMO file. The maximum string size in "V" field is 64'000
      bytes (note that is a little bit less then 2^16=64KB). DOUBLE items
      are stored in DBF when size >= 13 (SIX bug reproduced for compatibility
      should be >=12) integer numbers, dates, logicals, nil are always stored
      in DBF, arrays are always stored in MEMO.
      When V3 or V4 is used only the memo type file is not necessary.
      This field works exactly like in SIX3 and partially in ADS and
      can be used with any MEMO types (DBT, FPT, SMT)

  * xharbour/source/rdd/dbf1.c
    + added support for SIX3 "V" (weakly typed) fileds
    + always force FPT memos for newly created files when DBF type is
      set to VFP
    + added mapping for "Y", "T", "@" DBF types to number items for DBF
      files with extended field types, unsupported by xHarbour VM

  * xharbour/source/rdd/workarea.c
    + added support for SIX3 "V" fileds. It's a variable field in which

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * formatting

  * xharbour/source/vm/classes.c
    ! initialize uninitialized variable

  * xharbour/source/vm/extend.c
    ! fixed memory leak in all hb_stor*() functions when the passed
      parameter was an array with wrong size

2005-09-15 11:27 UTC+0100 Enrico Maria Giordano <e.m.giordano@emagsoftware.it>
  * source/rdd/dbtotal.prg
    ! fixed function DbRead() to exclude memo fields

2005-09-15 15:03 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/win32prn.prg
    ! METHOD EndPage() - reset font for new page on Win9X

2005-09-14 18:25 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbs_harb.ch
  * utils/xbscript/xbscript.prg
    * Minor revision

2005-09-15 13:21 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/win32prn.prg
    ! altered ::fDefault INIT to -1 so ANSI_CHARSET can be used
       ie. oPrinter:CharSet( 0 ) now works

2005-09-14 00:38 UTC+0100 Francesco Perillo <mc8647/at/mclink.it>
  * source/compiler/cmdcheck.c
  * source/compiler/hbusage.c
  * source/pp/ppcore.c
  * include/hbcomp.h
    + Added support for "+" sign on /u compiler switch. It loads the
      specified file in addition to the precompiled command rules.
      added a new hb_pp_STD_CH_ADDITIVE int variable
      Doc not updated

2005-09-13 23:25 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/gtwvw.c
  * contrib/wvtgui/wvtcore.c
    ! Missing code fixed in wv*_drawlineex(),
      Thanks to Anatole Kolotovkin.

2005-09-13 03:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
    + added GETVALUEFILE() and PUTVALUEFILE() methods - now ADS*
      RDDs works with dbFileGet()/dbFilePut() functions

  * xharbour/include/dbinfo.ch
    + added some missing CL5.3 and SIX3 like declarations:
      FILEGET_APPEND, FILEGET_OVERWRITE, FILEPUT_COMPRESS, FILEPUT_ENCRYPT

  * xharbour/include/hbapirdd.h
  * xharbour/include/hbrddwrk.h
    + added 3-rd parameter to PUTVALUEFILE()

  * xharbour/include/hbrdddbf.h
  * xharbour/source/rdd/dbf1.c
    + added GETVALUEFILE() and PUTVALUEFILE() methods to DBF RDD - strange
      but CL5.3 can use PUTVALUEFILE with "C" type fields
    + added support for {"D", 4, 0} fields

  * xharbour/include/hbrddfpt.h
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    + added GETVALUEFILE() and PUTVALUEFILE() methods - now
      dbFileGet()/dbFilePut() functions can be used with DBT, FPT and SMT
      files

  * xharbour/source/rdd/dbcmd.c
    + added 3-rd parameter to PUTVALUEFILE()
    + accept also filed name in dbFileGet()/dbFilePut()

  * xharbour/source/rdd/workarea.c
    + added support for {"D", 4, 0} fields

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
    * updated for PUTVALUEFILE() modifications

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed bug in positioning after record update

2005-09-12 09:54 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbs_harb.ch
    * Synched with pFunPtr removal

2005-09-12 09:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/xharbour.spec
    * replaced Copyright tag by License in PP specification

2005-09-11 23:32 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/regex.c
    ! added missing initialization of HB_REGEX structure

2005-09-11 21:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/xharbour.spec
    * changed "Copyright:" tag to "License:"

  * xharbour/bin/hb-func.sh
    * minor modification to pthread library - it's excluded for
      DOS/W32/OS2 builds

  * xharbour/include/hbvm.h
    + added hb_vmPushItemRef() function

  * xharbour/include/hbvmpub.h
  * xharbour/source/vm/runner.c
  * xharbour/source/vm/dynsym.c
    + added pCodeFunc to value union in HB_SYMB structure
    - removed pFunPtr from HB_DYNS - it was in practice unused and
      only cause confusion

  * xharbour/include/dbinfo.ch
    + added RDDI_MEMOVERSION to set subversion in given memo type.
      Now only used with FPT files - this switch allow to set type
      of default FPT files created by xHarbour:
         rddInfo( RDDI_MEMOVERSION, DB_MEMOEXT_FLEX )
      cause that FPT files store non string items in FLEXIII compatible
      format
         rddInfo( RDDI_MEMOVERSION, DB_MEMOEXT_SIX )
      cause that SIX3 comptible format will be used
    + added DBI_MEMOVERSION
    + added DBI_TABLETYPE - it sets default header format for newly
      created DBF files - possible values are now: DB_DBF_STD and DB_DBF_VFP
      Warning! DBSETDBFVERSION() function has been removed. Please replace
      it by:
         rddInfo( RDDI_TABLETYPE, DB_DBF_VFP )
      this switch can be used separately for each DBF* RDDs so after:
         rddInfo( RDDI_TABLETYPE, DB_DBF_VFP, "DBFCDX" )
      only DBFCDX will create DBF files with VFP headers when others
      will still use DB_DBF_STD
    + added folowing defines to avoid direct use of numbers:
         /* DBF TYPES */
         #define DB_DBF_STD            0
         #define DB_DBF_VFP            1

         /* MEMO TYPES */
         #define DB_MEMO_NONE          0
         #define DB_MEMO_DBT           1
         #define DB_MEMO_FPT           2
         #define DB_MEMO_SMT           3

         /* MEMO EXTENDED TYPES */
         #define DB_MEMOVER_STD        1
         #define DB_MEMOVER_SIX        2
         #define DB_MEMOVER_FLEX       3
         #define DB_MEMOVER_CLIP       4

         /* ENCRYPTION TYPE */
         #define DB_CRYPT_NONE         0
         #define DB_CRYPT_SIX          1

         /* LOCK SCHEMES */
         #define DB_DBFLOCK_DEFAULT    0
         #define DB_DBFLOCK_CLIP       1
         #define DB_DBFLOCK_CL53       2
         #define DB_DBFLOCK_VFP        3
         #define DB_DBFLOCK_CL53EXT    4
         #define DB_DBFLOCK_XHB64      5

  * xharbour/include/hbapirdd.h
  * xharbour/source/vm/itemapi.c
    + added hb_itemUnShare() function which clone string buffer in
      shared or static string items

  * xharbour/include/hbapiitm.h
    + added init() method. I didn't make it before because for RDD
      initialization *_GETFUNCTABLE() is enough but now I needed
      a function which can be inherited between different RDDs.
      In DBF* RDDs you may see how it is used for private RDD data
      stored in RDDNODE to keep some setting independently for each
      RDD. With a small modification it can be changed to keep such
      setting for each thread.
    + added ISSUPER_INIT(wa) and ISSUPER_EXIT(wa) macros

  * xharbour/include/hbset.h
    - remove HB_SET_DBFLOCK_* definitions

  * xharbour/include/hbsetup.h
    + added HB_UNSHARE_REFERENCES macro - disabled by default
      This is a note I left in this file:
      /* ***********************************************************************
       * This macros cause that string shared (and static) items are always
       * unshared before pushing on VM stack if they are passed by reference.
       * It's unnecessary to have it as long as you are not using buggy 3-rd party
       * C code which writes directly to string buffer of items passed by reference
       * without checking if the buffer is shared or static.
       * Any 3-rd party code should always use xHarbour API function to store
       * values in parameters passed by reference. But if someone doesn't want
       * to do that and agree to update his code after modification in our VM
       * which we can make at any time then he _must_ to make at least the
       * following operation before writing to string buffer:
       *    pItem = hb_intemUnShare( pItem );
       *
       * In valid code this macro cause only slowness so it's disabled by default.
       */

  * xharbour/include/hbdbf.h
    + added SMTFIELD structure for MEMO ITEM header stored in SMT
      format.

  * xharbour/include/hbrdddbf.h
    + added DBFDATA structure to keep private RDD settings
    * modified for SMT support
    * updated for recent RDD modification
    + added hb_dbfGetMemoData()/hb_dbfSetMemoData()

  * xharbour/include/hbrddcdx.h
  * xharbour/include/hbrdddbt.h
  * xharbour/include/hbrdddel.h
  * xharbour/include/hbrddfpt.h
  * xharbour/include/hbrddntx.h
  * xharbour/include/hbrddsdf.h
  * xharbour/include/hbrddwrk.h
  * xharbour/contrib/rdd_ads/ads1.c
    * updated for recent RDD modification

  * xharbour/source/vm/hvm.c
    ! refix error messages I fixed in the past. Guys I do not have
      time to check each commit. The hbtest was wrongly updated to
      hide xHarbour bugs instead of cleaning them. I fixed some bugs
      in error messages in our VM and hbtest begin to report it as
      an error. But it does not mean that the fixes should be removed
      to reduce number of errors reported by badly hacked version of
      hbtest. In the past due to one hack I lost few trying to restore
      original Clipper logic in VAL() when the problem was cause that
      hbtest was hacked to not show bad results from old VAL() code.
      I found it when I compiled hbtest by Clipper.
      Please _only_ things which interacts with xHarbour extensions
      or Clipper bugs can be changed in hbtest but _never_ hbtest
      should be modified to hide bugs. Now it will show more errors
      then before my commit but the results are Clipper compatible
      and very important in many programs which needs real arguments
      passed to error handler.
    * cover code for string item unsharing when passed by reference
      with macro HB_UNSHARE_REFERENCES

  * xharbour/source/vm/arrays.c
  * xharbour/source/vm/memvars.c
    * cover code for string item unsharing when passed by reference
      with macro HB_UNSHARE_REFERENCES

  * xharbour/source/rtl/philes.c
    * unshare given string item in FREAD() function

  * xharbour/source/vm/macro.c
    * replaced hb_dynsymFind_r() by hb_dynsymFind() - HB_DYNS symbols
      cannot change their addresses at runtime or our while VM will not
      work so it absolutely unnecessary to use hb_dynsymFind_r()

  * xharbour/source/vm/thread.c
    ! fixed possible GPF due to uninitialized variable

  * xharbour/source/rdd/dbcmd.c
    ! fixed internal error when DBCREATE() is called with empty array

  * xharbour/source/rdd/dbf1.c
    + added private RDD settings
s. Now it will show more errors
      then before my commit but the results are Clipper compatible
      and very important in many programs which needs real arguments
      passed to error handler.
    * cover code for string item unsharing when passed by reference
      with macro HB_UNSHARE_REFERENCES

  * xharbour/source/vm/arrays.c
  * xharbour/source/vm/memvars.c
    * cover code for string item unsharing when passed by reference
      with macro HB_UNSHARE_REFERENCES

  * xharbour/source/rtl/philes.c
    * unshare given string item in FREAD() function

  * xharbour/source/vm/macro.c
    * replaced hb_dynsymFind_r() by hb_dynsymFind() - HB_DYNS symbols
      cannot change their addresses at runtime or our while VM will not
      work so it absolutely unnecessary to use hb_dynsymFind_r()

  * xharbour/source/vm/thread.c
    ! fixed possible GPF due to uninitialized variable

  * xharbour/source/rdd/dbcmd.c
    ! fixed internal error when DBCREATE() is called with empty array

  * xharbour/source/rdd/dbf1.c
    + added private RDD settings
    * modified for SMT support
    * updated for recent RDD modification
    + added hb_dbfGetMemoData()/hb_dbfSetMemoData()

  * xharbour/source/rdd/delim1.c
  * xharbour/source/rdd/sdf1.c
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
    * updated for recent RDD modification
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    + added support for SMT and DBT files
    * updated for recent RDD modification

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed the problem reported by Enrico and ordKeyCount()
      used after dynamic unique flag change
    * updated for recent RDD modification

  * xharbour/source/rdd/rddsys.prg
  * xharbour/source/rdd/dbfntx/dbfntx0.prg
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * changed default supper RDD in DBFNTX to DBFFPT and set MEMOTYPE to DBT
    * updated for recent RDD modification

   Now DBFDBT RDD is no longer necessary and DBFFPT should work with
   any memo files: DBT, FPT and SMT. Please test it.
   On open memo type should be recognized automatically.
   For newly created file type of MEMO can by set by:
      rddInfo( RDDI_MEMOTYPE, DB_MEMO_DBT [, <cRdd> ] )
      rddInfo( RDDI_MEMOTYPE, DB_MEMO_FPT [, <cRdd> ] )
      rddInfo( RDDI_MEMOTYPE, DB_MEMO_SMT [, <cRdd> ] )
   For FPT memo files also subversion can be set with:
      rddInfo( RDDI_MEMOVERSION, DB_MEMOEXT_FLEX [, <cRdd> ] )
      rddInfo( RDDI_MEMOVERSION, DB_MEMOEXT_SIX [, <cRdd> ] )
   Default memotype in DBFCDX is FPT(FLEX) and in DBFNTX DBT.
   DBFFPT is noe requested by default in RDDSYS() instead of
   DBFDBT which is no longer necessary.
   Please test if everything is working OK.

2005-09-08 20:40 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
   * source/tip/ftpcln.prg
    ! minor change to downloadfile method()
   * source/rtl/dbedit.prg
    ! minor fix. Clipper allow picture array smaller then header array

2005-09-08 13:30 UTC+0200 Alex Strickland <sscc@mweb.co.za>
  * source/rtl/hbxml.c
    ! Replace hardcoded newline characters (unix) with the output from hb_conNewLine() in XML output.

2005-09-07 12:20 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Reset HB_OO_CLS_SYMBOL flag to avoid problem in inherence.

2005-09-07 16:30 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * bin/bld.bat
    ! added pcrepos to mingw32 and cleaned the lib list
    ! added lib codepage to OpenWatcom DOS and W32
    ! added gtwvt in case of HB_MULTI_GT
  * bin/hb-func.sh
    ! link libpthread only in linux architecture

2005-09-07 02:00 UTC-0300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
  * source/vm/hvm.c
    ! Support Destructor with PHB_SYMB to support Destructor in classes inside .hrb files.
    ! Fix incorrect optimization break support for ENABLE TYPE to Codeblock.

2005-09-06 15:44 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/classes.c
    ! Fixed GPF trap in hb_objHasMessage()

  * source/vm/hvm.c
    * Tentative fix to retain active procedure context when executing __QUIT()

2005-09-06 11:40 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/classes.c
  * source/vm/hvm.c
    * Tentative fix to Destructors (Walter please review)

2005-09-06 02:40 UTC-0300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Fix bug in __CLSMODMSG function

2005-09-05 02:40 UTC-0300 Walter Negro <anegro-AT-overnet.com.ar>
  * include/hboo.ch
  * source/vm/classes.c
    ! Fix bug executing ONERROR method.
      Reported by Eduardo Fernandes
    ! Fix bug executing DESTRUCTOR method.

2005-09-04 23:30 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
  * utils/hbmake.prg
    utils/hbmutils.prg
    + pcrepos.lib added to lib list

2005-09-04 10:55 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/bin/bld.bat
    + pcrepos.lib for other compilers

2005-09-04 01:30 UTC-0300 Walter Negro <anegro-AT-overnet.com.ar>
  include/classes.h
  include/hbapi.h
  include/hbclass.ch
  include/hboo.ch
  include/thread.h
  source/vm/classes.c
  source/vm/eval.c
  source/vm/runner.c
  source/vm/hvm.c
  source/vm/thread.c
    + SYNC Method support
    ! Pointer to function save PHB_SYMB instead of PHB_FUNC for better compatibility
      with .hrb files
    + Mutex API available in C.
      hb_threadMtexCreate, create the mutex with garbage collector.

      + PHB_ITEM hb_threadMutexCreate( PHB_ITEM pItem )
      + BOOL     hb_threadMutexLock( PHB_ITEM pMutex, BOOL bError )
      + BOOL     hb_threadMutexTimeOutLock( PHB_ITEM pMutex, int iTimeOut, BOOL bError )
      + BOOL     hb_threadMutexTryLock( PHB_ITEM pMutex, bError )
      + BOOL     hb_threadMutexUnlock( PHB_ITEM pMutex, bError )

2005-09-03 00:26 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/utils/xbscript/Makefile
  * xharbour/utils/xbscript/xbscript.prg
    * added _USE_APPMAIN_ macro for PP compilation as standalone
      program for system/linkers which use differ order execution
      of startup code then the order of linked files (f.e. GCC)

2005-09-02 11:55 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbregex.h
    * xCC/lCC adjustment

2005-09-02 20:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/hb-func.sh
  * xharbour/xharbour.spec
  * xharbour/bin/pack_src.sh
  * xharbour/config/bsd/gcc.cf
  * xharbour/config/darwin/gcc.cf
  * xharbour/config/dos/djgpp.cf
  * xharbour/config/dos/rsx32.cf
  * xharbour/config/dos/watcom.cf
  * xharbour/config/hpux/gcc.cf
  * xharbour/config/linux/gcc.cf
  * xharbour/config/linux/owatcom.cf
  * xharbour/config/os2/gcc.cf
  * xharbour/config/sunos/gcc.cf
  * xharbour/config/w32/gcc.cf
  * xharbour/config/w32/mingw32.cf
  * xharbour/config/w32/watcom.cf
    + added lib pcrepos

  * xharbour/contrib/rdd_ads/ads0.prg
  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/contrib/rdd_ads/adsfunc.c
  * xharbour/contrib/rdd_ads/rddads.h
    + register ADS as three separate RDDs: ADSNTX, ADSCDX, ADT
      (ADS RDD left for backward compatibility) -  they do not
      need to set table type.
    + synchronize SET_DECIMALS with ADS
    + added support for relations between ADS and non ADS workareas
      and ADS only relations which cannot be resolved by ADS
    ! fixed index key conversion in ordscope() and ordkeyval()
    + added support for ordRelKeyPos() (common RDD version of
      AdsGetRelKeyPos()/AdsSetRelKeyPos()) and tuned the value calculated
      for tables without indexes
    ! fixed BOF/EOF/FOUND flag updating in child areas
    * changed some internal logic basing on information about pending
      relations and simplified ADS BOF updating
    ! fixed SEEK LAST to work like in Clipper
      TODO: the found flag should be updated to respect pending movement
      forced by active filter on client side - it's still wrong.
    * changed SELF_LOCK()/SELF_RAWLOCK() to use ACE API directly (basing
      on documented behavior). It also resolve the problems with removing
      implicit locks which are not reported by AdsGetNumLocks() and were
      not unlocked.
    + added explicit locking inside APPEND() operation - it resolve the
      problem with automatic removing locks on appended records after
      any record movement or updating by ACE library but can introduce
      race condition - it should be consulted with ACE authors if it does.
    + added some missing checking for lock (when bTestRecLocks set) in some
      operation like DELETE()/RECALL()
    - removed SELF_SKIPRAW(), SELF_ADDFILED(), SELF_FIELDEXTENT(),
      SELF_CLEARSCOPE() methods
    + added SELF_SKIPFILTER(), SELF_GETREC() and SELF_PUTREC() methods
    + added methods for relations
    + added support for _SET_AUTOORDER
    + implement DBDROP(), DBEXISTS() with xHarbour file API - it should be
      enough for most of installation but we should also have alternate
      implementation with ACE API for remote file access when the resources
      are not mapped to client computer
    * read/write date values in Julian represenation if possible - this is
      our internal representation so we reduce unnecessary conversions for
      binary types and don't have to worry about _SET_DATEFORMAT setting
    ! SELF_GETVARLEN() now returns the real memo item length
    + added hb_rddGetADSWorkAreaPointer() to use instead of
      hb_rddGetCurrentWorkAreaPointer() in all ADS*() functions. The
      hb_rddGetADSWorkAreaPointer() returns NULL for non ADS* RDDs avoiding
      possible memory corruption in xHarbour or ACE area when bad handles
      or other AREA members were extracted/set
    + added some RDDI_* actions in SELF_RDDINFO()
    - removed unused members from ADS AREA
    * some other minor modifications not I do not remember now ;-)

  * xharbour/include/Makefile
  - xharbour/include/regex.h
  + xharbour/include/hbregex.h
    * renamed regex.h to hbregex.h
    + added prototypes for some basic xHarbour RegEx API

  * xharbour/include/dbinfo.ch
    + added DBOI_RELKEYPOS

  * xharbour/include/hbrdddbf.h
  * xharbour/source/rdd/dbf1.c
    + added SELF_PACKREC() for compatibility with Clipper and easier
      memopack implementation

  * xharbour/source/compiler/genc.c
    ! fixed generating symbol table when static function has the same name
      as memvar

  * xharbour/source/rdd/dbcmd.c
    + added ORDRELKEYPOS() - common for all RDDs functions which supports
      DBOI_RELKEYPOS which works like AdsGetRelKeyPos()/AdsSetRelKeyPos()
      in ADS RDD. ORDRELKEYPOS( [<nGoToPos>] ) -> <nCurrPos> | NIL
      is much less expensive then ordKeyNo()/ordKeyGoTo() combination
      and should be used to implement vertical scope instead of these
      functions.
        ordRelKeyPos() called without parameters returns current position
   in index (table) file in the range 0.0 to 1.0
   ordRelKeyPos( <nPos> ) sets new position in index (table) file.
   <nPos> should be in range 0.0 to 1.0

  * xharbour/source/rdd/workarea.c
    ! fixed typo in HB_TRACE message

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + added support for DBOI_RELKEYPOS - ORDRELKEYPOS() returns in DBFCDX
      exactly the same results as in ADSCDX when the same index file is
      used also when scopes are used. It's unintentional side effect of
      the simplest method I used for calculation.
    * modified to use xHarbour RegEx API not the POSIX one

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    + added support for DBOI_RELKEYPOS - ORDRELKEYPOS() returns in DBFNTX
      differ results then in ADSNTX. In ADS AdsGetRelKeyPos() doesn't give
      valid results IMHO the same algorithm were used as for CDX format
      which doesn't respect keys in interior nodes which are significant
      in NTX format and the fact that the number of keys can be differ then
      number of subpages - the effect is that it reach 1.0 much faster then
      it should (we are not at EOF) and AdsSetRelKeyPos() cannot set position
      to records which are not at the lowest level but chose the nearest
      one.
    * modified to use xHarbour RegEx API not the POSIX one

  * xharbour/source/rtl/direct.c
  * xharbour/source/rtl/strmatch.c
  * xharbour/source/vm/memvars.c
    * modified to use xHarbour RegEx API not the POSIX one

  * xharbour/source/vm/hvm.c
    - removed unused label

  * xharbour/source/rtl/regex.c
    + added basic xHarbour RegEx functions
   BOOL hb_regexCompile( PHB_REGEX pRegEx, const char *szRegEx,
              int iCFlags, int iEFlags );
   BOOL hb_regexGet( PHB_REGEX pRegEx, PHB_ITEM pRegExItm,
           int iCFlags, int iEFlags );
   void hb_regexFree( PHB_REGEX pRegEx );
   BOOL hb_regexMatch( PHB_REGEX pRegEx, const char *szString,
             BOOL fFull );
      This is very basic set of function which allow to eliminate all
      direct regex_t access in xHarbour core code. I will work on it
      in the future adding missing functionality and eliminating POISX
      meta layer.

  * xharbour/source/rtl/Makefile
  + xharbour/source/rtl/pcre/ChangeLog
    + added changelog file to mark any modification of original PCRE file
      for easier upgrading in the future

  * xharbour/source/rtl/pcre/chartables.c
  * xharbour/source/rtl/pcre/dftables.c
    ! added missing extern declaration to satisfy C++ compilers

  * xharbour/source/rtl/pcre/pcre_dfa_exec.c
    * commented unused variables

  * xharbour/source/rtl/pcre/pcreposix.c
    ! fixed offset setting for first match when REG_STARTEND is used

2005-09-02 13:40 UTC-0300 Luiz Rafael Culik<luiz at xharbour.com.br>
   * source/tip/ftpcln.prg
      It include 5 new methods
      Rename( cOld, cNew ) // to rename files on ftp server
      Ls( spec ) // to list ftp server contents
      UpLoadFile( cLocalFile, cRemoteFile )  // to upload files to server
      DownLoadFile( cLocalFile, cRemoteFile )  // to download files to server
      MKD( cPath )  // create an directory o ftp server
   + tests/tiptest/uploadftp.prg
      ! sample demostrating how to upload files to ftp server
   + tests/tiptest/dnldftp.prg

2005-09-02 11:45 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.bc (corrected)
  * makefile.dc
  * makefile.gc
  * makefile.wc
  * hrbdll.gc
  * hrbdll.wc
    + source/rtl/pcre/*

2005-09-02 11:55 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * include/regex.h
    ! fixed path specification to be linux compatible
  * config/linux/gcc.cf
    * added -lpcrepos to compilation to use new regex engine

2005-09-02 00:15 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.nt
  * makefile.vc
  * hrbdll.vc
  * hrbdll.bc
  * hrbdll.dc
  * hrbdll.pc
    + source/rtl/pcre/*

2005-09-01 11:37 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    % Few optimizations related to hb_vmPushString() followed by hb_xfree()
    * [Hopefully] Completed support for operator overloading, including native types.

  /* NOTE: Operator Overloading
           --------------------

    1. When an operator has 2 arguments only the the LEFT side may overload the operation.

    2. NATIVE COMPATABILITY of operands PRECEDEs Operator Overloading declarations.
       This means that when the operation can be performed withOUT an error, overloading
       is NOT intended to take place, and will be ignored.
   */

2005-09-01 15:04 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * source/rtl/Makefile
    * forgot to commit its changes to use pcre/

2005-09-01 10:01 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * config/os2/gcc.cf
    * modified to add pcrepos.a library to linklist

2005-08-31 23:40 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/tip/encoding/base64.c
  * source/tip/encoding/uuencode.c
  * source/tip/encb64.prg
    ! Fixed problem when doing base64 encoding on mt programs
      Reported by Rodrigo Moreno

2005-08-29 17:31 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
  * source/compiler/exproptb.c
    - Removed optimization of INT + <x> into <x> <INT> HB_P_ADDINT, in hb_compExprUsePlus()
      because 1 + "A" is not same as "A" + 1

  * source/vm/hvm.c
    ! Fixed hb_vmPlus() to seperate handling of INT + <String(1)> from <String(1)> + <INT>

  * utils/hbtest/rt_hvma.prg
    * Corrected expected error to not modify arguments order for 1 + NIL

  * tests/associat.prg
    * Was not commited in my latest commit.


2005-08-31 17:10 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
   * makefile.bc
     * changed to work with new pcre 6.3 regex engine
   * bin\bld.bat
     * changed to add pcrepos.lib to built .exe files

   /* NOTE: This win32 build seems to work fine, I don't have other
            win32 compilers available, though.
   */

2005-08-31 13:30 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * source/rtl/regex.c
    * modified to use pcre/ contents
  * include/regex.h
    * modified to use pcre/ contents

  /* NOTE: After this change all builds, apart from the OS/2 GCC one, are _BROKEN_
           To make them work again build files needs to be updated to use
           pcre/ and build its content as a library ( pcrepos.lib )
  */

2005-08-31 13:25 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * source/rtl/pcre
    + added directory to contain pcre library
  * source/rtl/pcre/*
    + chartables.c
    + config.h
    + dftables.c
    + Makefile
    + pcre.h
    + pcreposix.c
    + pcreposix.h
    + pcre_compile.c
    + pcre_config.c
    + pcre_dfa_exec.c
    + pcre_exec.c
    + pcre_fullinfo.c
    + pcre_get.c
    + pcre_globals.c
    + pcre_info.c
    + pcre_internal.h
    + pcre_maketables.c
    + pcre_ord2utf8.c
    + pcre_printint.c
    + pcre_refcount.c
    + pcre_scanner.h
    + pcre_study.c
    + pcre_tables.c
    + pcre_try_flipped.c
    + pcre_ucp_findchar.c
    + pcre_valid_utf8.c
    + pcre_version.c
    + pcre_xclass.c
    + ucp.h
    + ucpinternal.h
    + ucptable.c
    + ucp_findchar.c
    + Added pcre 6.3 files which are needed by xharbour regex support

2005-08-31 08:05 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tbrowse.prg
    ! fixed bug in down() and up() methods to skip records even if we
      call down/up before call stabilize, as Clipper's tbrowse.
      Bug reported by Gaby Zurbuchen.

2005-08-29 17:31 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    + Added prg level HB_ResetWith( <xNewWith> )

2005-08-30 16:00 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tbrowse.prg
    ! Minor fix in ColorRect() method.

2005-08-30 15:00 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tbrowse.prg
    ! fixed ColorRect behaviour for Clipper compatibility.
    + created any new methods, datas and defines for ColorRect control and
      other ones are changed to same purpose.

2005-08-30 23:45 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/gtwvw.c
  * contrib/gtwvw/hbgtwvw.h
    + supporting Maximize mode
    + new functions for centering window
    + bugfix and enhancement on scrollbar

  * contrib/gtwvw/doc/whatsnew.txt
    Details of above changes.

  + contrib/gtwvw/samples/maximize.prg
    Sample of using Maximize mode in a gtwvw app.

2005-08-30 13:30 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/rtl/copyfile.c
    ! Fixed problem reported by Rafa Carmona. Now use hb_spOpen instes of hb_fOpen

2005-08-29 11:03 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/classes.c
    ! Corrected hb_objGetOpOver() to use hb_objClassH()
  * source/vm/hvm.c
    + Added support for operator overloading of native types.
  * tests/associat.prg
    + Added sample of operator overloading for numerics

2005-08-29 10:16 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  *  source/vm/hvm.c
     ! Fixed 2 minor bugs in hb_vmSend() related to Hash method calls
       using Hash:Method( <params> ) syntax

2005-08-28 16:30 UTC-0300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/hbserv.c
  * source/vm/hvm.c
    * Modification to avoid link hbverv code allways.
  * source/vm/eval.c
    ! Fix bug calling hb_execarray() with array and codeblock.
  * source/vm/asort.c
    ! Lock pivot item.

2005-08-25 09:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * tests/testw32p.prg
    + added ( commented ) sample of TextOutFont() & MM_TOPOSX/Y()

2005-08-24 09:45 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/win32prn.prg
    + METHOD MM_TO_POSX( nMm )  Conversion methods from mm on page
    + METHOD MM_TO_POSY( nMm )  to col or row position.
    + METHOD INCH_TO_POSX( nInch ) Conversion methods from Inch on page
    + METHOD INCH_TO_POSY( nInch ) to col or row position.
    + METHOD TextAtFont()       Print at pos in specified font & color
    + METHOD SetBkMode( nMode ) Set background print mode
    - Remove xxxAPI() METHODS added in previous post

2005-08-23 12:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbapirdd.h
    * changed {SELF|SUPER}_RECNO( AREAP, PHB_ITEM ) to
      {SELF|SUPER}_RECNO( AREAP, ULONG *)
    + added {SELF|SUPER}_RECID( AREAP, PHB_ITEM )
    + added {SELF|SUPER}_LOCATE( AREAP, BOOL fContinue ) for
      LOCATE/CONTINUE implementation on RDD level - it allows to
      speedup these operation by RDD and resolve the problem with
      external FOUND flag update
    * changed {SELF|SUPER}_UNLOCK( AREAP, ULONG ) to
      {SELF|SUPER}_UNLOCK( AREAP, PHB_ITEM ) - CL5.3 compatible.
      It was the last functions when record number was used directly.
      Now we can create full functional RDD with non numeric record IDs
    + added fBackword and fOptimized fields to DBSCOPEINFO for RDDs
      which may want to mark optimization status
    + added fOptimized to DBFILTERINFO (as above)
    + added isOptimized to DBRELINFO for RDDs which may want to mark
      that relation is optimized on server side. It greatly simplify
      relation implementation which can be resolved on both server and
      xHarbour side and be set between differ RDD work areas.
    + added PHB_ITEM abBlock to DBEVALINFO for RDD which may want to
      pass given codeblock as string to server and evaluate it on
      server side


  * xharbour/include/classes.h
    * small casting fixes for pedantic C++ compilers

  * xharbour/include/dbinfo.ch
    + added DBOI_BAGORDER (number of first order in a bag) for some
      SIX3 sx_*() functions emulation.
    + added DBOI_ISREINDEX, DBOI_I_BAGNAME, DBOI_I_TAGNAME (also SIX3)

  * xharbour/include/hbdefs.h
    ! fix HB_DBL2ORD() macro for -0.0 IEEE754 double conversion to index key

  * xharbour/include/hbrddcdx.h
  * xharbour/include/hbrdddbf.h
  * xharbour/include/hbrdddbt.h
  * xharbour/include/hbrdddel.h
  * xharbour/include/hbrddfpt.h
  * xharbour/include/hbrddntx.h
  * xharbour/include/hbrddsdf.h
  * xharbour/include/hbrddwrk.h
  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/delim1.c
  * xharbour/source/rdd/sdf1.c
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
  * xharbour/source/rdd/hsx/hsx.c
  * xharbour/source/rdd/workarea.c
    * updated for RDD modifications

  * xharbour/source/rdd/dbcmd.c
    * updated for RDD modifications
    * __DBLOCATE() and __DBCONTINUE() now use SELF_LOCATE() method
      (in SELF_SETLOCATE() now also other DBSCOPEINFO fields are set)
    * DBORDERINF() now also to pass ordbag parameter as number - necessary
      for SIX3 emulation in some functions.

  * xharbour/source/rdd/workarea.c
    * updated for RDD modifications
    + added default WA LOCATE() method
    ! fixed dangerous code (possible memory corruption on reentrance)
      in CLEARREL() method

2005-08-23 16:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/win32prn.prg
    ! METHOD Box(), altered to also support Rounded Rectangles

2005-08-21 23:59 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tbrowse.prg
    + created method DefColorToDisp( oCol:DefColor ) do return default array
      of indexes if any index is out of scope. Clipper compatibility.
    * changed method named DrawARow() to DrawRow() and method named AColInfo()
      to ColInfoArray() for better knowledge. This last was confused with
      ::aColsInfo data.
    * changed defines named o_??? for better management.
      All these changes are made after bug detected when I run tbdemo.prg
      located in clipper\source. The previous version of tbrowse generate
      a run time error if colorblock is called in column that data type is
      not character. The other bug is related to defcolor of columns when
      number of records is smaller than rows.

2005-08-22 09:30 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/win32prn.prg
    ! METHOD GetTextWidth(cString), fix width calculation

2005-08-19 11:13 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    * Fixed case of wrong transformation of '[' ']' to '"' '"' when cLastChar is '.' in getExpReal()

2005-08-36 17:20 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * source/rtl/hblog.prg
    ! Fixed problem in which oldest log file wasn't being erased when maximum
      number of backup files was reached.  Posting on behalf of Brian Hays.

2005-08-16 21:35 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/include/gtinfo.ch
    * added GTI_XCURSORCOLOR1, GTI_XCURSORCOLOR2, GTI_XCURSORBLINKRATE
    * Under gtxwc cursor is a "colored" character, these settings help to
    * make it more visible.
  * xharbour/source/rtl/gtxwc.c
    * moved cursor blinking code to hb_xvt_gtProcessMessages
    * added logic to control cursor color and blink rate

2005-08-16 14:50 UTC-0300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Fix bug in __CLSNEW.
      Reported by Phil Krylov.
