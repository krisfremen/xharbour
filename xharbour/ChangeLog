/*
 * $Id: ChangeLog,v 1.5913 2008/02/10 19:09:33 ronpinkas Exp $
 */

/* Use this format for the entry headers:
   YYYY-MM-DD HH:M   * UTC[-|+]hhm   * Your Full Name <your_email@address>
   For example:
   2002-12-01 23:12 UTC+0100 Foo Bar <foo.bar@foobar.org>
*/

2008-02-10 09:00 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * source/compiler/harbour.slx
  * source/macro/macro.slx
    * Added missing .T. .F. .Y. .N. .AND. .OR. .NOT. .NULL. to IF_ACCEPT_AS_DELIMITER( '.' ) exceptions

2008-02-10 14:38 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * source/compiler/genc.c
    ! Fixed silly typo which caused unexpected results in comment generation
      which in some C compilers this could cause remainder of file to be ignored.

   /*
     Sorry, but CLEAN BUILD, and RECOMPILE of all PRG code is highly encouraged.
    */

2008-02-10  11:15 UTC-0300 Luiz Rafael Culik( luiz at xharbour.com.br)
  * source/ct/files.c
    ! fixed to return correct filesize on *nix when file >=4Gb

2008-02-10 03:00 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * include/hbcomp.h
  * include/hbdefs.h
  * include/hbvmpub.h
  * source/compiler/genc.c
  * source/compiler/genhrb.c
  * source/compiler/harbour.c
  * source/compiler/harbour.sly
  * source/vm/hvm.c
  * source/vm/runner.c
    + Added support for Namespace Publishing & Consuming to HRB compiled modules.

  * source/compiler/harbour.c
    + Adde auto define __HRB__ when -gh is used

  * tests/readhrb.prg
    * Updated for latest hrb format

  * tests/namespace.prg
  * tests/dynamic.prg
  * tests/tstnamespace.prg
    * Updated to show dynamic namespace usage into/outof HRB compiled modules

   /*
      NOTES:
             1. CLEAN BUILD is a MUST!
             2. RECOMPILE of ALL .HRB files is a MUST!
    */

2008-02-10 04:00 UTC-0200 Walter Negro <anegro/at/overnet.com.ar>
  * Reinit Changelog
  + Changelog.027
  * include/classex.ch
    ! Fix incorrect translate because #[x]translate sentence precedence, now
      scope1.prg and scope2.prg compile correctly (see .ppo)
  * include/hbvmpub.h
  * source/vm/arrays.c
  * source/vm/classes.c
  * source/vm/hvm.c
    * Speed improvement and GPF trap using MT in calls to Super methods.
      Now two threads can call Super methods using the same object without problem.
