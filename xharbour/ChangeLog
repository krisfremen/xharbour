/*
 * $Id: ChangeLog,v 1.6319 2009/01/08 09:11:13 marchuet Exp $
 */

/* Use this format for the entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name <your_email@address>
   For example:
   2002-12-01 23:12 UTC+0100 Foo Bar <foo.bar@foobar.org>
*/

2009-01-08 23:25 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * config/rules.cf
    * give PRG_USR higher priority then HB_FLAGS
  * include/thread.h
    ! fixed declaration of HB_ATOMIC_INC()/HB_ATOMIC_DEC() macros
      for 32bit x86 *nixes - by mistake it was added to ST section
  * source/rtl/terror.prg
    ! removed lInErr static variable - it breaks using errorNew() in
      MT programs
  * source/vm/itemapi.c
    ! fixed copied as is from Harbour hb_itemUnShareString()
      Harbour uses different HVM internals and such code cannot
      be copied without adopting to xHarbour
  * tests/speedtst.prg
    ! fixed possible race condition in initialization
    + added SET WORKAREA PRIVATE
  (by Przemyslaw Czerpak)
  * include/classes.h
  * source/vm/classes.c
  * source/vm/hvm.c
    ! Avoid s_pClasses reallocation in MT mode.
    (partially borrowed from Harbour code by Przemyslaw Czerpak)
  * ChangeLog
    ! fixed year numbers in last few commits

2009-01-08 11:55 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * common.mak
  * compile.mak
  * include\Makefile
  * include\hbrddnsx.h
  * include\hbsetup.h
  * makefile.bc
  * makefile.dc
  * makefile.gc
  * makefile.pc
  * makefile.vc
  * makefile.wc
  * mdir.bat
  * source\rdd\dbfcdx\dbfnsx1.c
    + Added dbfnsx rdd form Prezmek harbour's version (many thks to Prezmek)
    ! fixed OrdBagName it was returning too extension.

  * source\lang\msgca.c
    ! fixed some catalanish entries.

  * source\rdd\bmdbfcdx\bmdbfcdx1.c
  * source\rdd\dbfcdx\dbfcdx1.c
  * source\rdd\dbfntx\dbfntx1.c
    * reused pError on canretry errors.

  * source\compiler\hbslex.c
  * source\rtl\philes.c
  * include\hbrddntx.h
  * source\tip\client.prg
  * source\tip\ftpcln.prg
    * minor syntax modifications.

2009-01-08 00:05 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * include/hbdll.ch
    + Added few variations (including a simplification) of the IMPORT command

  * source/vm/maindllh.c
    + Added missing HB_EXPORT qualifier.

2008-12-27 16:45 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * contrib/png/png.c
  * contrib/png/png.h
  * contrib/png/pngconf.h
  * contrib/png/pngerror.c
  * contrib/png/pngget.c
  * contrib/png/pngmem.c
  * contrib/png/pngpread.c
  * contrib/png/pngread.c
  * contrib/png/pngrio.c
  * contrib/png/pngrtran.c
  * contrib/png/pngrutil.c
  * contrib/png/pngset.c
  * contrib/png/pngtrans.c
  * contrib/png/pngwio.c
  * contrib/png/pngwrite.c
  * contrib/png/pngwtran.c
  * contrib/png/pngwutil.c
    ! updated to version 1.2.34

  * source/utils/hbpp/hbpp.c
  * source/utils/hbmake/hbmake.prg
  * source/utils/hbtest/hbtest.prg
  * source/utils/hbrun/hbrun.prg
  * source/compiler/hbusage.c
    ! bump copyright years to 2009

2008-12-24 12:00 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * include/hbdefs.h
    * disabling HB_FORCE_EXPORT in MinGW builds breaks applications using
      pCode DLL with standard build because the DLL can no longer see the
      required function in the executable. Compiling xHarbour with -D__EXPORT__
      will do the job, but that's not the point.

      As a note, functions which are "forced-export" are those required by
      source/vm/maindllp.c, so pCode DLL users is facilitated by then.

      The sample below fails due to nulling the qualifier:

      ///// BEGIN Application Code
      PROCEDURE MAIN()
      ? FOO()
      ///// END Application Code

      ///// BEGIN DLL Codes
      typedef void (*HB_RETC)( const char * szText );

      HB_FUNC( FOO ) { my_retc( "FOO" ); }

      void my_retc( const char * szText )
      {
	 // Looking "_hb_retc" in EXECUTABLE which is no longer accessible
	 // due to nulling of HB_FORCE_EXPORT. In my Windows machine, MINGW
	 // (and others too) cannot work with HB_FORCE_EXPORT nulled.
         HB_RETC pRetc = GetProcAddress( GetModuleHandle( NULL ), "_hb_retc" );
         pRetc ( szText );
      }
      ///// END DLL Codes

      Because of this, the disabling of HB_FORCE_EXPORT is now guarded by
      a define constant "NO_DISABLE_FORCE_EXPORT", hence those who want
      MINGW apps works as before should add this define to disable the hack.

2008-12-23 23:30 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * contrib/gtwvg/gtwvg.h
    ! Fixed building with old Win32 API headers.
  * contrib/unicode/hbcx.c
  * contrib/unicode/hbencode.c
    char * -> const char *

2008-12-23 21:05 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * xharbour/config/global.cf
    * formatting

  * xharbour/config/w32/bcc32.cf
  * xharbour/config/w32/xcc.cf
    ! updated for new GT and zlib libraries

  * xharbour/contrib/gtwvg/wvtutils.c
    * use HB_PTRDIFF instead of UINT_PTR which is not available in some
      C compilers

  * xharbour/include/hbapi.h
  * xharbour/source/vm/garbage.c
    * changed ULONG hb_gcIncRef( void * ) to void hb_gcIncRef( void * ).
      The return value is not necessary and it may be impossible to write
      machine code without external locking (mutexes) which will make
      such operation in atomic MT safe way on some CPU. F.e. it's possible
      to write BOOL hb_atomic_dec( int * ) in assembler for i386 but not
      int hb_atomic_inc( int * ). Only void hb_atomic_inc( int * ) can be
      written without additional synchronization mechanism.

  * xharbour/include/hbcompat.ch
    ! fixed included header files and synced with Harbour version
      If possible keep this file synced in both projects.

  * xharbour/include/hbdefs.h
    * disabled HB_FORCE_EXPORT in MinGW builds - it breaks xharbour.dll
      creation when GNU make is used so also -shared parameter do not work
      in xhb* scripts.

  * xharbour/include/thread.h
    + added assembler code for hb_atomic_inc32() and hb_atomic_dec32()
      for GCC and 32bit builds. It gives as least basic support for
      MT safe readonly access to complex variables in Linux 32bit builds.

  * xharbour/source/common/hbstr.c
    ! fixed function name in HB_TRACE message

  * xharbour/source/compiler/cmdcheck.c
    ! fixed parameter parsing - argv[0] is program name with path and
      it was used to parse parameters so any '-' and '/' character in
      harbour binaries name and/or paths were decoded as parameters.

  * xharbour/source/pp/ppcore.c
    ! fixed accessing freed memory in line number updating

  * xharbour/source/pp/ppgen.c
    ! added missing #undef HB_VER_L_USR in generated hbverbld.h file

  * xharbour/include/thread.h
  * xharbour/source/vm/thread.c
  * xharbour/source/rtl/hbserv.c
    ! fixed support for HB_THREAD_TLS_KEYWORD - if platform supports it
      then it gives performance improvement.

  * xharbour/source/rtl/pcre/Makefile
    ! added include path necessary for POCC/XCC builds with GNU make

  * xharbour/source/vm/classes.c
    ! fixed casting for memcpy and pClass->pFunError - by default it's
      declared as function address and passing code segment pointer to
      memcpy is illegal in some OSes so without valid casting such code
      cannot be compiled
    + added __CLS_CNTSHRDATA()

  * xharbour/include/hbtypes.h
  * xharbour/source/vm/maindllp.c
    * updated function declarations to current CVS
    ! fixed wrong default initialization for FHANDLE. It should be
      ( FHANDLE ) -1 instead of NULL

  * xharbour/utils/hbrun/Makefile
    ! removed unnecessary zlib from library list - it should be set
      automatically like pcrepos by *.cf files when rtl is used.

  * xharbour/tests/speedtst.prg
    * updated speedtst to current Harbour code. This version allows to
      test also MT performance it's quite good MT stress test - better
      then dedicated ones

  (by Przemyslaw Czerpak. Thanks!)

2008-12-23 19:25 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * include/hbstack.h
    ! Fixed a typo from my last commit.
  * source/pp/ppgen.c
  * utils/hbpp/hbpp.c
    ! Added missing include from my previous commit.
  * include/hbapi.h
  * include/hbcomp.h
  * source/compiler/genc.c
  * source/compiler/harbour.c
    ! Buggy code for filename normalization in compiler replaced by Harbour's
      (written by Przemek).
    ! global variable hb_comp_FileAsSymbol removed.
  * contrib/hbzlib/zip.c
  * contrib/unicode/hbcx.c
  * contrib/unicode/hbencode.c
  * source/compiler/gencobj.c
  * source/compiler/genhrb.c
  * source/compiler/genobj32.c
  * source/compiler/harbour.sly
  * source/compiler/hbpcstat.c
  * source/rtl/fnsplit.c
  * source/rtl/hbffind.c
  * source/vm/extend.c
  * utils/hbpp/hbppcore.c
    ! szFileName buffer for hb_fsFNameMerge() must be at least
      _POSIX_PATH_MAX + 1 bytes long.
    ! strncpy() -> hb_strncpy().
    ! char * -> const char * fixes.
  * source/rtl/gtwvt/gtwvt.c
    ! Fixes to build with _MSC_VER <= 1200.

2008-12-23 01:00 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * contrib/hbzlib/zip.c
  * contrib/unicode/hbcc.prg
  * contrib/unicode/hbcu.c
  * contrib/unicode/hbcx.c
  * contrib/unicode/hbcy.c
  * doc/en/terminal.txt
  * include/hb_io.h
  * include/hbapifs.h
  * include/hbdefs.h
  * include/hbsetup.h
  * include/hbwince.h
  * source/compiler/harbour.c
  * source/ct/disk.c
  * source/ct/files.c
  * source/rtl/console.c
  * source/rtl/copyfile.c
  * source/rtl/defpath.c
  * source/rtl/direct.c
  * source/rtl/disksphb.c
  * source/rtl/file.c
  * source/rtl/filestat.c
  * source/rtl/fssize.c
  * source/rtl/hbffind.c
  * source/rtl/hboutdbg.c
  * source/rtl/hbserv.c
  * source/rtl/net.c
  * source/rtl/philes.c
  * source/rtl/philesx.c
  * source/rtl/seconds.c
  * source/rtl/set.c
  * source/rtl/tprinter.c
  * source/rtl/gtos2/gtos2.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/gttrm/gttrm.c
  * source/vm/hbi18n.c
  * source/vm/inet.c
  * source/vm/thread.c
  * utils/hbpp/hbpp.c
  * utils/hbpp/hbppcore.c
    * Changed some macros to be in the HB_ namespace, to be
      possibly shorter, more unified and clearer.
      OS_UNIX_COMPATIBLE                -> HB_OS_UNIX_COMPATIBLE
      OS_DOS_COMPATIBLE                 -> HB_OS_DOS_COMPATIBLE
      OS_PATH_LIST_SEPARATOR            -> HB_OS_PATH_LIST_SEP_CHR
      OS_PATH_DELIMITER                 -> HB_OS_PATH_DELIM_CHR
      OS_PATH_DELIMITER_STRING          -> HB_OS_PATH_DELIM_CHR_STRING
      OS_PATH_DELIMITER_LIST            -> HB_OS_PATH_DELIM_CHR_LIST
      OS_FILE_MASK                      -> HB_OS_ALLFILE_MASK
      OS_DRIVE_DELIMITER                -> HB_OS_DRIVE_DELIM_CHR
      OS_HAS_DRIVE_LETTER               -> HB_OS_HAS_DRIVE_LETTER
      OS_OPT_DELIMITER_LIST             -> HB_OS_OPT_DELIM_LIST
      OS_EOL_LEN                        -> HB_OS_EOL_LEN
      HARBOUR_GCC_OS2                   -> HB_OS_OS2_GCC
    ; INCOMPATIBLE change, please update your sources, a simple
      case-sensitive search and replace on .c/.cpp/.h/.hpp files
      will be enough for most sources.
    * strncat() -> hb_strncat()
    * strncpy() -> hb_strncpy()
    * FHANDLE -> HB_FHANDLE
    * other minor fixes
  (by Viktor Szakats, synched to Harbour as possible)

  * source/rtl/filesys.c
    + Added #define _XOPEN_SOURCE to fix warnings on Unixes.
    + implemented hb_fsGetAttr() and hb_fsGetFileTime() for DOS, MS-Win,
      OS2 and *nixes. Please test it on different platforms.
    + added hb_fsSetFileTime()
    + added POSIX file attributes with some macros to convert Harbour
      definitions into OS ones.
    + added hb_fsSetAttr()
  * source/pp/ppgen.c
    ! added hb_setGetDirSeparator()
  * include/hbdate.h
  * source/common/hbdate.c
    + added hb_timeStampEncode()
  * include/hbstack.h
  * include/thread.h
  * source/vm/estack.c
  * source/rtl/fserror.c
    * moved IO errors to HVM stack
    + added special IO error handling which works without HVM stack
      It allows to use hb_fs*() functions without allocated stack
      by 3-rd party threads.
  (by Przemyslaw Czerpak, synched to Harbour as possible)

  * source/common/hbfsapi.c
  * source/rtl/Makefile
  * common.mak
  + source/rtl/hbfile.c
    + Added hb_fsNameExists() C level function.
    + Added hb_FNameExists() Harbour level function.
    ; Both will return true if any kind of directory entry
      exists with the given name (IOW it doesn't matter
      if it's a file or directory, or else).
    + Added hb_fsFileExists(). This is the preferred way to check
      for the existence of a file, because it is fast and will
      find a file even if directory traversal is not possible
      for the file's directory. Works the same way as file
      existence check in most other tools.
    + Added HB_FILEEXISTS() Harbour level function to check
      for the existence of a file. This works better than
      FILE() in most situations, but it doesn't accept any
      wildcards.
    (by Viktor Szakats, synched to Harbour as possible)
    + Added hb_fsDirExists()
    + Added HB_DIREXISTS()
    (by Mindaugas Kavaliauskas, synched to Harbour as possible)

  * source/compiler/gencobj.c
    ! Fixed to not used access(). Using hb_fsFileExists() instead.
    (by Viktor Szakats, synched to Harbour as possible)

  * source/common/Makefile
    ! added hbwince.c
  * source/compiler/hbusage.c
    ! Fixed the description of -gc3.
  * source/rtl/win32ole.prg
    ! Fixed header filename case.
  * config/w32/mingw32.cf
    ! Added zlib to link path.

2008-12-22 20:45 UTC+0100 Enrico Maria Giordano <e.m.giordano@emagsoftware.it>
  * source\rtl\rat.c
    * implemented optional parameters nStart, nEnd

2008-12-20 17:32 UTC+0100 Francesco Saverio Giudice <info / at / fsgiudice.com>
  * source/rtl/dumpvar.prg
    * Updated new syntax: HB_DumpVar( xVar, lRecursive, nMaxRecursionLevel ) -> cDump
  * source/rtl/objfunc.prg
    * Updated to use __SetClassScope() to unblock access to protected class vars

2008-12-15 23:02 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * source/compiler/harbour.slx
    - Removed support for double letters string containers ['...'] ["..."] and [[...]]
      as PP now uses E"..." instead

2008-12-08 23:24 UTC+0100 Enrico Maria Giordano <e.m.giordano@emagsoftware.it>
  * source\rtl\gtwvt\gtwvt.c
  * contrib\gtwvg\gtwvg.c
    * replaced all GFX_ with HB_GFX_

2008-12-10 10:47 UTC+0100 Patrick Mast <patrick.mast@xharbour.com>
  * compile.mak
    + hbntos

2008-12-10 03:40 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * common.mak
  * include/hbextern.ch
  * source/rtl/Makefile
  + source/rtl/hbntos.c
    + Added function HB_NToS( <number> ) -> <string>.
      This is equivalent to LTrim( Str( <number> ) ), just faster.
  * include/hbapi.h
  * source/vm/extend.c
    + Added hb_retc_null() which is equivalent to hb_retc( NULL ) and will
      return an empty string. I opted for this because hb_retc( NULL ) usage is
      not compatible with CA-Cl*pper _retc(), so it might create problems when
      writing C code intended for both Clipper and Harbour.
  * include/hbgfx.ch
  * include/hbgfxdef.ch
     * GFX_* constants renamed to HB_GFX_*. The old ones are
       still working but it's recommended to update to use HB_GFX_*.
  (borrowed from Harbour, by Viktor Szakats)

  * source/rtl/gtcrs/gtcrs.c
  * source/rtl/gttrm/gttrm.c
  * source/rtl/gtsln/gtsln.c
    ! fixed reentrance counter resetting
    * misc cosmetic changes
  * source/rtl/gttrm/gttrm.c
    * use CP437 for BOX characters when terminal is in UTF-8 mode
    ! set default color before raw scrolling in console emulation
      mode
    ! fixed redrawing GPM mouse pointer after screen updating
  * source/rtl/gtxwc/gtxwc.c
  * source/rtl/gtxwc/gtxwc.h
    ! use XInitThreads() for MT safe thread access when linked with MT HVM
    + added optional mutex protection enabled by HB_XWC_XLIB_NEEDLOCKS macro
      to use when XLib does not support XInitThreads()
    * added hack for problems with some XLIB versions in heavy stress
      MT tests
  * source/rtl/gtcrs/gtcrs.h
    * removed unnecessary declaration for _POSIX_PATH_MAX
      it's always defined in Harbour header files
  * source/rtl/box.c
    + added HB_DISPBOX() function - works like DISPBOX() bit does not
      change cursor position and is atomic for other threads
  * source/rtl/console.c
    + added HB_DISPOUTAT() which works like DISPOUTAT but does not change
      cursor position. Xbase++ users can use
         #xtranslate DispOutAt( <x,...> ) => hb_dispOutAt( <x> )
      for Xbase++ compatible code
  * source/rtl/scroll.c
    + added HB_SCROLL() function - it works like SCROLL() but supports
      2 additional parameters: color and erase char. It's stateless and
      atomic in GT access
  (by Przemyslaw Czerpak, borrowed from Harbour)

  * source/vm/dbgentry.c
  * source/debug/dbgbrwsr.prg
  * source/debug/dbghelp.prg
  * source/debug/dbgmenu.prg
  * source/debug/dbgtarr.prg
  * source/debug/dbgthsh.prg
  * source/debug/dbgtobj.prg
  * source/debug/dbgtmenu.prg
  * source/debug/dbgtmitm.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgwa.prg
  * source/debug/debugger.prg
    * Formatting.
    * Minimize dependencies on RTL .prg code which can be overloaded by user.
    * Miscellaneous small optimizations and fixes.
  * source/debug/tbrwtext.prg
    * Replaced with new implementation from Lorenzo Fiorini.
  (borrowed from Harbour, mostly by Przemyslaw Czerpak and Viktor Szakats)

  * include/hbapi.h
  * include/hbvm.h
  * source/vm/hash.c
  * source/vm/arrays.c
  * source/vm/arrayshb.c
  * source/vm/memvars.c
  * source/vm/hvm.c
    + Added C level functions hb_hashId(), hb_arrayId(),
      hb_memvarGetValueBySym(), hb_vmIsMt() compatible with Harbour.
    * Removed some direct HB_ITEM accesses, small optimizations.
  * source/vm/estack.c
    ! Fixed a possible GPF trap in hb_stackPop(). (from Harbour)
  * include/common.ch
    ! Fixed HB_SYMBOL_UNUSED() so that it can be used in codeblocks.
  * source/rtl/mlcfunc.c
  * source/rtl/tget.prg
  * source/rtl/trpc.prg
  * source/rtl/win32ole.prg
    ! Fixed some warnings.

  * source/compiler/harbour.sly
    ! Generate debug info for GLOBAL and STATIC variables declared with array
      dimensions.
  * source/debug/tbrwtext.prg
    ! Fixed line coloring in the new code.

2008-12-07 10:22 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * source/rtl/direct.c
    ! Fixed GPF trap

2008-12-06 17:40 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tbrowse.prg
    * fixed mouse row/col position detection when mouse event input mask
      is active.

2008-12-05 11:55 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * include\hbrddbmc.h
  * source\rdd\bmdbfcdx\bmdbfcdx1.c
    ! fixed BM_SetArrayFilter, to generate filter from array of recnos.

  * source\rtl\filesys.c
  * source\rtl\philes.c
  * source\rtl\valtostr.c
    ! fixed CurDir, it could fail in some platforms as vmware.

2008-12-03 21:17 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * include\hbapifs.h
    * removed some const that we can't use in this way.

2008-12-03 17:57 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * include\hbapifs.h
  * source\rtl\filesys.c
    ! fixed unreferenced HB_FA_POSIX_ATTR on linux build.

2008-12-03 14:10 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * source\rtl\filesys.c
    * reading correct returned value.

2008-12-03 09:15 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/Makefile
    + filebuf.c

2008-12-03 12:10 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * include\hbsetup.ch
  * include\hbsetup.h
    * format & used MAX_PATH or _MAX_PATH instead of hard coded 255, some systems can support
      260 chars and more.

  * source\common\hbstr.c
    ! fixed XCC compilation
      thks to Przemyslaw

  * source\vm\arrayshb.c
    ! fixed GPF trap in these functions
      thks to Przemyslaw

  * include\hbcompat.ch
    ! changed name of xHarbour include files - they where changed few
      months ago and now they are the same as in Harbour.
      thks to Przemyslaw

  * source\rtl\filestat.c
    ! fixed UNICODE compilation, used ansi functions.
      thks to Przemyslaw

  * source\rtl\filesys.c
    * minor changes to CURDIR.

  * include\hbdefs.h
  * source\rtl\gtwvt\gtwvt.c
  * source\rtl\setcolor.c
  * source\vm\fm.c
  * source\vm\itemapi.c
    * formatting.

2008-12-02 13:30 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * include\classes.h
  * include\hbvmpub.h
    * moved items profiler data structure at the end of structure, because they are only
      accessed with profiler. only without HB_LEGACY_LEVEL

2008-12-01 12:44 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * include\hbgtcore.h
    * changes to fix MSVC8 compilation.
  * include\classes.h
  * include\hbvmpub.h
    * moved items profiler data structure at the end of structure, because they are only
      accessed with profiler.

  * include\hbapigt.h
  * source\rtl\color53.prg
  * source\rtl\colorind.c
  * source\rtl\console.c
  * source\rtl\descend.c
  * source\rtl\filebuf.c
  * source\rtl\filesys.c
  * source\rtl\gtapi.c
  * source\rtl\gtfunc.c
  * source\rtl\gttone.c
  * source\rtl\gtwin\gtwin.c
    * synced with harbour as possible plus minor optimizations.

  * source\rtl\tgetint.prg
  * source\vm\fm.c
    - removed personal debug info.

  * source\vm\hvm.c
    * removed some compilation warnings.

  * utils\hbtest\hbtest.prg
  * utils\hbtest\rt_date.prg
  * utils\hbtest\rt_misc.prg
  * utils\hbtest\rt_str.prg
    * added more test for future correction, and added some optimization

  * source\rtl\tget.prg
    * returned to previous BuildGetColor, and added last correction to be fully compatible.

2008-11-30 21:20 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tget.prg
    * restored buildgetcolor() function from previous version (1.145).

2008-11-29 13:00 UTC+0100 Enrico Maria Giordano <e.m.giordano@emagsoftware.it>
  * contrib\gtwvg\gtwvg.c
    * changed return type to const char * in function hb_gt_wvt_Version()
    * changed parameters type to const char * in function hb_gt_wvt_SetDispCP()
    * changed parameters type to const char * in function hb_gt_wvt_SetKeyCP()
    * guarded by #ifdef XXX currently unused functions
      hb_gt_wvt_wnd_Create(),
      hb_gt_wvt_wnd_Destroy()
      hb_gt_wvt_wnd_Select()
      hb_gt_wvt_wnd_Current()

  * contrib\what32\source\wincore.prg
    - commented out #define _WIN32_WINNT 0x0400

2008-11-29 05:25 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/compiler/genc.c
    ! tweak to pacify unused variable warnings

2008-11-28 12:15 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/compiler/genc.c
  * source/compiler/gencc.c
    ! make global variable as file wide static.

2008-11-27 16:55 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * source\rtl\val.c
    % minor optimization
  * source\vm\itemapi.c
    * changed hb_itemPutNLen() function to create integer item only
      when conversion to HB_LONG does not change value of passed double
      argument. It fixes some problems like restoring non integer double
      values with 0 decimal places by __MVRESTORE()
    thks to Przemyslaw.

  * source\vm\classes.c
    * minor syntax questions.

  * utils\hbtest\rt_misc.prg
    ! solved remaining clipper incompatibilities

2008-11-27 12:00 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/compiler/gencc.c
    ! fix ages-old-bug in C-file generation with -gc3 when PRG file contain
      GLOBAL variables.

2008-11-27 06:00 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/vm/classes.c
    ! fix MT compilation

2008-11-27 05:30 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/rtl/hbgtcore.c
    ! temporary castings

  * source/rtl/gtcgi/gtcgi.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/gtgui/gtgui.c
    ! type castings

2008-11-26 22:01 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
   * include\hbgtcore.h
   * source\rtl\hbgtcore.c
     * Cleanning PellesC errors compilation and warnnings in others compilers.

2008-11-26 18:16 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
   * common.mak
   * compile.mak
   + source\common\hbwince.c
     + Added file with wc (WIDECHAR) functions

   * include\hbapigt.h
   * include\hbgtcore.h
   * source\rtl\gtapi.c
   * source\rtl\gtclip.c
   * source\rtl\gtstd\gtstd.c
   * source\rtl\gtwin\gtwin.c
   * source\rtl\hbgtcore.c
   * source\rtl\setcolor.c
   * source\rtl\tget.prg
     ! fixed some SetColor function and ColorSpec data from tget, to be more clipper compatible
       there are some remaining questions than can be see at hbtest.

   * source\vm\classes.c
     ! fixed bug when is used profiler with HB_NO_PROFILER

   * source\compiler\exproptb.c
   * source\compiler\exproptc.c
     * minor syntax corrections.

2008-11-26 12:35 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
   * source/common/hbver.c
     + compiler version information for Intel C++ ( __ICL )

   * source/compiler/genc.c
     + add pragma to disable warning on unused param HB_$INITSYM (for: __ICL )

   * contrib/hbzlib/zipfile.h
     ! pacify warnings for Intel C++ and MSVS 2005 and newer

2008-11-25 13:15 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
   * include/hbstack.h
     + exporting hb_stackST and hb_stackMT

   * include/thread.h
     + exporting hb_dwCurrentStack

2008-11-25 12:15 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * mdir.bat
    + delete *.tmp files upon clean build

  * source/compiler/gen.c
    ! global variables to be under extern "C"

  * include/hbgtcore.h
    ! function hb_gt_base() to be under extern "C"

2008-11-24 20:00 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * include/hbvmpub.h
    ! temporarily uncomment profiler related members of PHB_DYNS.

2008-11-24 09:55 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * hrbdll.pc
    - removed "/NOLOGO", "/OPT:WIN98" and "/c" flags.
      These flags doesn't exist or obsolete.

  * make_pc.bat
    * fixed to call dll_pc.log instead make_pc.log after compile dll with
      errors.

2008-11-24 12:30 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/rtl/gtwvt/gtwvt.c
    ! define LONG_PTR if not defined (for: __DMC__)

  * makefile.bc
  * makefile.dc
  * makefile.gc
  * makefile.pc
  * makefile.vc
  * makefile.wc
    + macros for GNU and Non-GNU's: TYPE, DEL, COPY.

  * common.mak
    - remove mainstd.obj dependency for apps created with harbour.dll because
      dllmain.lib is now linked.

    /*
    NOTE: At this moment, DMC and OpenWatcom app created with DLL do not work yet.
    */

  * compile.mak
    ! revise logic to force compilation of source/compiler/hbslex.c and
      source/macro/macroslx.c when the respective rule file is newer, to
      work with GNU and Non-GNU Make as well.
    + add hacks to force compile:
      * source/compiler/expropta.c when include/hbexpra.c is newer
      * source/compiler/exproptb.c when include/hbexprb.c is newer
      * source/compiler/exproptc.c when include/hbexprc.c is newer

    /*
    TODO: Force compile hbslex.c and macroslx.c when include/simplex.c is newer.
    */

2008-11-24 07:00 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * makefile.bc
  * makefile.vc
  * makefile.wc
  * makefile.gc
  * hrbdll.pc
    ! use macro in link script: dllmain.lib -> $(DLL_MAIN_LIB)

  * common.mak
    - remove dependency of maindllh.c

2008-11-23 16:10 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * source/vm/hvm.c
    * Synched if( fDynLib ) branch of hb_vmRegisterSymbols()

  * source/vm/maindllh.c
    * Restored hb_vmProcessSymbols()

  * hrbdll.pc
  * makefile.bc
  * makefile.dc
  * makefile.vc
  * makefile.wc
    + Added dllmain.lib to targets linking to harbour.dll by means of import lin harbour.lib

2008-11-23 13:30 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/dbedit.prg
    * fixed delete operation under set deleted on/off.

2008-11-23 13:10 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * makefile.gc
    ! fix unresolved external hb_strMatchWild() upon building an EXE

2008-11-23 10:30 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
   * source/vm/maindll.h
     - commented hb_vmProcessSymbols(), because it is defined in hvm.c
       Having this function in maindllh.c causes application cannot find
       starting procedure (Internal Error: 9013).

   * include/hbstack.h
   * include/hbapi.h
     ! prototype fix: hb_retdts() : char* -> const char *
     ! rearrange function proto declaration so that function body does not
       require to bear HB_EXPORT attribute.

   * source/vm/estack.c
   * source/vm/extend.c
   * source/vm/fastitem.c
     - remove (again) HB_EXPORT attributes. (Thanks to Przemek)

2008-11-22 18:05 UTC-0430 Ron Pinkas <ron/at/xharbour.com>
  * source/vm/estack.c
    ! restore HB_EXPORT qualifier for functions reset by "#undef"
  * source/rtl/win32ole.prg
    ! restore HB_EXPORT qualifier for functions not defined in header file

  * source/rdd/nulsys/nulsys.c
    + Synched with RDD changes

2008-11-22 14:30 UTC+0200 Pavel Tsarenko <tpe2/at/mail.ru>
  * source/rtl/gtwvt/gtwvt.c
    ! fixed gpf in hb_gtInfo(HB_GTI_WINTITLE, "")

2008-11-22 18:15 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * source/vm/extend.c
  * source/vm/fastitem.c
    ! restore HB_EXPORT qualifier for functions reset by "#undef"

2008-11-22 07:50 UTC-0300 Luiz Rafael Culik Guimaraes <luiz at xharbour.com.br>
  * contrib/hbzlib/include/zipautobuffer.h
    ! minor fix to compile under msvc

2008-11-22 12:00 UTC+0700 Andi Jahja <xharbour/AT/telkom/net/id>
  * ChangeLog
  + ChangeLog.028
    + new ChangeLog created

  + source/common/dvmemcpy.c
    + Daniel Vik memcpy(), please consult the related file for docs.

  * makefile.bc
  * makefile.gc
  * makefile.vc
  * makefile.wc
  * makefile.pc
  * common.mak
  * compile.mak
    + dvmemcpy.c dependency
    /*
    NOTE: dvmemcpy is a replacement to compiler's native memcpy() written by
          Daniel Vik, claimed to be superior above the packaged one.
          This function is enabled by setting an envar as follows:
          SET DV_MEMCPY=1
	  By doing so, the compiler's native memcpy will be overridden.
	  At the moment, OpenWatcom and PellesC does not compile.
    */

  * source/common/hbarch.c
  * source/common/hbdate.c
  * source/common/hbfsapi.c
  * source/common/hbgete.c
  * source/common/hbstr.c
  * source/common/hbtrace.c
  * source/common/hbver.c
  * source/compiler/harbour.c
  * source/ct/ctwin.c
  * source/rdd/dbf1.c
  * source/rdd/wacore.c
  * source/rdd/wafunc.c
  * source/rdd/workarea.c
  * source/rdd/nulsys/nulsys.c
  * source/rtl/at.c
  * source/rtl/cdpapi.c
  * source/rtl/console.c
  * source/rtl/datec.c
  * source/rtl/direct.c
  * source/rtl/dllcall.c
  * source/rtl/file.c
  * source/rtl/filesys.c
  * source/rtl/fserror.c
  * source/rtl/fstemp.c
  * source/rtl/gtapi.c
  * source/rtl/gtapiu.c
  * source/rtl/hbffind.c
  * source/rtl/hbgtcore.c
  * source/rtl/hbhex2n.c
  * source/rtl/hbmd5.c
  * source/rtl/hbrandom.c
  * source/rtl/hbserv.c
  * source/rtl/idle.c
  * source/rtl/inkeyapi.c
  * source/rtl/langapi.c
  * source/rtl/math.c
  * source/rtl/mouseapi.c
  * source/rtl/seconds.c
  * source/rtl/set.c
  * source/rtl/strcase.c
  * source/rtl/strings.c
  * source/rtl/strmatch.c
  * source/rtl/trace.c
  * source/rtl/trim.c
  * source/rtl/win32ole.prg
  * source/rtl/gtxvt/gtxvt.c
  * source/tip/thtml.prg
  * source/vm/arrays.c
  * source/vm/classes.c
  * source/vm/classesc.c
  * source/vm/cmdarg.c
  * source/vm/codebloc.c
  * source/vm/dbgentry.c
  * source/vm/debug.c
  * source/vm/dynsym.c
  * source/vm/errorapi.c
  * source/vm/estack.c
  * source/vm/eval.c
  * source/vm/extend.c
  * source/vm/fastitem.c
  * source/vm/fm.c
  * source/vm/garbage.c
  * source/vm/hash.c
  * source/vm/hvm.c
  * source/vm/itemapi.c
  * source/vm/macro.c
  * source/vm/maindll.c
  * source/vm/maindllp.c
  * source/vm/mainstd.c
  * source/vm/mainwin.c
  * source/vm/memvars.c
  * source/vm/proc.c
  * source/vm/runner.c
  * source/vm/thread.c
    - remove HB_EXPORT attributes from function bodies. Prototype declaration
      in include files is enough.
