#
# $Id: gcc.cf,v 1.4 2008/03/09 18:44:26 likewolf Exp $
#

include $(TOP)$(ROOT)config/$(HB_ARCHITECTURE)/global.cf

OBJ_EXT = .o
EXE_EXT =
LIB_PREF = lib
LIB_EXT = .a

CC = $(HB_CCACHE) gcc
CC_IN = -c
CC_OUT = -o
CPPFLAGS = -I. -I$(TOP)include -I$(HB_INC_COMPILE)

CFLAGS = -DHB_OS_HPUX -Wall -W
ifeq ($(HB_LEX),SIMPLEX)
CFLAGS += -DSIMPLEX
endif
LDFLAGS =

# uncomment this if you want to farce relocateable code for .so libs
# it's necessary on some platforms but can reduce performance
#CFLAGS += -fPIC

# uncomment this if you want to force creating 64bit binaries on IA64
#CFLAGS += -mlp64
#LDFLAGS = -mlp64

ifeq ($(HB_LIBCOMP_MT),)
#always add thread support if not compiling a lib and using vmmt
ifeq ($(findstring vmmt,$(LIBS)),vmmt)
CFLAGS+= -DHB_THREAD_SUPPORT -D_THREAD_SAFE -pthread
endif
else
#Add thread support to lib compilation only if compiling a _mt lib
ifeq ($(HB_LIBCOMP_MT),YES)
CFLAGS+= -DHB_THREAD_SUPPORT -D_THREAD_SAFE -pthread
HB_MT_FLAGS = -DHB_THREAD_SUPPORT
endif
endif

LD = $(HB_CCACHE) gcc
LD_OUT = -o

# Add all libraries specified in CONTRIBS and LIBS.
ifeq ($(HB_LIB_COMPILE),)
LINKPATHS += $(foreach lib, $(CONTRIBS), -L$(TOP)$(ROOT)contrib/$(lib)/$(ARCH_DIR))
LINKPATHS += $(foreach lib, $(LIBS), -L$(TOP)$(ROOT)source/$(lib)/$(ARCH_DIR))

#Adding MT libs on need
ifeq ($(findstring vmmt,$(LIBS)),vmmt)
LINKPATHS += $(foreach lib, $(LIBS), -L$(TOP)$(ROOT)source/$(patsubst %mt,%,$(lib))/$(ARCH_DIR)_mt)
endif

else
LINKPATHS += -L$(HB_LIB_COMPILE)
endif
# Add all libraries specified in HB_USER_LIBS.
LINKPATHS += $(foreach lib, $(HB_USER_LIBS), -L$(TOP)$(ROOT)source/$(lib)/$(ARCH_DIR))
LINKLIBS += $(foreach lib, $(HB_USER_LIBS), -l$(lib))

LINKLIBS += $(foreach lib, $(CONTRIBS), -l$(lib))
LINKLIBS += $(foreach lib, $(LIBS), -l$(lib))

# If LIBS specifies the rdd library, add all DB drivers.
ifeq ($(findstring rddmt,$(LIBS)),rddmt)
#DBFNTX and DBFCDX are MTzed
ifeq ($(findstring dbfcdx,$(HB_DB_DRIVERS)),dbfcdx)
LINKPATHS += -L$(TOP)$(ROOT)source/rdd/dbfcdx/$(ARCH_DIR)_mt
LINKLIBS += -ldbfcdxmt
endif
ifeq ($(findstring dbfntx,$(HB_DB_DRIVERS)),dbfntx)
LINKPATHS += -L$(TOP)$(ROOT)source/rdd/dbfntx/$(ARCH_DIR)_mt
LINKLIBS += -ldbfntxmt
endif

#DBFDBT and DBFFTP are not MTzed
ifeq ($(findstring dbfdbt,$(HB_DB_DRIVERS)),dbfdbt)
LINKPATHS += -L$(TOP)$(ROOT)source/rdd/dbfdbt/$(ARCH_DIR)
LINKLIBS += -ldbfdbt
endif
ifeq ($(findstring dbfftp,$(HB_DB_DRIVERS)),dbfftp)
LINKPATHS += -L$(TOP)$(ROOT)source/rdd/dbfftp/$(ARCH_DIR)
LINKLIBS += -ldbfftp
endif

else
ifeq ($(findstring rdd,$(LIBS)),rdd)
LINKPATHS += $(foreach drv, $(HB_DB_DRIVERS), -L$(TOP)$(ROOT)source/rdd/$(drv)/$(ARCH_DIR))
LINKLIBS += $(foreach drv, $(HB_DB_DRIVERS), -l$(drv))
endif
endif

# Add the specified GT driver library
ifeq ($(findstring rtl,$(LIBS)),rtl)

LINKPATHS += $(foreach gt, $(HB_GT_LIBS), -L$(TOP)$(ROOT)source/rtl/$(gt)/$(ARCH_DIR))
LINKLIBS += $(foreach gt, $(HB_GT_LIBS), -l$(gt))

# screen driver libraries
ifeq ($(HB_CRS_LIB),)
HB_CRS_LIB=ncurses
endif
ifneq ($(findstring gtcrs, $(HB_GT_LIBS)),)
LINKLIBS += -l$(HB_CRS_LIB)
endif
ifneq ($(findstring gtsln, $(HB_GT_LIBS)),)
LINKLIBS += -lslang
endif
ifneq ($(findstring gtalleg, $(HB_GT_LIBS)),)
LINKLIBS += `allegro-config --static`
endif
ifneq ($(findstring gtxwc, $(HB_GT_LIBS)),)
LINKLIBS += -lX11
#LINKPATHS += -L/usr/X11R6/lib64
LINKPATHS += -L/usr/X11R6/lib
endif
endif

LINKPATHS += -L$(TOP)$(ROOT)source/rtl/pcre/$(ARCH_DIR)
LINKLIBS += -lpcrepos
endif

LINKLIBS += -lm -lrt

LDFLAGS += $(LINKPATHS)

AR = ar
ARFLAGS = $(A_USR)
AR_RULE = $(AR) $(ARFLAGS) r $@ $(^F) && $(RANLIB) $@ || ( $(RM) $@ && false )

include $(TOP)$(ROOT)config/rules.cf
