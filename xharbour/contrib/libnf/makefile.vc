#
# $Id: makefile.vc,v 1.3 2003/10/10 13:33:51 paultucker Exp $
#

#
# Makefile for Harbour Project for Microsoft Visual C (32 bits)
#

#
# NOTE: You can use these envvars to configure the make process:
#       (note that these are all optional)
#
#       CFLAGS       - Extra C compiler options for libraries and for 
#                      executables
#       C_USR        - Extra C compiler options for libraries and for 
#                      executables (GNU make compatible envvar)
#       CLIBFLAGS    - Extra C compiler options for the libraries
#       HARBOURFLAGS - Extra Harbour compiler options
#       PRG_USR      - Extra Harbour compiler options
#                      (GNU make compatible envvar)
#

#
# Notes about this makefile:
#
# 1. To add new files to a dependancy list, add an obj name to one of the
#    OBJ lists for the appropriate library.
#    NOTE: put .prg related obj's last in the lib list.
#
# 2. This is a recursive script.  If you change the name of this file,
#    be sure to change MK_FILE (a few lines down) to the new name as well.
#
# 3. Recurrsion rules are quite simple:
#     If you specifiy /a on the command line, files in the obj\vc dir
#     will be deleted, and when nmake recurses, it's without the /a flag
#
#     If a .prg.obj rule is fired, nmake will execute this script with
#     a specific target as a parameter immediatley after compiling a given
#     set of prg files.
#      ie: Harbour $<
#          nmake /fmakefile.vc obj\vc\rtl.lib2
#     which will simply get make to re-evaluate the dependancy list for the
#     lib, and as a result, it will execute the C compiler using the .c.obj
#     rule below to create the obj's for the prg's that were created just
#     prior to the recurrsive call. Once the obj's are created, the
#     recurrsion is complete.
#     See additional notes under RTL.LIB below.
#

MK_FILE      = makefile.vc
MK_FLAGS     = $(MAKEFLAGS: =)

#!ifdef HB_MT
#MT           =MT
#HB_MT        =-MT -DHB_THREAD_SUPPORT
#!else
#!ifdef MT
#!undef MT
#!endif
#!endif

BIN_DIR     = ..\..\bin
LIB_DIR     = ..\..\lib\vc
OBJ_DIR     = obj\vc
#OBJ_DIR     = $(OBJ_DIR)$(MT)

#
# Directory macros. These should never have to change.
#

INCLUDE_DIR  = ..\..\include
TOOLS_DIR    = .

#
# C compiler definition and C flags. These should never have to change.
#

AS             = masm
CFLAGS         = -Ogt2yb1p -FD -GA -GB -Gs -TP -W3 -nologo -I$(INCLUDE_DIR) -DWIN32 -D_WIN32 -D__WIN32__ -DHB_OS_WIN_32 $(C_USR) $(CFLAGS)
# -I$(INCLUDE_DIR) -TP -W3 -nologo $(C_USR) $(CFLAGS)
CLIBFLAGS      = -c $(CFLAGS) $(CLIBFLAGS)
CLIBFLAGSDEBUG = -Zi $(CLIBFLAGS)
HARBOURFLAGS   = -i$(INCLUDE_DIR) -n -q0 -w -es2 -gc0 $(PRG_USR) $(HARBOURFLAGS)
LDFLAGS        = $(LDFLAGS)

#
# Macros to access our library names
#

TOOLS_LIB    = $(LIB_DIR)\libnf.lib

HARBOUR_EXE  = $(BIN_DIR)\harbour.exe

#
# Rules
#

.SUFFIXES: .prg .lib .c .obj .asm

# override builtin

#.prg.c::
#   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)\ $<

#.prg.obj::
#   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)\ $<
#   $(MAKE) -nologo /$(MK_FLAGS) /f$(MK_FILE) $(TOOLS_LIB)2

.c.obj::
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

#
#
#

LIBLIST = \
   $(TOOLS_LIB)

#
# TOOLS.LIB rules
#

{$(TOOLS_DIR)}.c{$(OBJ_DIR)}.obj::
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

{$(TOOLS_DIR)}.prg{$(OBJ_DIR)}.c::
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)\ $<

{$(TOOLS_DIR)}.prg{$(OBJ_DIR)}.obj::
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)\ $<
   $(MAKE) -nologo /$(MK_FLAGS) /f$(MK_FILE) $(TOOLS_LIB)2

TOOLS_LIB_OBJS = \
   $(OBJ_DIR)\caplock.obj \
   $(OBJ_DIR)\color2n.obj \
   $(OBJ_DIR)\descend.obj \
   $(OBJ_DIR)\numlock.obj \
   $(OBJ_DIR)\proper.obj \
   $(OBJ_DIR)\shift.obj \
   $(OBJ_DIR)\mouse.obj \
   $(OBJ_DIR)\getvid.obj \
   $(OBJ_DIR)\chdir.obj \
   $(OBJ_DIR)\rmdir.obj \
   $(OBJ_DIR)\alt.obj \
   $(OBJ_DIR)\ctrl.obj \
   $(OBJ_DIR)\getenvrn.obj \
   $(OBJ_DIR)\n2color.obj \
   $(OBJ_DIR)\origin.obj \
   $(OBJ_DIR)\prtscr.obj \
   $(OBJ_DIR)\stod.obj \
   $(OBJ_DIR)\kspeed.obj \
   $(OBJ_DIR)\mkdir.obj \
   $(OBJ_DIR)\getver.obj \
   $(OBJ_DIR)\ftattr.obj \
   $(OBJ_DIR)\dispc.obj \
   \
   $(OBJ_DIR)\aading.obj \
   $(OBJ_DIR)\aavg.obj \
   $(OBJ_DIR)\acctadj.obj \
   $(OBJ_DIR)\acctmnth.obj \
   $(OBJ_DIR)\acctqtr.obj \
   $(OBJ_DIR)\acctweek.obj \
   $(OBJ_DIR)\acctyear.obj \
   $(OBJ_DIR)\adessort.obj \
   $(OBJ_DIR)\aemaxlen.obj \
   $(OBJ_DIR)\aeminlen.obj \
   $(OBJ_DIR)\amedian.obj \
   $(OBJ_DIR)\anomatch.obj \
   $(OBJ_DIR)\any2any.obj \
   $(OBJ_DIR)\aredit.obj \
   $(OBJ_DIR)\asum.obj \
   $(OBJ_DIR)\at2.obj \
   $(OBJ_DIR)\bitclr.obj \
   $(OBJ_DIR)\bitset.obj \
   $(OBJ_DIR)\blink.obj \
   $(OBJ_DIR)\byt2bit.obj \
   $(OBJ_DIR)\byt2hex.obj \
   $(OBJ_DIR)\byteand.obj \
   $(OBJ_DIR)\byteneg.obj \
   $(OBJ_DIR)\bytenot.obj \
   $(OBJ_DIR)\byteor.obj \
   $(OBJ_DIR)\bytexor.obj \
   $(OBJ_DIR)\calendar.obj \
   $(OBJ_DIR)\clrsel.obj \
   $(OBJ_DIR)\cntryset.obj \
   $(OBJ_DIR)\d2e.obj \
   $(OBJ_DIR)\datecnfg.obj \
   $(OBJ_DIR)\dayofyr.obj \
   $(OBJ_DIR)\daytobow.obj \
   $(OBJ_DIR)\dectobin.obj \
   $(OBJ_DIR)\diskfunc.obj \
   $(OBJ_DIR)\dispmsg.obj \
   $(OBJ_DIR)\dosver.obj \
   $(OBJ_DIR)\e2d.obj \
   $(OBJ_DIR)\easter.obj \
   $(OBJ_DIR)\elapmil.obj \
   $(OBJ_DIR)\elapsed.obj \
   $(OBJ_DIR)\eltime.obj \
   $(OBJ_DIR)\findith.obj \
   $(OBJ_DIR)\firstday.obj \
   $(OBJ_DIR)\gcd.obj \
   $(OBJ_DIR)\hex2dec.obj \
   $(OBJ_DIR)\invclr.obj \
   $(OBJ_DIR)\isbit.obj \
   $(OBJ_DIR)\isbiton.obj \
   $(OBJ_DIR)\isshare.obj \
   $(OBJ_DIR)\lastday.obj \
   $(OBJ_DIR)\linked.obj \
   $(OBJ_DIR)\madd.obj \
   $(OBJ_DIR)\menu1.obj \
   $(OBJ_DIR)\menuto.obj \
   $(OBJ_DIR)\metaph.obj \
   $(OBJ_DIR)\miltime.obj \
   $(OBJ_DIR)\min2dhm.obj \
   $(OBJ_DIR)\month.obj \
   $(OBJ_DIR)\mouse1.obj \
   $(OBJ_DIR)\netpv.obj \
   $(OBJ_DIR)\nooccur.obj \
   $(OBJ_DIR)\ntow.obj \
   $(OBJ_DIR)\nwlstat.obj \
   $(OBJ_DIR)\page.obj \
   $(OBJ_DIR)\pchr.obj \
   $(OBJ_DIR)\pegs.obj \
   $(OBJ_DIR)\pending.obj \
   $(OBJ_DIR)\pickday.obj \
   $(OBJ_DIR)\popadder.obj \
   $(OBJ_DIR)\prtesc.obj \
   $(OBJ_DIR)\pvid.obj \
   $(OBJ_DIR)\qtr.obj \
   $(OBJ_DIR)\rand1.obj \
   $(OBJ_DIR)\restsets.obj \
   $(OBJ_DIR)\round.obj \
   $(OBJ_DIR)\savearr.obj \
   $(OBJ_DIR)\savesets.obj \
   $(OBJ_DIR)\scregion.obj \
   $(OBJ_DIR)\sinkey.obj \
   $(OBJ_DIR)\sleep.obj \
   $(OBJ_DIR)\sqzn.obj \
   $(OBJ_DIR)\tbwhile.obj \
   $(OBJ_DIR)\tempfile.obj \
   $(OBJ_DIR)\vertmenu.obj \
   $(OBJ_DIR)\vidmode.obj \
   $(OBJ_DIR)\wda.obj \
   $(OBJ_DIR)\week.obj \
   $(OBJ_DIR)\workdays.obj \
   $(OBJ_DIR)\woy.obj \
   $(OBJ_DIR)\xbox.obj \
   $(OBJ_DIR)\year.obj


#   $(OBJ_DIR)\sysmem.obj \
#   $(OBJ_DIR)\dfile.obj \
#   $(OBJ_DIR)\vidcur.obj \
#   $(OBJ_DIR)\scancode.obj \
#   $(OBJ_DIR)\setdate.obj \
#   $(OBJ_DIR)\settime.obj \
#   $(OBJ_DIR)\nwsem.obj \
#   $(OBJ_DIR)\nwuid.obj \
#   $(OBJ_DIR)\floptst.obj


#
# Our default target
#

all: \
   $(TOOLS_LIB)

CLEAN:
   -@if exist $(OBJ_DIR)\*.obj del $(OBJ_DIR)\*.obj >nul
   -@if exist $(OBJ_DIR)\*.c del $(OBJ_DIR)\*.c >nul
   -@if exist $(TOOLS_LIB) del $(TOOLS_LIB) >nul

#
# Library dependencies and build rules
#

$(TOOLS_LIB) : $(TOOLS_LIB_OBJS)
   lib /out:$@ $**

# dummy targets used for prg to c creation

$(TOOLS_LIB)2  : $(TOOLS_LIB_OBJS)
