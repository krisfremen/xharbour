# $Id: makefile.bc,v 1.9 2003/11/15 17:05:27 jonnymind Exp $
#

#
# Makefile for Harbour Project for Borland C/C++ 3.x, 4.x, 5.x compilers
#

# ---------------------------------------------------------------
# If you need to set additional compiler/linker options use the
# environment variables below, but please DON'T MODIFY THIS FILE
# for this purpose.
# ---------------------------------------------------------------

#
# NOTE: You can use these envvars to configure the make process:
#       (note that these are all optional)
#
#       CFLAGS       - Extra C compiler options for libraries and for
#                      executables
#       CLIBFLAGS    - Extra C compiler options for the libraries
#       C_USR        - Extra C compiler options for libraries and for
#                      executables (GNU make compatible envvar)
#       HARBOURFLAGS - Extra Harbour compiler options
#       HB_DOC_PDF   - Turns on the .PDF file support in the HBDOC utility.
#                      Note that this will require the pdflib contrib.
#       HB_GT_LIB    - To override the default GT driver
#                      (search for HB_GT_LIBS for a list of values)
#       HB_LEX       - If set to SIMPLEX, an alternate lexer will be
#                      used instead of the Flex based one.
#       PRG_USR      - Extra Harbour compiler options
#                      (GNU make compatible envvar)
#

#
# NOTE: BCC_NOSTARTUP must be defined for Borland C++ 5.3 to make it work.
#

# ---------------------------------------------------------------
# "echo." intentionally used instead of "echo", to avoid conflicts
# with external commands named echo.
# using macros for ECHO and DEL to allow overiding such as:
#
#    set ECHO=cmd /c echo
#    set DEL=cmd /c del
#
# The above might be needed on Windows 2000 and XP.
# The macros are referenced in makefile.bc
# ---------------------------------------------------------------

.AUTODEPEND

!if !$d(ECHO)
   ECHO = echo.
!endif
!if !$d(DEL)
   DEL = del
!endif

!if $d(B16)

BCC_NOSTARTUP = ""

CC = bcc
AS = tasm

# Borland C/C++ (DOS 16 bits)
CFLAGS = -mh $(CFLAGS)

BIN_DIR = ..\..\bin\b16
LIB_DIR = ..\..\lib\b16
OBJ_DIR = obj\b16

!else

CC = bcc32
LINKER = TLIB
# NOTE: Using TASM for some reason, this should be normally TASM32.
#       I'll leave it to TASM until a better solution is found
AS = tasm

BIN_DIR = ..\..\bin\b32
LIB_DIR = ..\..\lib\b32
OBJ_DIR = obj\b32

# This is needed, otherwise the libs may overflow when
# debug info is requested with -v -y
# if debug info is requested, set ARFLAGS to /P64 in your environment
!if !$d(ARFLAGS)
   ARFLAGS = /0
!endif

!endif

SRC_DIR = src

!if !$d(BCC_NOOPTIM)
   CFLAGS = -O2 $(CFLAGS)
!endif

#
# Directory macros. These should never have to change.
#

INCLUDE_DIR  = include;..\..\include

#
# C compiler definition and C flags. These should never have to change.
#

CFLAGS               = -I$(INCLUDE_DIR);src\xwt_win -d
$(C_USR) -5 -6 -O2 -a8 $(CFLAGS) -D__WIN32__
CLIBFLAGS            = -c $(CFLAGS) $(CLIBFLAGS)
CLIBFLAGSDEBUG       = -v $(CLIBFLAGS)
HARBOURFLAGS         = -i$(INCLUDE_DIR) -n -q0 -w -es2 -gc0 $(PRG_USR) $(HARBOURFLAGS)
LDFLAGS              = $(LDFLAGS)

#
# Macros to access our library names
#

XWT_LIB     = $(LIB_DIR)\xwt.lib

HARBOUR_EXE  = $(BIN_DIR)\harbour.exe



#
# XWT.LIB rules
#


XWT_LIB_OBJS = \
   $(OBJ_DIR)\xwt_api.obj \
   \
   $(OBJ_DIR)\button.obj \
   $(OBJ_DIR)\bcolumn.obj \
   $(OBJ_DIR)\browse.obj \
   $(OBJ_DIR)\checkbox.obj \
   $(OBJ_DIR)\container.obj \
   $(OBJ_DIR)\event.obj \
   $(OBJ_DIR)\filesel.obj \
   $(OBJ_DIR)\fontsel.obj \
   $(OBJ_DIR)\framewindow.obj \
   $(OBJ_DIR)\grid.obj \
   $(OBJ_DIR)\hex.obj \
   $(OBJ_DIR)\image.obj \
   $(OBJ_DIR)\inputmask.obj \
   $(OBJ_DIR)\label.obj \
   $(OBJ_DIR)\laycontainer.obj \
   $(OBJ_DIR)\layout.obj \
   $(OBJ_DIR)\menu.obj \
   $(OBJ_DIR)\menuitem.obj \
   $(OBJ_DIR)\msgbox.obj \
   $(OBJ_DIR)\pane.obj \
   $(OBJ_DIR)\radiobutton.obj \
   $(OBJ_DIR)\splitter.obj \
   $(OBJ_DIR)\textbox.obj \
   $(OBJ_DIR)\togglebutton.obj \
   $(OBJ_DIR)\treeitem.obj \
   $(OBJ_DIR)\treelist.obj \
   $(OBJ_DIR)\viewport.obj \
   $(OBJ_DIR)\widget.obj \
   $(OBJ_DIR)\window.obj \
   \
   $(OBJ_DIR)\xwt_win.obj \
   $(OBJ_DIR)\xwt_win_menu.obj \
   $(OBJ_DIR)\xwt_win_menuitem.obj \
   $(OBJ_DIR)\xwt_win_framewnd.obj \
   $(OBJ_DIR)\xwt_win_msgbox.obj


#
# Our default target
#

all: \
   $(XWT_LIB)

CLEAN:
   -@if exist $(XWT_LIB) $(DEL) $(XWT_LIB)
   -@if exist obj\b32\*.obj $(DEL) obj\b32\*.obj > nul
   -@if exist obj\b32\*.c   $(DEL) obj\b32\*.c > nul
   -@if exist obj\b32\*.h   $(DEL) obj\b32\*.h > nul

#
# Library dependencies and build rules
#

$(XWT_LIB) : $(XWT_LIB_OBJS)
    IF EXIST "$(XWT_LIB)" $(DEL) "$(XWT_LIB)" > NUL
    $(LINKER) "$(XWT_LIB)" $(ARFLAGS) @&&!
+$(**: = &^
+)

!

$(OBJ_DIR)\xwt_api.obj : $(SRC_DIR)\xwt_api.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\bcolumn.c : $(SRC_DIR)\bcolumn.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\bcolumn.obj : $(OBJ_DIR)\bcolumn.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\browse.c : $(SRC_DIR)\browse.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\browse.obj : $(OBJ_DIR)\browse.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\button.c : $(SRC_DIR)\button.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\button.obj : $(OBJ_DIR)\button.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\checkbox.c : $(SRC_DIR)\checkbox.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\checkbox.obj : $(OBJ_DIR)\checkbox.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\container.c : $(SRC_DIR)\container.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\container.obj : $(OBJ_DIR)\container.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\event.c : $(SRC_DIR)\event.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\event.obj : $(OBJ_DIR)\event.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\filesel.c : $(SRC_DIR)\filesel.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\filesel.obj : $(OBJ_DIR)\filesel.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\fontsel.c : $(SRC_DIR)\fontsel.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\fontsel.obj : $(OBJ_DIR)\fontsel.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\framewindow.c : $(SRC_DIR)\framewindow.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\framewindow.obj : $(OBJ_DIR)\framewindow.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\grid.c : $(SRC_DIR)\grid.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\grid.obj : $(OBJ_DIR)\grid.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\hex.c : $(SRC_DIR)\hex.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\hex.obj : $(OBJ_DIR)\hex.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\image.c : $(SRC_DIR)\image.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\image.obj : $(OBJ_DIR)\image.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\inputmask.c : $(SRC_DIR)\inputmask.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\inputmask.obj : $(OBJ_DIR)\inputmask.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\label.c : $(SRC_DIR)\label.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\label.obj : $(OBJ_DIR)\label.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\laycontainer.c : $(SRC_DIR)\laycontainer.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\laycontainer.obj : $(OBJ_DIR)\laycontainer.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\layout.c : $(SRC_DIR)\layout.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\layout.obj : $(OBJ_DIR)\layout.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\menu.c : $(SRC_DIR)\menu.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\menu.obj : $(OBJ_DIR)\menu.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\menuitem.c : $(SRC_DIR)\menuitem.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\menuitem.obj : $(OBJ_DIR)\menuitem.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\msgbox.c : $(SRC_DIR)\msgbox.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\msgbox.obj : $(OBJ_DIR)\msgbox.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\pane.c : $(SRC_DIR)\pane.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\pane.obj : $(OBJ_DIR)\pane.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\radiobutton.c : $(SRC_DIR)\radiobutton.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\radiobutton.obj : $(OBJ_DIR)\radiobutton.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\splitter.c : $(SRC_DIR)\splitter.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\splitter.obj : $(OBJ_DIR)\splitter.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\textbox.c : $(SRC_DIR)\textbox.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\textbox.obj : $(OBJ_DIR)\textbox.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\togglebutton.c : $(SRC_DIR)\togglebutton.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\togglebutton.obj : $(OBJ_DIR)\togglebutton.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\treeitem.c : $(SRC_DIR)\treeitem.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\treeitem.obj : $(OBJ_DIR)\treeitem.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\treelist.c : $(SRC_DIR)\treelist.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\treelist.obj : $(OBJ_DIR)\treelist.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\viewport.c : $(SRC_DIR)\viewport.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\viewport.obj : $(OBJ_DIR)\viewport.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\widget.c : $(SRC_DIR)\widget.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\widget.obj : $(OBJ_DIR)\widget.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\window.c : $(SRC_DIR)\window.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) $** -o$@

$(OBJ_DIR)\window.obj : $(OBJ_DIR)\window.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\xwt_win.obj : $(SRC_DIR)\xwt_win\xwt_win.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\xwt_win_menu.obj : $(SRC_DIR)\xwt_win\xwt_win_menu.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\xwt_win_menuitem.obj : $(SRC_DIR)\xwt_win\xwt_win_menuitem.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\xwt_win_framewnd.obj : $(SRC_DIR)\xwt_win\xwt_win_framewnd.c
   $(CC) $(CLIBFLAGS) -o$@ $**

$(OBJ_DIR)\xwt_win_msgbox.obj : $(SRC_DIR)\xwt_win\xwt_win_msgbox.c
   $(CC) $(CLIBFLAGS) -o$@ $**
   