#===============================================================================
#
# $Id: makefile.gc,v 1.57 2009/07/29 17:15:53 marchuet Exp $
#
# MAKEFILE FOR MINGW32
#
# This is Generic File, do not change it. If you should require your own build
# version, changes should only be made on your local copy.(AJ: 2008-04-26)
#
#===============================================================================
TYPE=cat
DEL=RM -f
COPY=cp

#*******************************************************************************
ifeq ($(__BLD__),CORE_BLD)
#*******************************************************************************
#===============================================================================
# Macro Definitions
#===============================================================================
include common.mak

ifeq ($(HB_DOC_PDF),yes)
HARBOURFLAGS+=-dPDF
HBDOC_EXE_OBJS+=\
	$(OBJ_DIR)/genpdf1.o\
	$(OBJ_DIR)/pdfhbdoc.o
COMPILERLIBS=+\
	-lpdflib
endif

ifeq ($(HB_GTALLEG),yes)
HB_GT_LIBS+=\
	$(GTALLEG_LIB)
endif

#===============================================================================
# Append your own build flags here
#===============================================================================
HARBOURFLAGS+=
CLIBFLAGS   +=

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
INCLUDE_DIR  =include
HARBOURFLAGS+=-i$(INCLUDE_DIR) -q0 -w2 -es2 -gc0
CLIBFLAGS   +=-D__WIN32__ -Wall -mno-cygwin -O3 -mtune=pentium -c -fno-strict-aliasing -I$(INCLUDE_DIR) -I$(OBJ_DIR)

ifeq ($(HB_THREAD_SUPPORT),1)
	HARBOURFLAGS+=-dHB_THREAD_SUPPORT
	CLIBFLAGS+=-DHB_THREAD_SUPPORT -mthreads
endif

#===============================================================================
# NOTE ON HB_CMD/HB_CMD_MAIN:
#  -n1 is used for non-executing module (fe. library's modules), because in
#  some cases, if the module is compiled with -n, it will execute upon
#  initialization, thus RTE.
#  -n is ONLY applied to main module to make sure that only that module will
#  execute upon running the executable.(AJ: 2008-04-26)
#===============================================================================
HB_CMD     =$(HARBOUR_EXE) -n1 $(HARBOURFLAGS) -o$@ $^
HB_CMD_MAIN=$(HARBOUR_EXE) -n0 -d_USE_APPMAIN_ $(HARBOURFLAGS) $(HB_MT_FLAGS) -o$@ $^

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
CC_CMD       =GCC $(CLIBFLAGS) -o $@ $^
CC_CMD_FMSTAT=GCC $(CLIBFLAGS) -DHB_FM_STATISTICS -o $@ $^
BISON_CMD1   =bison -v -p yy -d -o $@ $^
BISON_CMD2   =bison -v -p hb_comp -d -o $@ $^
LIB_CMD      =\
		RM -f $@ &&\
		AR cru $@ $^ &&\
		RANLIB $@ &&\
		STRIP -g $@
HARBOUR_LIBS=\
	-L$(LIB_DIR)\
	-lvm$(HB_MT)\
	-lrtl$(HB_MT)\
	-lvm$(HB_MT)\
	-lrdd$(HB_MT)\
	-lrtl$(HB_MT)\
	-lct$(HB_MT)\
	-lzlib\
	-lvm$(HB_MT)\
	-lrtl$(HB_MT)\
	-lgtwin\
	-lrtl$(HB_MT)\
	-llibmisc\
	-lcodepage\
	-lmacro$(HB_MT)\
	-ldbfcdx$(HB_MT)\
	-lbmdbfcdx$(HB_MT)\
	-lsixcdx$(HB_MT)\
	-ldbfntx$(HB_MT)\
	-ldbfnsx$(HB_MT)\
	-lrtl$(HB_MT)\
	-ldbffpt$(HB_MT)\
	-lhbsix$(HB_MT)\
	-lhsx$(HB_MT)\
	-lpcrepos\
	-lcommon\
	-lpp$(HB_MT)\
	-llang
COMPILERLIBS=\
	-L$(CC_DIR)/lib\
	-luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32 -lwinmm -lmpr\
	-lole32 -luuid -loleaut32 -lws2_32
EXE_LIBS=$(HARBOUR_LIBS) $(COMPILERLIBS)
HRB_LIBS=-L$(LIB_DIR) -lpp -lcommon $(COMPILERLIBS)
CMN_LIBS=-L$(LIB_DIR) -lcommon $(COMPILERLIBS)
LINK_CMD=GCC -Wall -o $@ $^ -mno-cygwin

#===============================================================================
# The Project
#===============================================================================
ifeq ($(HB_THREAD_SUPPORT),)
PROJECT=$(ST_PROJECT)
else
PROJECT=$(MT_PROJECT)
endif

ALL: $(PROJECT)

#===============================================================================
# Libraries dependencies and build rules (ST & MT )
#===============================================================================

#===============================================================================
# Libraries dependencies and build rules (ST)
#===============================================================================
$(RTL_LIB) : $(RTL_LIB_OBJS)
	$(LIB_CMD)

$(CT_LIB) : $(CT_LIB_OBJS)
	$(LIB_CMD)

VM_LIB_OBJS+=\
	$(VM_MAIN_OBJS)
$(VM_LIB) : $(VM_LIB_OBJS)
	$(LIB_CMD)

$(ZLIB_LIB) : $(ZLIB_LIB_OBJS)
	$(LIB_CMD)

ifeq ($(DV_MEMCPY),1)
COMMON_LIB_OBJS+=\
	$(OBJ_DIR)/dvmemcpy.o
endif
$(COMMON_LIB) : $(COMMON_LIB_OBJS)
	$(LIB_CMD)

$(CODEPAGE_LIB) : $(CODEPAGE_LIB_OBJS)
	$(LIB_CMD)

$(LANG_LIB) : $(LANG_LIB_OBJS)
	$(LIB_CMD)

$(DLL_MAIN_LIB) : $(DLL_MAIN_LIB_OBJS)
	$(LIB_CMD)

$(GTSTD_LIB) : $(GTSTD_LIB_OBJS)
	$(LIB_CMD)

$(GTWIN_LIB) : $(GTWIN_LIB_OBJS)
	$(LIB_CMD)

$(GTCGI_LIB) : $(GTCGI_LIB_OBJS)
	$(LIB_CMD)

$(GTPCA_LIB) : $(GTPCA_LIB_OBJS)
	$(LIB_CMD)

$(GTGUI_LIB) : $(GTGUI_LIB_OBJS)
	$(LIB_CMD)

$(PCREPOS_LIB) : $(PCREPOS_LIB_OBJS)
	$(LIB_CMD)

$(DEBUG_LIB) : $(DEBUG_LIB_OBJS)
	$(LIB_CMD)

$(NULSYS_LIB) : $(NULSYS_LIB_OBJS)
	$(LIB_CMD)

$(ODBC_LIB) : $(ODBC_LIB_OBJS)
	$(LIB_CMD)

$(TIP_LIB) : $(TIP_LIB_OBJS)
	$(LIB_CMD)

$(MISC_LIB) : $(MISC_LIB_OBJS)
	$(LIB_CMD)

$(GTWVT_LIB) : $(GTWVT_LIB_OBJS)
	$(LIB_CMD)

$(MACRO_LIB) : $(MACRO_LIB_OBJS)
	$(LIB_CMD)

$(DBFCDX_LIB) : $(DBFCDX_LIB_OBJS)
	$(LIB_CMD)

$(DBFMDX_LIB) : $(DBFMDX_LIB_OBJS)
	$(LIB_CMD)

$(USRRDD_LIB) : $(USRRDD_LIB_OBJS)
	$(LIB_CMD)

$(RDDS_LIB) : $(RDDS_LIB_OBJS)
	$(LIB_CMD)

$(BMDBFCDX_LIB) : $(BMDBFCDX_LIB_OBJS)
	$(LIB_CMD)

$(BMSIXCDX_LIB) : $(BMSIXCDX_LIB_OBJS)
	$(LIB_CMD)

$(SIXCDX_LIB) : $(SIXCDX_LIB_OBJS)
	$(LIB_CMD)

$(DBFFPT_LIB) : $(DBFFPT_LIB_OBJS)
	$(LIB_CMD)

$(DBFNTX_LIB) : $(DBFNTX_LIB_OBJS)
	$(LIB_CMD)

$(DBFNSX_LIB) : $(DBFNSX_LIB_OBJS)
	$(LIB_CMD)

$(FMSTAT_LIB) : $(FMSTAT_LIB_OBJS)
	$(LIB_CMD)

$(PP_LIB) : $(PP_LIB_OBJS)
	$(LIB_CMD)

$(RDD_LIB) : $(RDD_LIB_OBJS)
	$(LIB_CMD)

$(HBSIX_LIB) : $(HBSIX_LIB_OBJS)
	$(LIB_CMD)

$(HSX_LIB) : $(HSX_LIB_OBJS)
	$(LIB_CMD)

#*******************************************************************************
else ifeq ($(__BLD__),DLL_BLD)
#*******************************************************************************
# Comment this line if ST mode is preferred
DLL_MT=mt

# Uncomment this line when including RDDADS
# HB_RDDADS=1

# Uncomment this line when including WVTGUI
# HB_WVTGUI=1

#===============================================================================
# Macro Definitions
#===============================================================================
include common.mak

#===============================================================================
# Compiler and 3rd Party libraries need to be linked
#===============================================================================
COMPILERLIBS=\
	-L$(CC_DIR)/lib -L$(BIN_DIR) -L$(LIB_DIR)\
	-luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32 -lwinmm -lmpr\
	-lole32 -luuid -loleaut32 -lws2_32 -ldllmain -lharbour

COMPILERLIBS1=\
	-L$(CC_DIR)/lib -L$(BIN_DIR) -L$(LIB_DIR)\
	-lws2_32 -lwinmm -lgdi32 -lole32 -lwinspool\
	-loleaut32 -luuid -lmpr

#===============================================================================
# RDDADS
#===============================================================================
ifeq ($(HB_RDDADS),1)
ifeq ($(HB_ADS_IMPLIB),no)
else
COMPILERLIBS+=\
	-lace32
COMPILERLIBS1+=\
	-lace32
endif

HARBOUR_DLL_OBJS+=\
	$(RDDADS_LIB_OBJS)
endif

#===============================================================================
# DANIEL VIK MEMCPY
#===============================================================================
ifeq ($(DV_MEMCPY),1)
HARBOUR_DLL_OBJS+=\
	$(OBJ_DIR)/dvmemcpy.o
endif

#===============================================================================
# WVTGUI
#===============================================================================
ifeq ($(HB_WVTGUI),1)
HARBOUR_DLL_OBJS+=\
	$(WVTGUI_LIB_OBJS)
endif

#===============================================================================
# Append your own build flags here
#===============================================================================
HARBOURFLAGS+=
CLIBFLAGS   +=

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
ifeq ($(DLL_MT),mt)
HARBOURFLAGS+=-dHB_THREAD_SUPPORT
CLIBFLAGS   +=-DHB_THREAD_SUPPORT -mthreads
endif

ifdef HB_DIR_ADS
ACEH_DIR    =-I"$(HB_DIR_ADS)"
endif
INCLUDE_DIR =include
CLIBFLAGS   +=-D__EXPORT__ -Wall -mdll -mno-cygwin -O3 -c -fno-strict-aliasing $(ACEH_DIR) -I$(INCLUDE_DIR) -I$(OBJ_DIR)
HARBOURFLAGS+=-d__EXPORT__ -i$(INCLUDE_DIR) -q0 -po$(OBJ_DIR)/ -w2 -es2 -gc2
CC_CMD      =GCC $(CLIBFLAGS) -o $@ $^
HB_CMD      =$(HARBOUR_EXE) -n1 $(HARBOURFLAGS) -o$@ $^
HB_CMD_MAIN =$(HARBOUR_EXE) -n0 -d_USE_APPMAIN_ $(HARBOURFLAGS) -o$@ $^
BISON_CMD1  =bison -v -p yy -d -o $@ $^
BISON_CMD2  =bison -v -p hb_comp -d -o $@ $^
DLL_LINK_CMD=GCC -shared -Wl,--out-implib,$(HARBOUR_DLL_LIB) -o $@ $^ $(COMPILERLIBS1)
DLLEXE_LINK_CMD=GCC -WAll -mno-cygwin -o $@ $^ $(HARBOUR_DLL) $(COMPILERLIBS)

#===============================================================================
# The Project
#===============================================================================
ALL: $(DLL_PROJECT)

#===============================================================================
# HARBOUR.DLL rules
#===============================================================================
$(HARBOUR_DLL) : $(HARBOUR_DLL_OBJS)
	$(DLL_LINK_CMD)

#*******************************************************************************
else ifeq ($(__BLD__),CONTRIB_BLD)
#*******************************************************************************
# Uncomment this section if you have want to build the libraries.
HB_GTWVW=1
# HB_FIREBIRD=1
# HB_MYSQL=1
# HB_PGSQL=1

HB_MZIP=1
HB_ZIP=1

HB_FREEIMAGE=1
HB_WHAT32=1
HB_XWT=1

#===============================================================================
# Append your own build flags here
#===============================================================================
HARBOURFLAGS+=
CLIBFLAGS   +=

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
ifdef HB_DIR_ADS
ACEH_DIR    =-I"$(HB_DIR_ADS)"
endif
HARBOURFLAGS+=-iinclude;$(GDLIB_DIR)/include;$(WHAT32_DIR)/include;$(XWT_DIR)/include -q0 -po$(OBJ_DIR)/ -w2 -es2 -gc2
CLIBFLAGS   +=-D__WIN32__ -Wall -mno-cygwin -O3 -mtune=pentium -c -fno-strict-aliasing
CLIBFLAGS   +=$(ACEH_DIR) -Iinclude -I$(FREEIMAGE_DIR)/include -I$(GDLIB_DIR)/include -I$(XWT_DIR)/include -I$(XWT_DIR)/src/xwt_win -I$(ZLIB_DIR) -I$(PNG_DIR)

ifeq ($(HB_THREAD_SUPPORT),1)
	HARBOURFLAGS+=-dHB_THREAD_SUPPORT
	CLIBFLAGS+=-DHB_THREAD_SUPPORT -mthreads
endif

HB_CMD =$(HARBOUR_EXE) -n1 $(HARBOURFLAGS) -o$@ $^
CC_CMD =GCC $(CLIBFLAGS) -o $@ $^
CC_CMD_ZIP=G++ $(CLIBFLAGS) -I$(HBZIP_DIR)\include -DWIN32 -D_WIN32 -DNDEBUG -o $@ $^
LIB_CMD=\
	RM -f $@ &&\
	AR cru $@ $^ &&\
	RANLIB $@ &&\
	STRIP -g $@

#===============================================================================
# Macro Definitions
#===============================================================================
include common.mak

ifeq ($(HB_FREEIMAGE), 1)
CONTRIB_PROJECT+=$(FREEIMAGE_LIB)
endif

ifeq ($(HB_MZIP), 1)
CONTRIB_PROJECT+=$(HBMZIP_LIB)
endif

ifeq ($(HB_ZIP), 1)
CONTRIB_PROJECT+=$(HBZIP_LIB)
endif

ifeq ($(HB_XWT), 1)
CONTRIB_PROJECT+=$(XWT_LIB)
endif

ifeq ($(HB_WHAT32), 1)
CONTRIB_PROJECT+=$(WHAT32_LIB)
endif

ifeq ($(HB_GTWVW), 1)
CONTRIB_PROJECT+=$(GTWVW_LIB)
endif

ifeq ($(HB_FIREBIRD), 1)
CONTRIB_PROJECT+=$(FIREBIRD_LIB)
endif

ifeq ($(HB_MYSQL), 1)
CONTRIB_PROJECT+=$(MYSQL_LIB)
endif

ifeq ($(HB_PGSQL), 1)
CONTRIB_PROJECT+=$(PGSQL_LIB)
endif

ALL: $(CONTRIB_PROJECT)

#===============================================================================
# Libraries dependencies and build rules (ST & MT )
#===============================================================================

#===============================================================================
# Libraries dependencies and build rules (ST)
#===============================================================================
$(FIREBIRD_LIB) : $(FIREBIRD_LIB_OBJS)
	$(LIB_CMD)

$(FREEIMAGE_LIB) : $(FREEIMAGE_LIB_OBJS)
	$(LIB_CMD)

$(GDLIB_LIB) : $(GDLIB_LIB_OBJS)
	$(LIB_CMD)

$(HBMZIP_LIB) : $(HBMZIP_LIB_OBJS)
	$(LIB_CMD)

$(HBZIP_LIB) : $(HBZIP_LIB_OBJS)
	$(LIB_CMD)

$(LIBNF_LIB) : $(LIBNF_LIB_OBJS)
	$(LIB_CMD)

$(PDFLIB_LIB) : $(PDFLIB_LIB_OBJS)
	$(LIB_CMD)

$(MYSQL_LIB) : $(MYSQL_LIB_OBJS)
	$(LIB_CMD)

$(PGSQL_LIB) : $(PGSQL_LIB_OBJS)
	$(LIB_CMD)

$(XWT_LIB) : $(XWT_LIB_OBJS)
	$(LIB_CMD)

ifeq ($(HB_ADS_IMPLIB),no)
RDDADS_LIB_OBJS+=\
	$(OBJ_DIR)/ace32.o
endif
$(RDDADS_LIB) : $(RDDADS_LIB_OBJS)
	$(LIB_CMD)

$(GTWVW_LIB) : $(GTWVW_LIB_OBJS)
	$(LIB_CMD)

$(TELEPATH_LIB) : $(TELEPATH_LIB_OBJS)
	$(LIB_CMD)

$(HBCC_LIB) : $(HBCC_LIB_OBJS)
	$(LIB_CMD)

$(WHAT32_LIB) : $(WHAT32_LIB_OBJS)
	$(LIB_CMD)

$(WVTGUI_LIB) : $(WVTGUI_LIB_OBJS)
	$(LIB_CMD)

$(PNG_LIB) : $(PNG_LIB_OBJS)
	$(LIB_CMD)

$(HBHPDF_LIB) : $(HBHPDF_LIB_OBJS)
	$(LIB_CMD)

endif

#===============================================================================
# Building rules of Object files
#===============================================================================
include compile.mak
