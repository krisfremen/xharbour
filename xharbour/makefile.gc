#===============================================================================
#
# $Id: makefile.gc,v 1.39 2008/04/27 14:00:44 andijahja Exp $
#
# MAKEFILE FOR MINGW32
#
# This is Generic File, do not change it. If you should require your own build
# version, changes should only be made on your local copy.(AJ: 2008-04-26)
#
#===============================================================================

#===============================================================================
# Macro Definitions
#===============================================================================
include common.mak

#===============================================================================
# Append your own build flags here
#===============================================================================
HARBOURFLAGS+=
CLIBFLAGS   +=

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
INCLUDE_DIR  =include
INCLUDE_DIR2 =include
HARBOURFLAGS+=-i$(INCLUDE_DIR) -q0 -po$(OBJ_DIR)/ -w2 -es2 -gc2
CLIBFLAGS   +=-D__WIN32__ -Wall -mno-cygwin -O3 -mtune=pentium -c -I$(INCLUDE_DIR) -I$(OBJ_DIR)

ifeq ($(HB_THREAD_SUPPORT),1)
	HARBOURFLAGS+=-dHB_THREAD_SUPPORT
	CLIBFLAGS+=-DHB_THREAD_SUPPORT -mthreads
endif

#===============================================================================
# NOTE ON HB_CMD/HB_CMD_MAIN:
#  -n1 is used for non-executing module (fe. library's modules), because in
#  some cases, if the module is compiled with -n, it will execute upon
#  initialization, thus RTE.
#  -n is ONLY applied to main module to make sure that only that module will
#  execute upon running the executable.(AJ: 2008-04-26)
#===============================================================================
HB_CMD     =$(HARBOUR_EXE) -n1 $(HARBOURFLAGS) -o$@ $^
HB_CMD_MAIN=$(HARBOUR_EXE) -n0 -d_USE_APPMAIN_ $(HARBOURFLAGS) $(HB_MT_FLAGS) -o$@ $^

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
CC_CMD       =GCC $(CLIBFLAGS) -o $@ $^
CC_CMD_FMSTAT=GCC $(CLIBFLAGS) -DHB_FM_STATISTICS -o $@ $^
BISON_CMD1   =bison -v -p yy -d -o $@ $^
BISON_CMD2   =bison -v -p hb_comp -d -o $@ $^
LIB_CMD      =\
		RM -f $@ &&\
		AR cru $@ $^ &&\
		RANLIB $@ &&\
		STRIP -g $@

COMPILERLIBS=\
	-L$(CC_DIR)/lib -L$(LIB_DIR)\
	--start-group\
	-lvm$(HB_MT)\
	-lrtl$(HB_MT)\
	-lvm$(HB_MT)\
	-lrdd$(HB_MT)\
	-lrtl$(HB_MT)\
	-lct$(HB_MT)\
	-lzlib\
	-lvm$(HB_MT)\
	-lrtl$(HB_MT)\
	-lgtwin\
	-lrtl$(HB_MT)\
	-llibmisc\
	-lcodepage\
	-lmacro$(HB_MT)\
	-ldbfcdx$(HB_MT)\
	-lbmdbfcdx$(HB_MT)\
	-lsixcdx$(HB_MT)\
	-ldbfntx$(HB_MT)\
	-ldbffpt$(HB_MT)\
	-lhbsix$(HB_MT)\
	-lhsx$(HB_MT)\
	-lpcrepos\
	-lcommon\
	-lpp$(HB_MT)\
	-llang\
	--end-group\
	-luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32 -lwinmm -lmpr\
	-lole32 -luuid -loleaut32 -lws2_32

ifeq ($(HB_GTALLEG),yes)
HB_GT_LIBS+=\
	$(GTALLEG_LIB)
endif

ifeq ($(HB_THREAD_SUPPORT),0)
PROJECT=\
	$(COMMON_LIB)\
	$(PPGEN_EXE)\
	$(PP_LIB)\
	$(HARBOUR_EXE)\
	$(PCREPOS_LIB)\
	$(LANG_LIB)\
	$(CODEPAGE_LIB)\
	$(HB_GT_LIBS)\
	$(DEBUG_LIB)\
	$(NULSYS_LIB)\
	$(ZLIB_LIB)\
	$(DLL_MAIN_LIB)\
	$(ODBC_LIB)\
	$(MISC_LIB)\
	$(HBPP_EXE)\
	$(HBDOC_EXE)\
	$(HBMAKE_EXE)\
	$(XBSCRIPT_EXE)
else
PROJECT=\
	$(PP_LIB)
endif

PROJECT+=\
	$(VM_LIB)\
	$(FMSTAT_LIB)\
	$(RTL_LIB)\
	$(MACRO_LIB)\
	$(RDD_LIB)\
	$(TIP_LIB)\
	$(DBFFPT_LIB)\
	$(DBFNTX_LIB)\
	$(DBFCDX_LIB)\
	$(BMDBFCDX_LIB)\
	$(SIXCDX_LIB)\
	$(BMSIXCDX_LIB)\
	$(HBSIX_LIB)\
	$(HSX_LIB)\
	$(USRRDD_LIB)\
	$(RDDS_LIB)\
	$(CT_LIB)\
	$(HBTEST_EXE)\
	$(HBRUN_EXE)

ALL: $(PROJECT)

#===============================================================================
# Libraries dependencies and build rules (ST & MT )
#===============================================================================
# A check should be made here whether the project is MT. If this clause ignored,
# then GNU make will unnecessarily recompile ST libraries although they are not
# included in the PROJECT. I do not know whether this is a GNU make bug or my
# own bug/ignorance. This results in non-ability to include the PROJECT items in
# common.mak (AJ: 2008-04-26)
ifeq ($(HB_THREAD_SUPPORT),0)
#===============================================================================
# Libraries dependencies and build rules (ST)
#===============================================================================
$(ZLIB_LIB) : $(ZLIB_LIB_OBJS)
	$(LIB_CMD)

$(COMMON_LIB) : $(COMMON_LIB_OBJS)
	$(LIB_CMD)

$(CODEPAGE_LIB) : $(CODEPAGE_LIB_OBJS)
	$(LIB_CMD)

$(LANG_LIB) : $(LANG_LIB_OBJS)
	$(LIB_CMD)

$(DLL_MAIN_LIB) : $(DLL_MAIN_LIB_OBJS)
	$(LIB_CMD)

$(GTSTD_LIB) : $(GTSTD_LIB_OBJS)
	$(LIB_CMD)

$(GTWIN_LIB) : $(GTWIN_LIB_OBJS)
	$(LIB_CMD)

$(GTCGI_LIB) : $(GTCGI_LIB_OBJS)
	$(LIB_CMD)

$(GTPCA_LIB) : $(GTPCA_LIB_OBJS)
	$(LIB_CMD)

$(GTGUI_LIB) : $(GTGUI_LIB_OBJS)
	$(LIB_CMD)

$(PCREPOS_LIB) : $(PCREPOS_LIB_OBJS)
	$(LIB_CMD)

$(DEBUG_LIB) : $(DEBUG_LIB_OBJS)
	$(LIB_CMD)

$(NULSYS_LIB) : $(NULSYS_LIB_OBJS)
	$(LIB_CMD)

$(PPGEN_EXE) : $(PPGEN_EXE_OBJS) $(COMMON_LIB)
	GCC -WAll -o$(PPGEN_EXE) $(PPGEN_EXE_OBJS) -mno-cygwin -L$(CC_DIR)/lib -L$(LIB_DIR) -lcommon 

$(HARBOUR_EXE) : $(HARBOUR_EXE_OBJS)
	GCC -Wall -o$(HARBOUR_EXE) $(HARBOUR_EXE_OBJS) -L$(LIB_DIR) -mno-cygwin -lpp -lcommon -luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32

$(HBDOC_EXE) : $(HBDOC_EXE_OBJS) $(HARBOUR_LIBS)
	GCC -WAll -o$(HBDOC_EXE) $(HBDOC_EXE_OBJS) -mno-cygwin $(COMPILERLIBS)

$(HBMAKE_EXE) : $(HBMAKE_EXE_OBJS) $(HARBOUR_LIBS)
	GCC -WAll -o$(HBMAKE_EXE) $(HBMAKE_EXE_OBJS) -mno-cygwin $(COMPILERLIBS)

$(HBPP_EXE) : $(HBPP_EXE_OBJS) $(COMMON_LIB) $(PP_LIB)
	GCC -WAll -o$(HBPP_EXE) $(HBPP_EXE_OBJS) -mno-cygwin -L$(CC_DIR)/lib -L$(LIB_DIR) -lcommon -lpp -luser32 -lwinspool -lcomctl32 -lcomdlg32 -lgdi32 -lole32 -luuid -loleaut32

$(XBSCRIPT_EXE) : $(XBSCRIPT_EXE_OBJS) $(HARBOUR_LIBS)
	GCC -WAll -o$(XBSCRIPT_EXE) $(XBSCRIPT_EXE_OBJS) -mno-cygwin $(COMPILERLIBS)
endif

#===============================================================================
# The rest of PROJECT items have both MT and ST version
#===============================================================================
$(ODBC_LIB) : $(ODBC_LIB_OBJS)
	$(LIB_CMD)

$(TIP_LIB) : $(TIP_LIB_OBJS)
	$(LIB_CMD)

$(CT_LIB) : $(CT_LIB_OBJS)
	$(LIB_CMD)

$(MISC_LIB) : $(MISC_LIB_OBJS)
	$(LIB_CMD)

$(GTWVT_LIB) : $(GTWVT_LIB_OBJS)
	$(LIB_CMD)

$(MACRO_LIB) : $(MACRO_LIB_OBJS)
	$(LIB_CMD)

$(DBFCDX_LIB) : $(DBFCDX_LIB_OBJS)
	$(LIB_CMD)

$(USRRDD_LIB) : $(USRRDD_LIB_OBJS)
	$(LIB_CMD)

$(RDDS_LIB) : $(RDDS_LIB_OBJS)
	$(LIB_CMD)

$(BMDBFCDX_LIB) : $(BMDBFCDX_LIB_OBJS)
	$(LIB_CMD)

$(BMSIXCDX_LIB) : $(BMSIXCDX_LIB_OBJS)
	$(LIB_CMD)

$(SIXCDX_LIB) : $(SIXCDX_LIB_OBJS)
	$(LIB_CMD)

$(DBFFPT_LIB) : $(DBFFPT_LIB_OBJS)
	$(LIB_CMD)

$(DBFNTX_LIB) : $(DBFNTX_LIB_OBJS)
	$(LIB_CMD)

$(RTL_LIB) : $(RTL_LIB_OBJS)
	$(LIB_CMD)

VM_LIB_OBJS+=\
	$(VM_MAIN_OBJS)
$(VM_LIB) : $(VM_LIB_OBJS)
	$(LIB_CMD)

$(FMSTAT_LIB) : $(FMSTAT_LIB_OBJS)
	$(LIB_CMD)

$(PP_LIB) : $(PP_LIB_OBJS)
	$(LIB_CMD)

$(RDD_LIB) : $(RDD_LIB_OBJS)
	$(LIB_CMD)

$(HBSIX_LIB) : $(HBSIX_LIB_OBJS)
	$(LIB_CMD)

$(HSX_LIB) : $(HSX_LIB_OBJS)
	$(LIB_CMD)

#===============================================================================
# Executable dependencies and build rules (ST and MT)
#===============================================================================
$(HBRUN_EXE) : $(HBRUN_EXE_OBJS) $(HARBOUR_LIBS)
	GCC -WAll -o$(HBRUN_EXE) $(HBRUN_EXE_OBJS) -mno-cygwin $(COMPILERLIBS)

$(HBTEST_EXE) : $(HBTEST_EXE_OBJS) $(HARBOUR_LIBS)
	GCC -WAll -o$(HBTEST_EXE) $(HBTEST_EXE_OBJS) -mno-cygwin $(COMPILERLIBS)

#===============================================================================
# Building rules of Object files
#===============================================================================
include compile.mak
