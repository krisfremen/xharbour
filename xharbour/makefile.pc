#===============================================================================
#
# $Id: makefile.pc,v 1.68 2008/04/27 14:00:44 andijahja Exp $
#
# MAKEFILE FOR PELLESC
#
# This is Generic File, do not change it. If you should require your own build
# version, changes should only be made on your local copy.(AJ:2008-04-26)
#
#===============================================================================

# Comment the following line when using version lower then 5.00
.PHONY : ALL

#===============================================================================
# Macro Definitions
#===============================================================================
!include common.mak

#===============================================================================
# Append your own build flags here
#===============================================================================
HARBOURFLAGS=$(HARBOURFLAGS)
CLIBFLAGS   =$(CLIBFLAGS)

#===============================================================================
# C compiler definition and C flags. These should never have to change.
#===============================================================================
INCLUDE_DIR2=include
INCLUDE_DIR =/I"INCLUDE" /I"$(CC_DIR)\INCLUDE" /I"$(CC_DIR)\INCLUDE\WIN" /I"$(OBJ_DIR)"
HARBOURFLAGS=$(HARBOURFLAGS) $(INCLUDE_DIR) -q0 -po$(OBJ_DIR)\ -w2 -es2 -gc2
#-------------------------------------------------------------------------------
# AJ: 2008-04-26
# NOTE ON HB_CMD/HB_CMD_MAIN:
#  -n1 is used for non-executing module (fe. library's modules), because in
#  some cases, if the module is compiled with -n, it will execute upon
#  initialization, thus RTE.
#  -n is ONLY applied to main module to make sure that only that module will
#  execute upon running the executable.
#-------------------------------------------------------------------------------
HB_CMD       =$(HARBOUR_EXE) /n1 $(HARBOURFLAGS) $** -o$@
HB_CMD_MAIN  =$(HARBOUR_EXE) /n0 $(HARBOURFLAGS) $** -o$@

CLIBFLAGS    =$(CLIBFLAGS) /Ze /Zx /Tx86-coff /Go $(INCLUDE_DIR) /D"NEED_DUMMY_RETURN" /D"__WIN32__" /D"WIN32" /D"NULL=0" /D"HB_EXT_INKEY"
CC_CMD       =POCC $(__MT__) $(CLIBFLAGS) /Fo$@ $**
CC_CMD_FMSTAT=POCC $(__MT__) /DHB_FM_STATISTICS $(CLIBFLAGS) /Fo$@ $**
LINKERFLAGS  =/LIBPATH:$(LIB_DIR) /LIBPATH:$(CC_DIR)\LIB /LIBPATH:$(CC_DIR)\LIB\WIN /MACHINE:IX86 /SUBSYSTEM:CONSOLE
LINK_CMD     =POLINK /OUT:$@ $** $(LINKERFLAGS)
LIB_CMD      =POLIB /OUT:$@ $**
BISON_CMD1   =bison -v -d $** -o$@
BISON_CMD2   =bison -v -p hb_comp -d $** -o$@

CC_LIBS=\
	crt$(HB_MT).lib\
	kernel32.lib\
	winspool.lib\
	user32.lib\
	advapi32.lib\
	ole32.lib\
	uuid.lib\
	oleaut32.lib\
	winmm.lib\
	mpr.lib

ALL: $(PROJECT)

#===============================================================================
# Library dependencies and build rules
#===============================================================================
$(RTL_LIB) : $(RTL_LIB_OBJS)
	$(LIB_CMD)

$(ZLIB_LIB) : $(ZLIB_LIB_OBJS)
	$(LIB_CMD)

$(PCREPOS_LIB) : $(PCREPOS_LIB_OBJS)
	$(LIB_CMD)

$(COMMON_LIB) : $(COMMON_LIB_OBJS)
	$(LIB_CMD)

$(CODEPAGE_LIB) : $(CODEPAGE_LIB_OBJS)
	$(LIB_CMD)

$(CT_LIB) : $(CT_LIB_OBJS)
	$(LIB_CMD)

$(DEBUG_LIB) : $(DEBUG_LIB_OBJS)
	$(LIB_CMD)

$(MACRO_LIB) : $(MACRO_LIB_OBJS)
	$(LIB_CMD)

$(PP_LIB) : $(PP_LIB_OBJS)
	$(LIB_CMD)

$(LANG_LIB) : $(LANG_LIB_OBJS)
	$(LIB_CMD)

$(RDD_LIB) : $(RDD_LIB_OBJS)
	$(LIB_CMD)

$(DBFCDX_LIB) : $(DBFCDX_LIB_OBJS)
	$(LIB_CMD)

$(BMDBFCDX_LIB) : $(BMDBFCDX_LIB_OBJS)
	$(LIB_CMD)

$(SIXCDX_LIB) : $(SIXCDX_LIB_OBJS)
	$(LIB_CMD)

$(BMSIXCDX_LIB) : $(BMSIXCDX_LIB_OBJS)
	$(LIB_CMD)

$(DBFFPT_LIB) : $(DBFFPT_LIB_OBJS)
	$(LIB_CMD)

$(DBFNTX_LIB) : $(DBFNTX_LIB_OBJS)
	$(LIB_CMD)

$(HBSIX_LIB) : $(HBSIX_LIB_OBJS)
	$(LIB_CMD)

$(HSX_LIB) : $(HSX_LIB_OBJS)
	$(LIB_CMD)

$(NULSYS_LIB) : $(NULSYS_LIB_OBJS)
	$(LIB_CMD)

$(USRRDD_LIB) : $(USRRDD_LIB_OBJS)
	$(LIB_CMD)

$(RDDS_LIB) : $(RDDS_LIB_OBJS)
	$(LIB_CMD)

VM_LIB_OBJS=\
	$(VM_LIB_OBJS)\
	$(VM_MAIN_OBJS)
$(VM_LIB) : $(VM_LIB_OBJS)
	$(LIB_CMD)

$(TIP_LIB) : $(TIP_LIB_OBJS)
	$(LIB_CMD)

$(GTCGI_LIB) : $(GTCGI_LIB_OBJS)
	$(LIB_CMD)

$(GTGUI_LIB) : $(GTGUI_LIB_OBJS)
	$(LIB_CMD)

$(GTPCA_LIB) : $(GTPCA_LIB_OBJS)
	$(LIB_CMD)

$(GTSTD_LIB) : $(GTSTD_LIB_OBJS)
	$(LIB_CMD)

$(GTWIN_LIB) : $(GTWIN_LIB_OBJS)
	$(LIB_CMD)

$(GTWVT_LIB) : $(GTWVT_LIB_OBJS)
	$(LIB_CMD)

$(GTALLEG_LIB) : $(GTALLEG_LIB_OBJS)
	$(LIB_CMD)

$(ODBC_LIB) : $(ODBC_LIB_OBJS)
	$(LIB_CMD)

$(MISC_LIB) : $(MISC_LIB_OBJS)
	$(LIB_CMD)

$(DLL_MAIN_LIB) : $(DLL_MAIN_LIB_OBJS)
	$(LIB_CMD)

$(FMSTAT_LIB) : $(FMSTAT_LIB_OBJS)
	$(LIB_CMD)

#===============================================================================
# Executable dependencies and build rules
#===============================================================================
$(HBPP_EXE) : $(HBPP_EXE_OBJS)
	$(LINK_CMD) $(COMMON_LIB) $(CC_LIBS)

$(PPGEN_EXE) : \
	$(PPGEN_EXE_OBJS)\
	$(INCLUDE_DIR2)\hbstdgen.ch\
	$(INCLUDE_DIR2)\std.ch\
	$(INCLUDE_DIR2)\set.ch\
	$(COMMON_LIB_OBJS)
	POLINK /OUT:$(PPGEN_EXE) $(PPGEN_EXE_OBJS) $(LINKERFLAGS) $(COMMON_LIB) $(CC_LIBS)

$(HARBOUR_EXE) : $(HARBOUR_EXE_OBJS)
	$(LINK_CMD) $(COMMON_LIB) $(PP_LIB)

$(HBTEST_EXE) : $(HBTEST_EXE_OBJS)
	$(LINK_CMD) $(HARBOUR_LIBS) $(CC_LIBS)

$(HBMAKE_EXE) : $(HBMAKE_EXE_OBJS)
	$(LINK_CMD) $(HARBOUR_LIBS) $(CC_LIBS)

$(HBDOC_EXE) : $(HBDOC_EXE_OBJS)
	$(LINK_CMD) $(HARBOUR_LIBS) $(CC_LIBS)

$(HBRUN_EXE) : $(HBRUN_EXE_OBJS)
	$(LINK_CMD) $(HARBOUR_LIBS) $(CC_LIBS)

$(XBSCRIPT_EXE) : $(XBSCRIPT_EXE_OBJS)
	$(LINK_CMD) $(HARBOUR_LIBS) $(CT_LIB) $(CC_LIBS)

#===============================================================================
# Building rules of Object files
#===============================================================================
!include compile.mak
