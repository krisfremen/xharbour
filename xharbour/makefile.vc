#
# $Id: makefile.vc,v 1.42 2003/04/04 23:18:47 paultucker Exp $
#

#
# Makefile for Harbour Project for Microsoft Visual C (32 bit)
#

# ---------------------------------------------------------------
# If you need to set additional compiler/linker options use the
# environment variables below, but please DON'T MODIFY THIS FILE
# for this purpose.
# ---------------------------------------------------------------

#
# NOTE: You can use these envvars to configure the make process:
#       (note that these are all optional)
#
#       CFLAGS       - Extra C compiler options for libraries and for
#                      executables
#       CLIBFLAGS    - Extra C compiler options for the libraries
#       C_USR        - Extra C compiler options for libraries and for
#                      executables (GNU make compatible envvar)
#       HARBOURFLAGS - Extra Harbour compiler options
#       HB_DOC_PDF   - Turns on the .PDF file support in the HBDOC utility.
#                      Note that this will require the pdflib contrib.
#       HB_GT_LIB    - To override the default GT driver
#                      (search for HB_GT_LIBS for a list of values)
#       PRG_USR      - Extra Harbour compiler options
#                      (GNU make compatible envvar)
#

#
# Notes about this makefile:
#
# 1. To add new files to a dependancy list, add an obj name to one of the
#    OBJ lists for the appropriate library.
#    NOTE: put .prg related obj's last in the lib list.
#
#   See makefile.nt for a batch mode (read: faster) version of this file.
#

# ---------------------------------------------------------------
# "echo." intentionally used instead of "echo", to avoid conflicts
# with external commands named echo.
# using macros for ECHO and DEL to allow overiding such as:
#
#    set ECHO=cmd /c echo
#    set DEL=cmd /c del
#
# The above might be needed on Windows 2000 and XP.
# The macros are referenced in makefile.bc
# ---------------------------------------------------------------

!ifndef ECHO
# don't indent definitions
ECHO = echo.
!endif
!ifndef DEL
# You might need to set 'ECHO=echo.' - but don't set 'DEL=del.' !!!
DEL = del
!endif

!ifdef HB_MT
MT           =MT
HB_MT        =-MT -DHB_THREAD_SUPPORT
!endif

# SimpLex is the only supported Scanner in xHarbour.
HB_LEX       =SIMPLEX

MK_FILE      =makefile.vc
MK_FLAGS     =$(MAKEFLAGS: =)

BIN_DIR      =bin\vc$(MT)
LIB_DIR      =lib\vc
OBJ_DIR      =obj\vc

#
# Directory macros. These should never have to change.
#

INCLUDE_DIR  =include
COMMON_DIR   =source\common
COMPILER_DIR =source\compiler
DEBUG_DIR    =source\debug
LANG_DIR     =source\lang
MACRO_DIR    =source\macro
PP_DIR       =source\pp
RDD_DIR      =source\rdd
RTL_DIR      =source\rtl
RPC_DIR      =source\rtl\uses_mt
VM_DIR       =source\vm
HBRUN_DIR    =utils\hbrun
HBTEST_DIR   =utils\hbtest
HBDOC_DIR    =utils\hbdoc
HBPP_DIR     =utils\hbpp
HBMAKE_DIR   =utils\hbmake
ODBC_DIR     =source\odbc
SAMPLES_DIR  =source\clipsamp

!ifdef HB_DOC_PDF
# don't indent definitions
HBPDF_DIR    =contrib\pdflib
!endif

#
# C compiler definition and C flags. These should never have to change.
#

AS           =ML
CFLAGS       =-G6 -Ox -GA -TP $(HB_MT) -W3 -nologo -I$(INCLUDE_DIR) -DHB_OS_WIN_32 -DSIMPLEX $(C_USR) $(CFLAGS)
CLIBFLAGS    =-c $(CFLAGS) $(CLIBFLAGS)
HARBOURFLAGS =-i$(INCLUDE_DIR) -n -q0 -w -es2 -gc0 $(PRG_USR) $(HARBOURFLAGS)
!ifdef HB_MT
LDFLAGS      =/MACHINE:IX86 /SUBSYSTEM:CONSOLE /NODEFAULTLIB:LIBC $(LDFLAGS)
!else
LDFLAGS      =/MACHINE:IX86 /SUBSYSTEM:CONSOLE /NODEFAULTLIB:LIBCMT $(LDFLAGS)
!endif

!ifdef HB_DOC_PDF
HARBOURFLAGS =$(HARBOURFLAGS) -dPDF
!endif

#
# Macros to access our library names
#

COMMON_LIB   =$(LIB_DIR)\common.lib
DBFCDX_LIB   =$(LIB_DIR)\dbfcdx$(MT).lib
DBFNTX_LIB   =$(LIB_DIR)\dbfntx$(MT).lib
DEBUG_LIB    =$(LIB_DIR)\debug.lib
LANG_LIB     =$(LIB_DIR)\lang.lib
MACRO_LIB    =$(LIB_DIR)\macro.lib
NULSYS_LIB   =$(LIB_DIR)\nulsys.lib
ODBC_LIB     =$(LIB_DIR)\hbodbc$(MT).lib
PP_LIB       =$(LIB_DIR)\pp$(MT).lib
RDD_LIB      =$(LIB_DIR)\rdd$(MT).lib
RTL_LIB      =$(LIB_DIR)\rtl$(MT).lib
!ifdef HB_MT
RPC_LIB      =$(LIB_DIR)\rpcmt.lib
!ENDIF
SAMPLES_LIB  =$(LIB_DIR)\samples.lib
VM_LIB       =$(LIB_DIR)\vm$(MT).lib

GTCGI_LIB    =$(LIB_DIR)\gtcgi.lib
GTDOS_LIB    =$(LIB_DIR)\gtdos.lib
GTPCA_LIB    =$(LIB_DIR)\gtpca.lib
GTSTD_LIB    =$(LIB_DIR)\gtstd.lib
GTWIN_LIB    =$(LIB_DIR)\gtwin.lib

HARBOUR_EXE  =$(BIN_DIR)\harbour.exe
HBPP_EXE     =$(BIN_DIR)\hbpp.exe
HBRUN_EXE    =$(BIN_DIR)\hbrun.exe
HBTEST_EXE   =$(BIN_DIR)\hbtest.exe
HBDOC_EXE    =$(BIN_DIR)\hbdoc.exe
HBMAKE_EXE   =$(BIN_DIR)\hbmake.exe

#
# GT driver list
#

# TODO: Add GTSLN and GTCRS

HB_GT_LIBS = \
   $(GTCGI_LIB) \
   $(GTPCA_LIB) \
   $(GTSTD_LIB) \
   $(GTWIN_LIB)

!ifndef HB_GT_LIB
# don't indent definitions
HB_GT_LIB = $(GTWIN_LIB)
!else
# don't indent definitions
HB_GT_LIB = $(LIB_DIR)\$(HB_GT_LIB).lib
!endif

#
# Rules
#

.SUFFIXES: .prg .lib .c .obj .asm

# override builtin

.c.obj::
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

.cpp.obj::
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

#
#
#

# TODO: Add GTSLN and GTCRS

LIBLIST = \
   $(RTL_LIB) \
   $(COMMON_LIB) \
   $(DEBUG_LIB) \
   $(MACRO_LIB) \
   $(PP_LIB) \
   $(LANG_LIB) \
   $(RDD_LIB) \
   $(DBFCDX_LIB) \
   $(DBFNTX_LIB) \
   $(NULSYS_LIB) \
   $(VM_LIB) \
   $(HB_GT_LIB) \
   $(SAMPLES_LIB) \
   $(ODBC_LIB) \
   $(RPC_LIB)

#
# macro.lib needs to be listed twice
#

LIBS = \
   $(LIBLIST) \
   $(MACRO_LIB)

#
# programs that require user32.lib (for OemToAnsi)
#

LIBS2 = \
   $(LIBS) \
   user32.lib \
   winspool.lib

#
# RTL.LIB rules
#

{$(RTL_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(RTL_DIR)}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

# List C modules first, then PRG modules

RTL_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\abs.obj \
   $(OBJ_DIR)$(MT)\accept.obj \
   $(OBJ_DIR)$(MT)\ampm.obj \
   $(OBJ_DIR)$(MT)\at.obj \
   $(OBJ_DIR)$(MT)\binnum.obj \
   $(OBJ_DIR)$(MT)\binnumx.obj \
   $(OBJ_DIR)$(MT)\box.obj \
   $(OBJ_DIR)$(MT)\chrasc.obj \
   $(OBJ_DIR)$(MT)\colorind.obj \
   $(OBJ_DIR)$(MT)\console.obj \
   $(OBJ_DIR)$(MT)\copyfile.obj \
   $(OBJ_DIR)$(MT)\datec.obj \
   $(OBJ_DIR)$(MT)\dates.obj \
   $(OBJ_DIR)$(MT)\dateshb.obj \
   $(OBJ_DIR)$(MT)\datesx.obj \
   $(OBJ_DIR)$(MT)\defpath.obj \
   $(OBJ_DIR)$(MT)\descend.obj \
   $(OBJ_DIR)$(MT)\dirdrive.obj \
   $(OBJ_DIR)$(MT)\direct.obj \
   $(OBJ_DIR)$(MT)\diskspac.obj \
   $(OBJ_DIR)$(MT)\disksphb.obj \
   $(OBJ_DIR)$(MT)\empty.obj \
   $(OBJ_DIR)$(MT)\file.obj \
   $(OBJ_DIR)$(MT)\filehb.obj \
   $(OBJ_DIR)$(MT)\filesys.obj \
   $(OBJ_DIR)$(MT)\fkmax.obj \
   $(OBJ_DIR)$(MT)\fnsplit.obj \
   $(OBJ_DIR)$(MT)\fssize.obj \
   $(OBJ_DIR)$(MT)\fstemp.obj \
   $(OBJ_DIR)$(MT)\gete.obj \
   $(OBJ_DIR)$(MT)\gt.obj \
   $(OBJ_DIR)$(MT)\gtapi.obj \
   $(OBJ_DIR)$(MT)\gtapiu.obj \
   $(OBJ_DIR)$(MT)\gx.obj \
   $(OBJ_DIR)$(MT)\hardcr.obj \
   $(OBJ_DIR)$(MT)\hbcompress.obj \
   $(OBJ_DIR)$(MT)\hbffind.obj \
   $(OBJ_DIR)$(MT)\hbrandom.obj \
   $(OBJ_DIR)$(MT)\hbsrlraw.obj \
   $(OBJ_DIR)$(MT)\idle.obj \
   $(OBJ_DIR)$(MT)\inkey.obj \
   $(OBJ_DIR)$(MT)\is.obj \
   $(OBJ_DIR)$(MT)\isprint.obj \
   $(OBJ_DIR)$(MT)\langapi.obj \
   $(OBJ_DIR)$(MT)\left.obj \
   $(OBJ_DIR)$(MT)\len.obj \
   $(OBJ_DIR)$(MT)\lennum.obj \
   $(OBJ_DIR)$(MT)\math.obj \
   $(OBJ_DIR)$(MT)\maxrow.obj \
   $(OBJ_DIR)$(MT)\memofile.obj \
   $(OBJ_DIR)$(MT)\memoline.obj \
   $(OBJ_DIR)$(MT)\minmax.obj \
   $(OBJ_DIR)$(MT)\mlcount.obj \
   $(OBJ_DIR)$(MT)\mlpos.obj \
   $(OBJ_DIR)$(MT)\mlctopos.obj \
   $(OBJ_DIR)$(MT)\mpostolc.obj \
   $(OBJ_DIR)$(MT)\mod.obj \
   $(OBJ_DIR)$(MT)\mouseapi.obj \
   $(OBJ_DIR)$(MT)\mousex.obj \
   $(OBJ_DIR)$(MT)\mtran.obj \
   $(OBJ_DIR)$(MT)\natmsg.obj \
   $(OBJ_DIR)$(MT)\net.obj \
   $(OBJ_DIR)$(MT)\oemansi.obj \
   $(OBJ_DIR)$(MT)\oldbox.obj \
   $(OBJ_DIR)$(MT)\oldclear.obj \
   $(OBJ_DIR)$(MT)\pad.obj \
   $(OBJ_DIR)$(MT)\padc.obj \
   $(OBJ_DIR)$(MT)\padl.obj \
   $(OBJ_DIR)$(MT)\padr.obj \
   $(OBJ_DIR)$(MT)\philes.obj \
   $(OBJ_DIR)$(MT)\philes53.obj \
   $(OBJ_DIR)$(MT)\philesx.obj \
   $(OBJ_DIR)$(MT)\rat.obj \
   $(OBJ_DIR)$(MT)\regex.obj \
   $(OBJ_DIR)$(MT)\replic.obj \
   $(OBJ_DIR)$(MT)\right.obj \
   $(OBJ_DIR)$(MT)\round.obj \
   $(OBJ_DIR)$(MT)\run.obj \
   $(OBJ_DIR)$(MT)\samples.obj \
   $(OBJ_DIR)$(MT)\saverest.obj \
   $(OBJ_DIR)$(MT)\scroll.obj \
   $(OBJ_DIR)$(MT)\seconds.obj \
   $(OBJ_DIR)$(MT)\set.obj \
   $(OBJ_DIR)$(MT)\setcolor.obj \
   $(OBJ_DIR)$(MT)\setcurs.obj \
   $(OBJ_DIR)$(MT)\setkey.obj \
   $(OBJ_DIR)$(MT)\setpos.obj \
   $(OBJ_DIR)$(MT)\setposbs.obj \
   $(OBJ_DIR)$(MT)\shadow.obj \
   $(OBJ_DIR)$(MT)\soundex.obj \
   $(OBJ_DIR)$(MT)\space.obj \
   $(OBJ_DIR)$(MT)\spfiles.obj \
   $(OBJ_DIR)$(MT)\str.obj \
   $(OBJ_DIR)$(MT)\strcase.obj \
   $(OBJ_DIR)$(MT)\strings.obj \
   $(OBJ_DIR)$(MT)\strmatch.obj \
   $(OBJ_DIR)$(MT)\strtran.obj \
   $(OBJ_DIR)$(MT)\strzero.obj \
   $(OBJ_DIR)$(MT)\stuff.obj \
   $(OBJ_DIR)$(MT)\substr.obj \
   $(OBJ_DIR)$(MT)\teditorl.obj \
   $(OBJ_DIR)$(MT)\tone.obj \
   $(OBJ_DIR)$(MT)\tprint.obj \
   $(OBJ_DIR)$(MT)\tprinter.obj \
   $(OBJ_DIR)$(MT)\trace.obj \
   $(OBJ_DIR)$(MT)\transfrm.obj \
   $(OBJ_DIR)$(MT)\trim.obj \
   $(OBJ_DIR)$(MT)\type.obj \
   $(OBJ_DIR)$(MT)\val.obj \
   $(OBJ_DIR)$(MT)\valtostr.obj \
   $(OBJ_DIR)$(MT)\valtype.obj \
   $(OBJ_DIR)$(MT)\version.obj \
   $(OBJ_DIR)$(MT)\word.obj \
   $(OBJ_DIR)$(MT)\xhelp.obj \
   $(OBJ_DIR)$(MT)\xsavescr.obj \
   \
   $(OBJ_DIR)$(MT)\achoice.obj \
   $(OBJ_DIR)$(MT)\adir.obj \
   $(OBJ_DIR)$(MT)\alert.obj \
   $(OBJ_DIR)$(MT)\arrayblk.obj \
   $(OBJ_DIR)$(MT)\browdb.obj \
   $(OBJ_DIR)$(MT)\browdbx.obj \
   $(OBJ_DIR)$(MT)\browse.obj \
   $(OBJ_DIR)$(MT)\checkbox.obj \
   $(OBJ_DIR)$(MT)\color53.obj \
   $(OBJ_DIR)$(MT)\cstr.obj \
   $(OBJ_DIR)$(MT)\cstruct.obj \
   $(OBJ_DIR)$(MT)\dbedit.obj \
   $(OBJ_DIR)$(MT)\dbdelim.obj \
   $(OBJ_DIR)$(MT)\dbsdf.obj \
   $(OBJ_DIR)$(MT)\devoutp.obj \
   $(OBJ_DIR)$(MT)\dircmd.obj \
   $(OBJ_DIR)$(MT)\dummy.obj \
   $(OBJ_DIR)$(MT)\errorsys.obj \
   $(OBJ_DIR)$(MT)\fieldbl.obj \
   $(OBJ_DIR)$(MT)\getlist.obj \
   $(OBJ_DIR)$(MT)\getsys.obj \
   $(OBJ_DIR)$(MT)\hbserial.obj \
   $(OBJ_DIR)$(MT)\input.obj \
   $(OBJ_DIR)$(MT)\listbox.obj \
   $(OBJ_DIR)$(MT)\memoedit.obj \
   $(OBJ_DIR)$(MT)\memvarbl.obj \
   $(OBJ_DIR)$(MT)\menuto.obj \
   $(OBJ_DIR)$(MT)\mssgline.obj \
   $(OBJ_DIR)$(MT)\objfunc.obj \
   $(OBJ_DIR)$(MT)\perfuncs.obj \
   $(OBJ_DIR)$(MT)\persist.obj \
   $(OBJ_DIR)$(MT)\profiler.obj \
   $(OBJ_DIR)$(MT)\pushbtn.obj \
   $(OBJ_DIR)$(MT)\radiobtn.obj \
   $(OBJ_DIR)$(MT)\radiogrp.obj \
   $(OBJ_DIR)$(MT)\readkey.obj \
   $(OBJ_DIR)$(MT)\readvar.obj \
   $(OBJ_DIR)$(MT)\scrollbr.obj \
   $(OBJ_DIR)$(MT)\setfunc.obj \
   $(OBJ_DIR)$(MT)\setta.obj \
   $(OBJ_DIR)$(MT)\tbcolumn.obj \
   $(OBJ_DIR)$(MT)\tbrowse.obj \
   $(OBJ_DIR)$(MT)\tclass.obj \
   $(OBJ_DIR)$(MT)\teditor.obj \
   $(OBJ_DIR)$(MT)\terror.obj \
   $(OBJ_DIR)$(MT)\text.obj \
   $(OBJ_DIR)$(MT)\tget.obj \
   $(OBJ_DIR)$(MT)\tgetint.obj \
   $(OBJ_DIR)$(MT)\tgetlist.obj \
   $(OBJ_DIR)$(MT)\tlabel.obj \
   $(OBJ_DIR)$(MT)\tmenuitm.obj \
   $(OBJ_DIR)$(MT)\tobject.obj \
   $(OBJ_DIR)$(MT)\tpopup.obj \
   $(OBJ_DIR)$(MT)\traceprg.obj \
   $(OBJ_DIR)$(MT)\treport.obj \
   $(OBJ_DIR)$(MT)\ttable.obj \
   $(OBJ_DIR)$(MT)\ttextlin.obj \
   $(OBJ_DIR)$(MT)\ttopbar.obj \
   $(OBJ_DIR)$(MT)\typefile.obj \
   $(OBJ_DIR)$(MT)\wait.obj \
   $(OBJ_DIR)$(MT)\win32ole.obj

#
# RTL.LIB rules
#
# only in MT mode

!ifdef HB_MT

{$(RPC_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(RPC_DIR)}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

RPC_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\trpc.obj \
   $(OBJ_DIR)$(MT)\trpccli.obj 
!endif

#
# LANG.LIB rules
#

{$(LANG_DIR)}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

LANG_LIB_OBJS = \
   $(OBJ_DIR)\msgca.obj \
   $(OBJ_DIR)\msgcs852.obj \
   $(OBJ_DIR)\msgcsiso.obj \
   $(OBJ_DIR)\msgcskam.obj \
   $(OBJ_DIR)\msgcswin.obj \
   $(OBJ_DIR)\msgde.obj \
   $(OBJ_DIR)\msgen.obj \
   $(OBJ_DIR)\msgeo.obj \
   $(OBJ_DIR)\msges.obj \
   $(OBJ_DIR)\msgeu.obj \
   $(OBJ_DIR)\msgfr.obj \
   $(OBJ_DIR)\msggl.obj \
   $(OBJ_DIR)\msghe862.obj \
   $(OBJ_DIR)\msghewin.obj \
   $(OBJ_DIR)\msghr852.obj \
   $(OBJ_DIR)\msghriso.obj \
   $(OBJ_DIR)\msghu852.obj \
   $(OBJ_DIR)\msghucwi.obj \
   $(OBJ_DIR)\msghuwin.obj \
   $(OBJ_DIR)\msgid.obj \
   $(OBJ_DIR)\msgis850.obj \
   $(OBJ_DIR)\msgit.obj \
   $(OBJ_DIR)\msgko.obj \
   $(OBJ_DIR)\msgpl852.obj \
   $(OBJ_DIR)\msgpliso.obj \
   $(OBJ_DIR)\msgplmaz.obj \
   $(OBJ_DIR)\msgpt.obj \
   $(OBJ_DIR)\msgro.obj \
   $(OBJ_DIR)\msgru866.obj \
   $(OBJ_DIR)\msgruwin.obj \
   $(OBJ_DIR)\msgsr852.obj \
   $(OBJ_DIR)\msgsriso.obj \
   $(OBJ_DIR)\msgzhgb.obj \
   $(OBJ_DIR)\msgzhb5.obj

#
# MACRO.LIB rules
#

{$(MACRO_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

MACRO_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\macroy.obj \
   $(OBJ_DIR)$(MT)\macroa.obj \
   $(OBJ_DIR)$(MT)\macrob.obj \
   $(OBJ_DIR)$(MT)\macroc.obj \
   $(OBJ_DIR)$(MT)\macroslx.obj

#
# RDD.LIB rules
#

{$(RDD_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(RDD_DIR)}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

RDD_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\dbcmd.obj \
   $(OBJ_DIR)$(MT)\workarea.obj \
   $(OBJ_DIR)$(MT)\dbf1.obj \
   $(OBJ_DIR)$(MT)\dbnubs.obj \
   $(OBJ_DIR)$(MT)\delim1.obj \
   $(OBJ_DIR)$(MT)\sdf1.obj \
   \
   $(OBJ_DIR)$(MT)\dbf0.obj \
   $(OBJ_DIR)$(MT)\dbtotal.obj \
   $(OBJ_DIR)$(MT)\dbfuncs.obj \
   $(OBJ_DIR)$(MT)\dblist.obj \
   $(OBJ_DIR)$(MT)\dbsort.obj \
   $(OBJ_DIR)$(MT)\hbdbsort.obj \
   $(OBJ_DIR)$(MT)\dbstrux.obj \
   $(OBJ_DIR)$(MT)\dbupdat.obj \
   $(OBJ_DIR)$(MT)\delim0.obj \
   $(OBJ_DIR)$(MT)\rddord.obj \
   $(OBJ_DIR)$(MT)\rddsys.obj \
   $(OBJ_DIR)$(MT)\sdf0.obj

#
# NULSYS.LIB rules
#

{$(RDD_DIR)\nulsys}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

{$(RDD_DIR)\nulsys}.prg{$(OBJ_DIR)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $*.c

NULSYS_LIB_OBJS = \
   $(OBJ_DIR)\nulsys.obj

#
# DBFNTX.LIB rules
#

{$(RDD_DIR)\dbfntx}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(RDD_DIR)\dbfntx}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

DBFNTX_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\dbfntx1.obj \
   \
   $(OBJ_DIR)$(MT)\dbfntx0.obj

#
# DBFCDX.LIB rules
#

{$(RDD_DIR)\dbfcdx}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(RDD_DIR)\dbfcdx}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

DBFCDX_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\dbfcdx1.obj \
   \
   $(OBJ_DIR)$(MT)\dbfcdx0.obj

#
# PP.LIB rules
#

{$(PP_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

PP_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\ppcore.obj \
   $(OBJ_DIR)$(MT)\ppcomp.obj \
   $(OBJ_DIR)$(MT)\pplib.obj \
   $(OBJ_DIR)$(MT)\pptable.obj \
   $(OBJ_DIR)$(MT)\pragma.obj

#
# DEBUG.LIB rules
#

{$(DEBUG_DIR)}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

{$(DEBUG_DIR)}.prg{$(OBJ_DIR)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $*.c

DEBUG_LIB_OBJS = \
   $(OBJ_DIR)\dbgmenu.obj \
   $(OBJ_DIR)\dbgtmenu.obj \
   $(OBJ_DIR)\dbgtmitm.obj \
   $(OBJ_DIR)\dbgtwin.obj \
   $(OBJ_DIR)\debugger.obj \
   $(OBJ_DIR)\dbgtarr.obj \
   $(OBJ_DIR)\dbgtobj.obj \
   $(OBJ_DIR)\tbrwtext.obj \
   $(OBJ_DIR)\dbgwa.obj

#
# COMMON.LIB rules
#

{$(COMMON_DIR)}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

COMMON_LIB_OBJS = \
   $(OBJ_DIR)\hbfhnd.obj \
   $(OBJ_DIR)\hbfsapi.obj \
   $(OBJ_DIR)\hbgete.obj \
   $(OBJ_DIR)\hbhash.obj \
   $(OBJ_DIR)\hbstr.obj \
   $(OBJ_DIR)\hbtrace.obj \
   $(OBJ_DIR)\hbver.obj \
   $(OBJ_DIR)\expropt1.obj \
   $(OBJ_DIR)\expropt2.obj \
   $(OBJ_DIR)\reserved.obj

#
# VM.LIB rules
#

{$(VM_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(VM_DIR)}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

VM_LIB_OBJS = \
   $(OBJ_DIR)$(MT)\arrays.obj \
   $(OBJ_DIR)$(MT)\arrayshb.obj \
   $(OBJ_DIR)$(MT)\asort.obj \
   $(OBJ_DIR)$(MT)\break.obj \
   $(OBJ_DIR)$(MT)\classes.obj \
   $(OBJ_DIR)$(MT)\cmdarg.obj \
   $(OBJ_DIR)$(MT)\codebloc.obj \
   $(OBJ_DIR)$(MT)\debug.obj \
   $(OBJ_DIR)$(MT)\do.obj \
   $(OBJ_DIR)$(MT)\dynsym.obj \
   $(OBJ_DIR)$(MT)\errorapi.obj \
   $(OBJ_DIR)$(MT)\estack.obj \
   $(OBJ_DIR)$(MT)\eval.obj \
   $(OBJ_DIR)$(MT)\evalhb.obj \
   $(OBJ_DIR)$(MT)\extend.obj \
   $(OBJ_DIR)$(MT)\fm.obj \
   $(OBJ_DIR)$(MT)\garbage.obj \
   $(OBJ_DIR)$(MT)\hvm.obj \
   $(OBJ_DIR)$(MT)\inet.obj \
   $(OBJ_DIR)$(MT)\initexit.obj \
   $(OBJ_DIR)$(MT)\initsymb.obj \
   $(OBJ_DIR)$(MT)\itemapi.obj \
   $(OBJ_DIR)$(MT)\fastitem.obj \
   $(OBJ_DIR)$(MT)\macro.obj \
   $(OBJ_DIR)$(MT)\maindll.obj \
   $(OBJ_DIR)$(MT)\mainstd.obj \
   $(OBJ_DIR)$(MT)\mainwin.obj \
   $(OBJ_DIR)$(MT)\memvars.obj \
   $(OBJ_DIR)$(MT)\memvclip.obj \
   $(OBJ_DIR)$(MT)\pcount.obj \
   $(OBJ_DIR)$(MT)\proc.obj \
   $(OBJ_DIR)$(MT)\pvalue.obj \
   $(OBJ_DIR)$(MT)\runner.obj \
   $(OBJ_DIR)$(MT)\thread.obj \
   \
   $(OBJ_DIR)$(MT)\harbinit.obj

#
# GTCGI.LIB rules
#

{$(RTL_DIR)\gtcgi}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

GTCGI_LIB_OBJS = \
   $(OBJ_DIR)\gtcgi.obj \
   $(OBJ_DIR)\mousecgi.obj

#
# GTDOS.LIB rules
#

{$(RTL_DIR)\gtdos}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

GTDOS_LIB_OBJS = \
   $(OBJ_DIR)\gtdos.obj \
   $(OBJ_DIR)\mousedos.obj

#
# GTPCA.LIB rules
#

{$(RTL_DIR)\gtpca}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

GTPCA_LIB_OBJS = \
   $(OBJ_DIR)\gtpca.obj \
   $(OBJ_DIR)\mousepca.obj

#
# GTSTD.LIB rules
#

{$(RTL_DIR)\gtstd}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

GTSTD_LIB_OBJS = \
   $(OBJ_DIR)\gtstd.obj \
   $(OBJ_DIR)\mousestd.obj

#
# GTWIN.LIB rules
#

{$(RTL_DIR)\gtwin}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

GTWIN_LIB_OBJS = \
   $(OBJ_DIR)\gtwin.obj \
   $(OBJ_DIR)\mousewin.obj

#
# SAMPLES.LIB rules
#
{$(SAMPLES_DIR)}.c{$(OBJ_DIR)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)\ $<

SAMPLES_LIB_OBJS =  \
   $(OBJ_DIR)\date.obj   \
   $(OBJ_DIR)\dbf.obj    \
   $(OBJ_DIR)\environ.obj \
   $(OBJ_DIR)\gauge.obj  \
   $(OBJ_DIR)\num.obj    \
   $(OBJ_DIR)\stack.obj   \
   $(OBJ_DIR)\status.obj \
   $(OBJ_DIR)\time.obj

#
# ODBC.LIB rules
#
{$(ODBC_DIR)}.c{$(OBJ_DIR)$(MT)}.obj:
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $<

{$(ODBC_DIR)}.prg{$(OBJ_DIR)$(MT)}.obj:
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $<
   $(CC) $(CLIBFLAGS) -Fo$(OBJ_DIR)$(MT)\ $*.c

ODBC_LIB_OBJS =       \
      $(OBJ_DIR)$(MT)\odbc.obj \
      $(OBJ_DIR)$(MT)\todbc.obj

#
# Our default target
#
Targets= \
   $(COMMON_LIB) \
   $(PP_LIB) \
   $(HARBOUR_EXE) \
   $(VM_LIB) \
   $(RTL_LIB) \
   $(MACRO_LIB) \
   $(DEBUG_LIB) \
   $(LANG_LIB) \
   $(RDD_LIB) \
   $(NULSYS_LIB) \
   $(DBFNTX_LIB) \
   $(DBFCDX_LIB) \
   $(HB_GT_LIBS) \
   $(SAMPLES_LIB) \
   $(ODBC_LIB) \
   $(RPC_LIB) \
   $(HBRUN_EXE) \
   $(HBPP_EXE) \
   $(HBTEST_EXE) \
   $(HBDOC_EXE) \
   $(HBMAKE_EXE)


!if ( "$(MK_FLAGS:Y=)"=="A" )

all: \
   CLEAN \
   $(TARGETS)

MK_FLAGS = $(MK_FLAGS:A=)

!else

all: \
   $(TARGETS)

!endif

CLEAN:
   -@if exist $(OBJ_DIR)\*.obj $(DEL) $(OBJ_DIR)\*.obj > nul
   -@if exist $(OBJ_DIR)\*.c $(DEL) $(OBJ_DIR)\*.c > nul
   -@if exist $(OBJ_DIR)\*.h $(DEL) $(OBJ_DIR)\*.h > nul
   -@if exist $(OBJ_DIR)\*.pch $(DEL) $(OBJ_DIR)\*.pch > nul
   -@if exist $(OBJ_DIR)MT\*.obj $(DEL) $(OBJ_DIR)MT\*.obj > nul
   -@if exist $(OBJ_DIR)MT\*.c $(DEL) $(OBJ_DIR)MT\*.c > nul
   -@if exist $(OBJ_DIR)MT\*.h $(DEL) $(OBJ_DIR)MT\*.h > nul
   -@if exist $(OBJ_DIR)MT\*.pch $(DEL) $(OBJ_DIR)MT\*.pch > nul
   -@if exist $(LIB_DIR)\*.lib $(DEL) $(LIB_DIR)\*.lib > nul
   -@if exist $(BIN_DIR)\*.exe $(DEL) $(BIN_DIR)\*.exe > nul
   -@if exist $(BIN_DIR)\*.map $(DEL) $(BIN_DIR)\*.map > nul
   -@if exist $(BIN_DIR)\*.pdb $(DEL) $(BIN_DIR)\*.pdb > nul
   -@if exist $(BIN_DIR)\*.ilk $(DEL) $(BIN_DIR)\*.ilk > nul

$(HBPP_EXE) : \
   $(HBPP_DIR)\hbpp.c
   $(CC) $(CFLAGS) -Fo$(OBJ_DIR)$(MT)\  $** -o $(HBPP_EXE) /link $(LDFLAGS) $(PP_LIB) $(COMMON_LIB)

#
# HBRUN.EXE rules
#

$(HBRUN_EXE) : \
   $(HBRUN_DIR)\hbrun.prg \
   $(HBRUN_DIR)\external.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $**
   $(CC) $(CFLAGS) -Fo$(OBJ_DIR)$(MT)\ $(OBJ_DIR)$(MT)\hbrun.c $(OBJ_DIR)$(MT)\external.c -o $(HBRUN_EXE) /link $(LDFLAGS) $(LIBS2)

#
# HBTEST.EXE rules
#

$(HBTEST_EXE) : \
   $(HBTEST_DIR)\hbtest.prg \
   $(HBTEST_DIR)\rt_array.prg \
   $(HBTEST_DIR)\rt_date.prg \
   $(HBTEST_DIR)\rt_file.prg \
   $(HBTEST_DIR)\rt_hvm.prg \
   $(HBTEST_DIR)\rt_hvma.prg \
   $(HBTEST_DIR)\rt_math.prg \
   $(HBTEST_DIR)\rt_misc.prg \
   $(HBTEST_DIR)\rt_str.prg \
   $(HBTEST_DIR)\rt_stra.prg \
   $(HBTEST_DIR)\rt_trans.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $**
   $(CC) $(CFLAGS) -Fo$(OBJ_DIR)$(MT)\ $(OBJ_DIR)$(MT)\hbtest.c \
                                  $(OBJ_DIR)$(MT)\rt_array.c \
                                  $(OBJ_DIR)$(MT)\rt_date.c \
                                  $(OBJ_DIR)$(MT)\rt_file.c \
                                  $(OBJ_DIR)$(MT)\rt_hvm.c \
                                  $(OBJ_DIR)$(MT)\rt_hvma.c \
                                  $(OBJ_DIR)$(MT)\rt_math.c \
                                  $(OBJ_DIR)$(MT)\rt_misc.c \
                                  $(OBJ_DIR)$(MT)\rt_str.c \
                                  $(OBJ_DIR)$(MT)\rt_stra.c \
                                  $(OBJ_DIR)$(MT)\rt_trans.c \
                   -o $(HBTEST_EXE) /link $(LDFLAGS) /FORCE:MULTIPLE $(LIBS) user32.lib winspool.lib ole32.lib oleaut32.lib

#
# HBDOC.EXE rules
#

!ifdef HB_DOC_PDF
PDFHBDOC =  $(OBJ_DIR)$(MT)\pdfhbdoc.obj
GENPDF1 = $(OBJ_DIR)$(MT)\genpdf1.obj
!endif

$(HBDOC_EXE) : \
   $(HBDOC_DIR)\hbdoc.prg \
   $(HBDOC_DIR)\genchm.prg \
   $(HBDOC_DIR)\genos2.prg \
   $(HBDOC_DIR)\gentrf.prg \
   $(HBDOC_DIR)\genng.prg  \
   $(HBDOC_DIR)\genhtm.prg \
   $(HBDOC_DIR)\genrtf.prg \
   $(HBDOC_DIR)\genhpc.prg \
   $(HBDOC_DIR)\genasc.prg \
   $(HBDOC_DIR)\html.prg \
   $(HBDOC_DIR)\ng.prg \
   $(HBDOC_DIR)\os2.prg \
   $(HBDOC_DIR)\rtf.prg \
   $(HBDOC_DIR)\troff.prg \
   $(HBDOC_DIR)\fclass1.prg \
   $(HBDOC_DIR)\ffile1.prg \
   $(HBDOC_DIR)\ft_funcs.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $**
   $(CC) $(CFLAGS) -Fo$(OBJ_DIR)$(MT)\ $(OBJ_DIR)$(MT)\hbdoc.c \
                                  $(OBJ_DIR)$(MT)\genchm.c \
                                  $(OBJ_DIR)$(MT)\genos2.c \
                                  $(OBJ_DIR)$(MT)\gentrf.c \
                                  $(OBJ_DIR)$(MT)\genng.c \
                                  $(OBJ_DIR)$(MT)\genhtm.c \
                                  $(OBJ_DIR)$(MT)\genrtf.c \
                                  $(OBJ_DIR)$(MT)\genhpc.c \
                                  $(OBJ_DIR)$(MT)\genasc.c \
                                  $(OBJ_DIR)$(MT)\html.c \
                                  $(OBJ_DIR)$(MT)\ng.c \
                                  $(OBJ_DIR)$(MT)\os2.c \
                                  $(OBJ_DIR)$(MT)\rtf.c \
                                  $(OBJ_DIR)$(MT)\troff.c \
                                  $(OBJ_DIR)$(MT)\fclass1.c \
                                  $(OBJ_DIR)$(MT)\ffile1.c \
                                  $(OBJ_DIR)$(MT)\ft_funcs.c \
                   -o $(HBDOC_EXE) /link $(LDFLAGS) /FORCE:MULTIPLE $(LIBS2) $(PDFHBDOC) $(GENPDF1)

#
# HBMAKE.EXE rules
#

$(HBMAKE_EXE) : \
   $(HBMAKE_DIR)\hbmake.prg \
   $(HBMAKE_DIR)\hbmutils.prg \
   $(HBMAKE_DIR)\radios.prg \
   $(HBMAKE_DIR)\checks.prg \
   $(HBMAKE_DIR)\fclass1.prg \
   $(HBMAKE_DIR)\ffile1.prg  \
   $(HBMAKE_DIR)\ft_funcs.prg \
   $(HBMAKE_DIR)\pickarry.prg \
   $(HBMAKE_DIR)\pickfile.prg \
   $(HBMAKE_DIR)\prb_stak.prg
   $(HARBOUR_EXE) $(HARBOURFLAGS) -o$(OBJ_DIR)$(MT)\ $**
   $(CC) $(CFLAGS) -Fo$(OBJ_DIR)$(MT)\ $(OBJ_DIR)$(MT)\hbmake.c \
                                  $(OBJ_DIR)$(MT)\hbmutils.c \
                                  $(OBJ_DIR)$(MT)\radios.c \
                                  $(OBJ_DIR)$(MT)\checks.c \
                                  $(OBJ_DIR)$(MT)\fclass1.c \
                                  $(OBJ_DIR)$(MT)\ffile1.c \
                                  $(OBJ_DIR)$(MT)\ft_funcs.c \
                                  $(OBJ_DIR)$(MT)\pickarry.c \
                                  $(OBJ_DIR)$(MT)\pickfile.c \
                                  $(OBJ_DIR)$(MT)\prb_stak.c \
                                  $(HBMAKE_DIR)\hbmlang.c \
                   -o $(HBMAKE_EXE) /link $(LDFLAGS) /FORCE:MULTIPLE $(LIBS2)

#
# HARBOUR.EXE rules
#

$(HARBOUR_EXE) : \
   $(COMPILER_DIR)\harbour.c \
   $(OBJ_DIR)$(MT)\harboury.c \
   $(COMPILER_DIR)\hbslex.c \
   $(COMPILER_DIR)\cmdcheck.c \
   $(COMPILER_DIR)\hbusage.c \
   $(COMPILER_DIR)\hbident.c \
   $(COMPILER_DIR)\hbpcode.c \
   $(COMPILER_DIR)\hbfix.c \
   $(COMPILER_DIR)\hbfunchk.c \
   $(COMPILER_DIR)\hbgenerr.c \
   $(COMPILER_DIR)\genobj32.c \
   $(COMPILER_DIR)\genc.c \
   $(COMPILER_DIR)\gencobj.c \
   $(COMPILER_DIR)\genhrb.c \
   $(COMPILER_DIR)\genjava.c \
   $(COMPILER_DIR)\expropta.c \
   $(COMPILER_DIR)\exproptb.c \
   $(COMPILER_DIR)\exproptc.c
   -$(ECHO) > $(OBJ_DIR)$(MT)\unistd.h
   $(CC) $(CFLAGS) -I$(OBJ_DIR)$(MT) -Fo$(OBJ_DIR)$(MT)\ -W3 $** -o $(HARBOUR_EXE) /link $(LDFLAGS) $(PP_LIB) $(COMMON_LIB)
   -$(DEL) $(OBJ_DIR)$(MT)\unistd.h

#
# Library dependencies and build rules
#

$(RTL_LIB) : $(RTL_LIB_OBJS)
   lib /out:$@ $**

!ifdef HB_MT
$(RPC_LIB) : $(RPC_LIB_OBJS)
   lib /out:$@ $**
!endif

$(COMMON_LIB) : $(COMMON_LIB_OBJS)
   lib /out:$@ $**

$(DEBUG_LIB) : $(DEBUG_LIB_OBJS)
   lib /out:$@ $**

$(MACRO_LIB) : $(MACRO_LIB_OBJS)
   lib /out:$@ $**

$(PP_LIB) : $(PP_LIB_OBJS)
   lib /out:$@ $**

$(LANG_LIB) : $(LANG_LIB_OBJS)
   lib /out:$@ $**

$(RDD_LIB) : $(RDD_LIB_OBJS)
   lib /out:$@ $**

$(DBFCDX_LIB) : $(DBFCDX_LIB_OBJS)
   lib /out:$@ $**

$(DBFNTX_LIB) : $(DBFNTX_LIB_OBJS)
   lib /out:$@ $**

$(NULSYS_LIB) : $(NULSYS_LIB_OBJS)
   lib /out:$@ $**

$(VM_LIB) : $(VM_LIB_OBJS)
   lib /out:$@ $**

$(GTCGI_LIB) : $(GTCGI_LIB_OBJS)
   lib /out:$@ $**

$(GTPCA_LIB) : $(GTPCA_LIB_OBJS)
   lib /out:$@ $**

$(GTSTD_LIB) : $(GTSTD_LIB_OBJS)
   lib /out:$@ $**

$(GTWIN_LIB) : $(GTWIN_LIB_OBJS)
   lib /out:$@ $**

$(GTDOS_LIB) : $(GTDOS_LIB_OBJS)
   lib /out:$@ $**

$(SAMPLES_LIB) : $(SAMPLES_LIB_OBJS)
   lib /out:$@ $**

$(ODBC_LIB) : $(ODBC_LIB_OBJS)
   lib /out:$@ $**

#
# HARBOUR.EXE dependencies
#

$(OBJ_DIR)$(MT)\harboury.c : $(COMPILER_DIR)\harbour.sly
   bison -d --no-line -o$@ $**

$(OBJ_DIR)$(MT)\hbslex.obj : $(COMPILER_DIR)\hbslex.c
   $(CC) $(CLIBFLAGS) -I$(OBJ_DIR)$(MT) -W3 -Fo$@ $**

#
# MACRO.LIB dependencies
#

$(OBJ_DIR)$(MT)\macroy.c : $(MACRO_DIR)\macro.y
   bison -p hb_comp -d --no-line $** -o$@

$(OBJ_DIR)$(MT)\macroy.obj : $(OBJ_DIR)$(MT)\macroy.c
   $(CC) $(CLIBFLAGS) -W3 -Fo$@  $**

$(OBJ_DIR)$(MT)\macroslx.obj : $(MACRO_DIR)\macroslx.c
   -$(ECHO) > $(OBJ_DIR)$(MT)\unistd.h
   $(CC) $(CLIBFLAGS) -I$(OBJ_DIR)$(MT) -W3 -Fo$@ $**
   -$(DEL) $(OBJ_DIR)$(MT)\unistd.h
